{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\StockHighlights.js\";\nimport React from 'react';\nimport { Typography, Paper, Box, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockHighlights = ({\n  highlights\n}) => {\n  // Extract currency symbol from the highlights data\n  const currencySymbol = highlights.currency_symbol;\n\n  // Create an array of custom highlights with key, label, and transform function\n  const customHighlights = [{\n    key: \"market_capitalization\",\n    label: \"Market Cap\",\n    transform: value => `${currencySymbol}${value}`\n  }, {\n    key: \"pe_ratio\",\n    label: \"P/E Ratio\",\n    transform: value => `${currencySymbol}${value}`\n  }, {\n    key: \"peg_ratio\",\n    label: \"P/E Growth Ratio\",\n    transform: value => `${currencySymbol}${value}`\n  }, {\n    key: \"wall_street_target_price\",\n    label: \"Target Price\",\n    transform: value => `${currencySymbol}${value}`\n  }, {\n    key: \"book_value\",\n    label: \"Book Value\",\n    transform: value => `${currencySymbol}${value}`\n  }];\n\n  // Split the customHighlights array into two parts\n  const leftColumn = customHighlights.slice(0, 3);\n  const rightColumn = customHighlights.slice(3);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'primary.main',\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          color: 'common.white',\n          textAlign: 'center'\n        },\n        children: \"Highlights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: leftColumn.map(({\n            key,\n            label,\n            transform\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: transform ? transform(highlights[key]) : highlights[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: rightColumn.map(({\n            key,\n            label,\n            transform\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: transform ? transform(highlights[key]) : highlights[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = StockHighlights;\nexport default StockHighlights;\nvar _c;\n$RefreshReg$(_c, \"StockHighlights\");","map":{"version":3,"names":["React","Typography","Paper","Box","Grid","jsxDEV","_jsxDEV","StockHighlights","highlights","currencySymbol","currency_symbol","customHighlights","key","label","transform","value","leftColumn","slice","rightColumn","children","sx","bgcolor","p","variant","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","map","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/StockHighlights.js"],"sourcesContent":["import React from 'react';\r\nimport { Typography, Paper, Box, Grid } from '@mui/material';\r\n\r\nconst StockHighlights = ({ highlights }) => {\r\n  // Extract currency symbol from the highlights data\r\n  const currencySymbol = highlights.currency_symbol;\r\n\r\n  // Create an array of custom highlights with key, label, and transform function\r\n  const customHighlights = [\r\n    {\r\n      key: \"market_capitalization\",\r\n      label: \"Market Cap\",\r\n      transform: (value) => `${currencySymbol}${value}`,\r\n    },\r\n    {\r\n      key: \"pe_ratio\",\r\n      label: \"P/E Ratio\",\r\n      transform: (value) => `${currencySymbol}${value}`,\r\n    },\r\n    {\r\n      key: \"peg_ratio\",\r\n      label: \"P/E Growth Ratio\",\r\n      transform: (value) => `${currencySymbol}${value}`,\r\n    },\r\n    {\r\n      key: \"wall_street_target_price\",\r\n      label: \"Target Price\",\r\n      transform: (value) => `${currencySymbol}${value}`,\r\n    },\r\n    {\r\n      key: \"book_value\",\r\n      label: \"Book Value\",\r\n      transform: (value) => `${currencySymbol}${value}`,\r\n    },\r\n  ];\r\n\r\n  // Split the customHighlights array into two parts\r\n  const leftColumn = customHighlights.slice(0, 3);\r\n  const rightColumn = customHighlights.slice(3);\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Highlights</Typography>\r\n      </Box>\r\n      <Paper sx={{ p: 2 }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            {leftColumn.map(({ key, label, transform }) => (\r\n              <div key={key}>\r\n                <Typography variant=\"body1\">{label}</Typography>\r\n                <Typography variant=\"body2\"><b>{transform ? transform(highlights[key]) : highlights[key]}</b></Typography>\r\n              </div>\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {rightColumn.map(({ key, label, transform }) => (\r\n              <div key={key}>\r\n                <Typography variant=\"body1\">{label}</Typography>\r\n                <Typography variant=\"body2\"><b>{transform ? transform(highlights[key]) : highlights[key]}</b></Typography>\r\n              </div>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StockHighlights;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}