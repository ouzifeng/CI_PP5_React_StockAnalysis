{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\CagrPercents.js\";\nimport React from 'react';\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableRow, Paper, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CagrPercent = ({\n  cagrData\n}) => {\n  const cagrItems = [{\n    label: 'Revenue',\n    key: 'total_revenue_cagr'\n  }, {\n    label: 'Gross Profit',\n    key: 'gross_profit_cagr'\n  }, {\n    label: 'Net Income',\n    key: 'net_income_cagr'\n  }];\n  const renderRow = (item, key) => {\n    const formattedValue = (parseFloat(cagrData[item.key]) * 100).toFixed(2) + \"%\";\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: formattedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      margin: 'auto',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'primary.main',\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          color: 'common.white',\n          textAlign: 'center'\n        },\n        children: \"5 Year CAGR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"CAGR Table\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: cagrData ?\n          // Render content if cagrData is available\n          cagrItems.map((item, index) => renderRow(item, index)) :\n          /*#__PURE__*/\n          // Render skeleton loader if cagrData is not available\n          _jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                variant: \"text\",\n                width: 100\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                variant: \"text\",\n                width: 100\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = CagrPercent;\nexport default CagrPercent;\nvar _c;\n$RefreshReg$(_c, \"CagrPercent\");","map":{"version":3,"names":["React","Typography","Table","TableBody","TableCell","TableContainer","TableRow","Paper","Box","jsxDEV","_jsxDEV","CagrPercent","cagrData","cagrItems","label","key","renderRow","item","formattedValue","parseFloat","toFixed","children","component","scope","fileName","_jsxFileName","lineNumber","columnNumber","align","sx","fontWeight","elevation","margin","overflow","bgcolor","p","variant","color","textAlign","map","index","Skeleton","width","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/CagrPercents.js"],"sourcesContent":["import React from 'react';\r\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableRow, Paper, Box } from '@mui/material';\r\n\r\nconst CagrPercent = ({ cagrData }) => {\r\n  const cagrItems = [\r\n    { label: 'Revenue', key: 'total_revenue_cagr' },\r\n    { label: 'Gross Profit', key: 'gross_profit_cagr' },\r\n    { label: 'Net Income', key: 'net_income_cagr' },\r\n  ];\r\n\r\n  const renderRow = (item, key) => {\r\n    const formattedValue = (parseFloat(cagrData[item.key]) * 100).toFixed(2) + \"%\";\r\n\r\n    return (\r\n      <TableRow key={key}>\r\n        <TableCell component=\"th\" scope=\"row\">{item.label}</TableCell>\r\n        <TableCell align=\"right\" sx={{ fontWeight: 'bold' }}>\r\n          {formattedValue}\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n      <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>5 Year CAGR</Typography>\r\n      </Box>\r\n      <TableContainer>\r\n        <Table aria-label=\"CAGR Table\">\r\n          <TableBody>\r\n            {cagrData ? (\r\n              // Render content if cagrData is available\r\n              cagrItems.map((item, index) => renderRow(item, index))\r\n            ) : (\r\n              // Render skeleton loader if cagrData is not available\r\n              <TableRow>\r\n                <TableCell>\r\n                  <Skeleton variant=\"text\" width={100} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Skeleton variant=\"text\" width={100} />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CagrPercent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}