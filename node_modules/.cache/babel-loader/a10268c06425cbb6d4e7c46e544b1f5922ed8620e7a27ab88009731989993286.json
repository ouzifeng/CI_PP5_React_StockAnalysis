{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\common\\\\TradingViewWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TradingViewWidget({\n  symbol\n}) {\n  _s();\n  const container = useRef();\n  useEffect(() => {\n    // Define script variable outside of setTimeout\n    let script;\n\n    // Delay the script insertion to ensure the container is ready\n    const timeoutId = setTimeout(() => {\n      script = document.createElement(\"script\");\n      script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-advanced-chart.js\";\n      script.type = \"text/javascript\";\n      script.async = true;\n      script.innerHTML = JSON.stringify({\n        \"autosize\": true,\n        \"symbol\": symbol,\n        \"interval\": \"1\",\n        \"timezone\": \"Etc/UTC\",\n        \"theme\": \"light\",\n        \"style\": \"3\",\n        \"locale\": \"en\",\n        \"enable_publishing\": false,\n        \"hide_legend\": true,\n        \"support_host\": \"https://www.tradingview.com\"\n      });\n      container.current.appendChild(script);\n    }, 0);\n\n    // Cleanup function to remove the script and clear the timeout\n    return () => {\n      if (container.current && script) {\n        container.current.removeChild(script);\n      }\n      clearTimeout(timeoutId);\n    };\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tradingview-widget-container\",\n    ref: container,\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tradingview-widget-container__widget\",\n      style: {\n        height: \"calc(100% - 32px)\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TradingViewWidget, \"gP936EAkbq44zYYGRnj90r2fLhg=\");\n_c = TradingViewWidget;\nexport default _c2 = /*#__PURE__*/memo(TradingViewWidget);\nvar _c, _c2;\n$RefreshReg$(_c, \"TradingViewWidget\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useRef","memo","jsxDEV","_jsxDEV","TradingViewWidget","symbol","_s","container","script","timeoutId","setTimeout","document","createElement","src","type","async","innerHTML","JSON","stringify","current","appendChild","removeChild","clearTimeout","className","ref","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/common/TradingViewWidget.jsx"],"sourcesContent":["import React, { useEffect, useRef, memo } from 'react';\r\n\r\nfunction TradingViewWidget({ symbol }) {\r\n  const container = useRef();\r\n\r\n  useEffect(() => {\r\n    // Define script variable outside of setTimeout\r\n    let script;\r\n\r\n    // Delay the script insertion to ensure the container is ready\r\n    const timeoutId = setTimeout(() => {\r\n      script = document.createElement(\"script\");\r\n      script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-advanced-chart.js\";\r\n      script.type = \"text/javascript\";\r\n      script.async = true;\r\n      script.innerHTML = JSON.stringify({\r\n        \"autosize\": true,\r\n        \"symbol\": symbol,\r\n        \"interval\": \"1\",\r\n        \"timezone\": \"Etc/UTC\",\r\n        \"theme\": \"light\",\r\n        \"style\": \"3\",\r\n        \"locale\": \"en\",\r\n        \"enable_publishing\": false,\r\n        \"hide_legend\": true,\r\n        \"support_host\": \"https://www.tradingview.com\"\r\n      });\r\n      container.current.appendChild(script);\r\n    }, 0);\r\n\r\n    // Cleanup function to remove the script and clear the timeout\r\n    return () => {\r\n      if (container.current && script) {\r\n        container.current.removeChild(script);\r\n      }\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [symbol]);\r\n\r\n  return (\r\n    <div className=\"tradingview-widget-container\" ref={container} style={{ height: \"100%\", width: \"100%\" }}>\r\n      <div className=\"tradingview-widget-container__widget\" style={{ height: \"calc(100% - 32px)\", width: \"100%\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(TradingViewWidget);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,IAAI,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,iBAAiBA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAMC,SAAS,GAAGP,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,MAAM;;IAEV;IACA,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCF,MAAM,GAAGG,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MACzCJ,MAAM,CAACK,GAAG,GAAG,8EAA8E;MAC3FL,MAAM,CAACM,IAAI,GAAG,iBAAiB;MAC/BN,MAAM,CAACO,KAAK,GAAG,IAAI;MACnBP,MAAM,CAACQ,SAAS,GAAGC,IAAI,CAACC,SAAS,CAAC;QAChC,UAAU,EAAE,IAAI;QAChB,QAAQ,EAAEb,MAAM;QAChB,UAAU,EAAE,GAAG;QACf,UAAU,EAAE,SAAS;QACrB,OAAO,EAAE,OAAO;QAChB,OAAO,EAAE,GAAG;QACZ,QAAQ,EAAE,IAAI;QACd,mBAAmB,EAAE,KAAK;QAC1B,aAAa,EAAE,IAAI;QACnB,cAAc,EAAE;MAClB,CAAC,CAAC;MACFE,SAAS,CAACY,OAAO,CAACC,WAAW,CAACZ,MAAM,CAAC;IACvC,CAAC,EAAE,CAAC,CAAC;;IAEL;IACA,OAAO,MAAM;MACX,IAAID,SAAS,CAACY,OAAO,IAAIX,MAAM,EAAE;QAC/BD,SAAS,CAACY,OAAO,CAACE,WAAW,CAACb,MAAM,CAAC;MACvC;MACAc,YAAY,CAACb,SAAS,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKoB,SAAS,EAAC,8BAA8B;IAACC,GAAG,EAAEjB,SAAU;IAACkB,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eACrGzB,OAAA;MAAKoB,SAAS,EAAC,sCAAsC;MAACE,KAAK,EAAE;QAAEC,MAAM,EAAE,mBAAmB;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChH,CAAC;AAEV;AAAC1B,EAAA,CA1CQF,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AA4C1B,eAAA8B,GAAA,gBAAejC,IAAI,CAACG,iBAAiB,CAAC;AAAC,IAAA6B,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}