{"ast":null,"code":"import React,{useEffect,useRef,memo,useState}from'react';import{Skeleton}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TradingViewWidget(_ref){let{symbol}=_ref;const container=useRef();const[isLoading,setIsLoading]=useState(true);useEffect(()=>{let script;const currentContainer=container.current;const timeoutId=setTimeout(()=>{if(currentContainer){script=document.createElement(\"script\");script.src=\"https://s3.tradingview.com/external-embedding/embed-widget-symbol-overview.js\";script.type=\"text/javascript\";script.async=true;script.innerHTML=JSON.stringify({symbols:symbol,chartOnly:false,width:\"100%\",height:\"100%\",locale:\"en\",colorTheme:\"light\",autosize:true,showVolume:false,showMA:false,hideDateRanges:false,hideMarketStatus:false,hideSymbolLogo:true,scalePosition:\"right\",scaleMode:\"Normal\",fontFamily:\"-apple-system, BlinkMacSystemFont, Trebuchet MS, Roboto, Ubuntu, sans-serif\",fontSize:\"10\",noTimeScale:false,valuesTracking:\"1\",changeMode:\"price-and-percent\",chartType:\"area\",maLineColor:\"#2962FF\",maLineWidth:1,maLength:9,lineWidth:2,lineType:0,dateRanges:[\"1d|1\",\"1m|30\",\"3m|60\",\"12m|1D\",\"60m|1W\",\"all|1M\"]});currentContainer.appendChild(script);// Set loading to false once script is loaded\nscript.onload=()=>{setIsLoading(false);};}},0);// Cleanup function to remove the script and clear the timeout\nreturn()=>{if(currentContainer&&script&&currentContainer.contains(script)){currentContainer.removeChild(script);}clearTimeout(timeoutId);};},[symbol]);return/*#__PURE__*/_jsxs(\"div\",{className:\"tradingview-widget-container\",ref:container,style:{height:\"100%\",width:\"100%\"},children:[isLoading&&/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:\"100%\",height:\"100%\",animation:\"wave\"}),!isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"tradingview-widget-container__widget\",style:{height:\"calc(100% - 32px)\",width:\"100%\"}})]});}export default/*#__PURE__*/memo(TradingViewWidget);","map":{"version":3,"names":["React","useEffect","useRef","memo","useState","Skeleton","jsx","_jsx","jsxs","_jsxs","TradingViewWidget","_ref","symbol","container","isLoading","setIsLoading","script","currentContainer","current","timeoutId","setTimeout","document","createElement","src","type","async","innerHTML","JSON","stringify","symbols","chartOnly","width","height","locale","colorTheme","autosize","showVolume","showMA","hideDateRanges","hideMarketStatus","hideSymbolLogo","scalePosition","scaleMode","fontFamily","fontSize","noTimeScale","valuesTracking","changeMode","chartType","maLineColor","maLineWidth","maLength","lineWidth","lineType","dateRanges","appendChild","onload","contains","removeChild","clearTimeout","className","ref","style","children","variant","animation"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/TradingViewWidget.jsx"],"sourcesContent":["import React, { useEffect, useRef, memo, useState } from 'react';\r\nimport { Skeleton } from '@mui/material';\r\n\r\nfunction TradingViewWidget({ symbol }) {\r\n  const container = useRef();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let script;\r\n    const currentContainer = container.current;\r\n\r\n    const timeoutId = setTimeout(() => {\r\n      if (currentContainer) {\r\n        script = document.createElement(\"script\");\r\n        script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-symbol-overview.js\";\r\n        script.type = \"text/javascript\";\r\n        script.async = true;\r\n        script.innerHTML = JSON.stringify({\r\n          symbols: symbol,\r\n          chartOnly: false,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          locale: \"en\",\r\n          colorTheme: \"light\",\r\n          autosize: true,\r\n          showVolume: false,\r\n          showMA: false,\r\n          hideDateRanges: false,\r\n          hideMarketStatus: false,\r\n          hideSymbolLogo: true,\r\n          scalePosition: \"right\",\r\n          scaleMode: \"Normal\",\r\n          fontFamily: \"-apple-system, BlinkMacSystemFont, Trebuchet MS, Roboto, Ubuntu, sans-serif\",\r\n          fontSize: \"10\",\r\n          noTimeScale: false,\r\n          valuesTracking: \"1\",\r\n          changeMode: \"price-and-percent\",\r\n          chartType: \"area\",\r\n          maLineColor: \"#2962FF\",\r\n          maLineWidth: 1,\r\n          maLength: 9,\r\n          lineWidth: 2,\r\n          lineType: 0,\r\n          dateRanges: [\r\n            \"1d|1\",\r\n            \"1m|30\",\r\n            \"3m|60\",\r\n            \"12m|1D\",\r\n            \"60m|1W\",\r\n            \"all|1M\"\r\n          ]\r\n        });\r\n\r\n        currentContainer.appendChild(script);\r\n\r\n        // Set loading to false once script is loaded\r\n        script.onload = () => {\r\n          setIsLoading(false);\r\n        };\r\n      }\r\n    }, 0);\r\n\r\n    // Cleanup function to remove the script and clear the timeout\r\n    return () => {\r\n      if (currentContainer && script && currentContainer.contains(script)) {\r\n        currentContainer.removeChild(script);\r\n      }\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [symbol]);\r\n\r\n  return (\r\n    <div className=\"tradingview-widget-container\" ref={container} style={{ height: \"100%\", width: \"100%\" }}>\r\n      {isLoading && (\r\n        <Skeleton variant=\"rect\" width=\"100%\" height=\"100%\" animation=\"wave\" />\r\n      )}\r\n      {!isLoading && (\r\n        <div className=\"tradingview-widget-container__widget\" style={{ height: \"calc(100% - 32px)\", width: \"100%\" }}></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(TradingViewWidget);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}