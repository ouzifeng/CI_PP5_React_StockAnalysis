{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\pages\\\\DividendScreener.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DividendScreener() {\n  _s();\n  const {\n    primary_ticker\n  } = useParams();\n  const [stocks, setStocks] = useState([]);\n  const [dividendThreshold, setDividendThreshold] = useState(0);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    if (!primary_ticker) {\n      // Handle the case where primary_ticker is not available in the URL\n      setLoading(false); // Set loading to false\n      return;\n    }\n    const formattedTicker = primary_ticker.replace('-', '.');\n    const fetchStockData = async () => {\n      try {\n        const response = await axios.get(`https://django-stocks-ecbc6bc5e208.herokuapp.com/api/stocks/${formattedTicker}/`, {\n          headers: {\n            'Authorization': `Token 13502af70a55d1fcddf7c094e4418c65904ef6eb`\n          }\n        });\n        if (response.data) {\n          // Check if response contains data\n          setStocks(response.data);\n        } else {\n          console.error('Error fetching stock data:', response.status);\n        }\n        setLoading(false); // Set loading to false when data is fetched\n      } catch (error) {\n        console.error('Error fetching stock data:', error);\n        setLoading(false); // Set loading to false on error\n      }\n    };\n    fetchStockData();\n  }, [primary_ticker]);\n  const handleSliderChange = (event, newValue) => {\n    setDividendThreshold(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"dividend-slider\",\n      gutterBottom: true,\n      children: [\"Dividend Yield Threshold: \", dividendThreshold, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: dividendThreshold,\n      onChange: handleSliderChange,\n      \"aria-labelledby\": \"dividend-slider\",\n      valueLabelDisplay: \"auto\",\n      step: 0.1,\n      marks: true,\n      min: 0,\n      max: 20 // Adjust based on your data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this) // Show loading indicator when data is loading\n      : stocks.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Dividend Yield (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Market Cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"P/E Ratio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: stocks.map(stock => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: stock.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.dividend_yield\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.market_capitalization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.pe_ratio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this)]\n          }, stock.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this) // Show a message when there's no data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(DividendScreener, \"Dw28y2RtyeyewwoT/nv1ifY/6k0=\", false, function () {\n  return [useParams];\n});\n_c = DividendScreener;\nexport default DividendScreener;\nvar _c;\n$RefreshReg$(_c, \"DividendScreener\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Slider","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","CircularProgress","jsxDEV","_jsxDEV","DividendScreener","_s","primary_ticker","stocks","setStocks","dividendThreshold","setDividendThreshold","loading","setLoading","formattedTicker","replace","fetchStockData","response","get","headers","data","console","error","status","handleSliderChange","event","newValue","children","id","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","valueLabelDisplay","step","marks","min","max","length","align","map","stock","component","scope","name","dividend_yield","market_capitalization","pe_ratio","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/pages/DividendScreener.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, CircularProgress } from '@mui/material';\r\n\r\nfunction DividendScreener() {\r\n    const { primary_ticker } = useParams();\r\n    const [stocks, setStocks] = useState([]);\r\n    const [dividendThreshold, setDividendThreshold] = useState(0);\r\n    const [loading, setLoading] = useState(true); // Add loading state\r\n\r\n    useEffect(() => {\r\n        if (!primary_ticker) {\r\n            // Handle the case where primary_ticker is not available in the URL\r\n            setLoading(false); // Set loading to false\r\n            return;\r\n        }\r\n\r\n        const formattedTicker = primary_ticker.replace('-', '.');\r\n\r\n        const fetchStockData = async () => {\r\n            try {\r\n                const response = await axios.get(`https://django-stocks-ecbc6bc5e208.herokuapp.com/api/stocks/${formattedTicker}/`, {\r\n                    headers: {\r\n                        'Authorization': `Token 13502af70a55d1fcddf7c094e4418c65904ef6eb`,\r\n                    },\r\n                });\r\n\r\n                if (response.data) { // Check if response contains data\r\n                    setStocks(response.data);\r\n                } else {\r\n                    console.error('Error fetching stock data:', response.status);\r\n                }\r\n                setLoading(false); // Set loading to false when data is fetched\r\n            } catch (error) {\r\n                console.error('Error fetching stock data:', error);\r\n                setLoading(false); // Set loading to false on error\r\n            }\r\n        };\r\n\r\n        fetchStockData();\r\n    }, [primary_ticker]);\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setDividendThreshold(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography id=\"dividend-slider\" gutterBottom>\r\n                Dividend Yield Threshold: {dividendThreshold}%\r\n            </Typography>\r\n            <Slider\r\n                value={dividendThreshold}\r\n                onChange={handleSliderChange}\r\n                aria-labelledby=\"dividend-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={0.1}\r\n                marks\r\n                min={0}\r\n                max={20} // Adjust based on your data\r\n            />\r\n            <Paper>\r\n                {loading ? (\r\n                    <CircularProgress /> // Show loading indicator when data is loading\r\n                ) : stocks.length > 0 ? (\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell align=\"right\">Dividend Yield (%)</TableCell>\r\n                                <TableCell align=\"right\">Market Cap</TableCell>\r\n                                <TableCell align=\"right\">P/E Ratio</TableCell>\r\n                                {/* Add more columns as needed */}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {stocks.map((stock) => (\r\n                                <TableRow key={stock.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {stock.name}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{stock.dividend_yield}</TableCell>\r\n                                    <TableCell align=\"right\">{stock.market_capitalization}</TableCell>\r\n                                    <TableCell align=\"right\">{stock.pe_ratio}</TableCell>\r\n                                    {/* Add more cells as needed */}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                ) : (\r\n                    <Typography>No data available</Typography> // Show a message when there's no data\r\n                )}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DividendScreener;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}