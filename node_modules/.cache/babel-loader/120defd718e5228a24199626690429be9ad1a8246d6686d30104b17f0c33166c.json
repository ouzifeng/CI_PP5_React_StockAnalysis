{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\common\\\\ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = ({\n  symbol\n}) => {\n  _s();\n  const chartContainerRef = useRef();\n  useEffect(() => {\n    const chart = createChart(chartContainerRef.current, {\n      width: 600,\n      height: 300\n    });\n    const lineSeries = chart.addLineSeries();\n\n    // Fetch chart data\n    fetch(`Your API Endpoint for Chart Data/${symbol}`).then(response => response.json()).then(data => {\n      // Set data for the chart\n      lineSeries.setData(data);\n    }).catch(error => console.error('Error fetching chart data:', error));\n    return () => {\n      // Cleanup the chart on component unmount\n      chart.remove();\n    };\n  }, [symbol]); // Dependency array includes symbol to refetch if symbol changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n_s(ChartComponent, \"ZI1LdXO604IZpmh0kAttG3FSLiA=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","ChartComponent","symbol","_s","chartContainerRef","chart","current","width","height","lineSeries","addLineSeries","fetch","then","response","json","data","setData","catch","error","console","remove","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/common/ChartComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { createChart } from 'lightweight-charts';\r\n\r\nconst ChartComponent = ({ symbol }) => {\r\n    const chartContainerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const chart = createChart(chartContainerRef.current, {\r\n            width: 600,\r\n            height: 300,\r\n        });\r\n\r\n        const lineSeries = chart.addLineSeries();\r\n\r\n        // Fetch chart data\r\n        fetch(`Your API Endpoint for Chart Data/${symbol}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // Set data for the chart\r\n                lineSeries.setData(data);\r\n            })\r\n            .catch(error => console.error('Error fetching chart data:', error));\r\n\r\n        return () => {\r\n            // Cleanup the chart on component unmount\r\n            chart.remove();\r\n        };\r\n    }, [symbol]);  // Dependency array includes symbol to refetch if symbol changes\r\n\r\n    return <div ref={chartContainerRef} />;\r\n};\r\n\r\nexport default ChartComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,iBAAiB,GAAGP,MAAM,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IACZ,MAAMS,KAAK,GAAGP,WAAW,CAACM,iBAAiB,CAACE,OAAO,EAAE;MACjDC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAa,CAAC,CAAC;;IAExC;IACAC,KAAK,CAAE,oCAAmCT,MAAO,EAAC,CAAC,CAC9CU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV;MACAN,UAAU,CAACO,OAAO,CAACD,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;IAEvE,OAAO,MAAM;MACT;MACAb,KAAK,CAACe,MAAM,CAAC,CAAC;IAClB,CAAC;EACL,CAAC,EAAE,CAAClB,MAAM,CAAC,CAAC,CAAC,CAAE;;EAEf,oBAAOF,OAAA;IAAKqB,GAAG,EAAEjB;EAAkB;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1C,CAAC;AAACtB,EAAA,CA3BIF,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}