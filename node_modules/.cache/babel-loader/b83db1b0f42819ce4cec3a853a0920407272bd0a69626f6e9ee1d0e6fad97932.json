{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showLoginSuccessAlert, setShowLoginSuccessAlert] = useState(false);\n  const [showLogoutAlert, setShowLogoutAlert] = useState(false);\n  const [userAvatarUrl, setUserAvatarUrl] = useState(null); // State for storing user avatar URL\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const avatarUrl = localStorage.getItem('avatarUrl');\n    setIsAuthenticated(!!token);\n    if (token && avatarUrl) {\n      setUserAvatarUrl(avatarUrl);\n    }\n  }, []);\n\n  // Auto-dismiss login success alert after 2 seconds\n  useEffect(() => {\n    let timer;\n    if (showLoginSuccessAlert) {\n      timer = setTimeout(() => {\n        setShowLoginSuccessAlert(false);\n      }, 2000);\n    }\n    return () => clearTimeout(timer); // Cleanup the timer\n  }, [showLoginSuccessAlert]);\n\n  // Auto-dismiss logout alert after 2 seconds\n  useEffect(() => {\n    let timer;\n    if (showLogoutAlert) {\n      timer = setTimeout(() => {\n        setShowLogoutAlert(false);\n      }, 2000);\n    }\n    return () => clearTimeout(timer); // Cleanup the timer\n  }, [showLogoutAlert]);\n  const handleLoginSuccess = (token, avatarUrl) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('avatarUrl', avatarUrl); // Store avatar URL in localStorage\n    setIsAuthenticated(true);\n    setUserAvatarUrl(avatarUrl); // Update context with the avatar URL\n    setShowLoginSuccessAlert(true);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('avatarUrl'); // Remove avatar URL from localStorage\n    setIsAuthenticated(false);\n    setUserAvatarUrl(null); // Clear avatar URL from context\n    setShowLogoutAlert(true);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      showLoginSuccessAlert,\n      setShowLoginSuccessAlert,\n      showLogoutAlert,\n      setShowLogoutAlert,\n      userAvatarUrl,\n      setUserAvatarUrl,\n      handleLoginSuccess,\n      handleLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"9I1AUgYD/CrIjt/wqXnnwUfyoQQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","showLoginSuccessAlert","setShowLoginSuccessAlert","showLogoutAlert","setShowLogoutAlert","userAvatarUrl","setUserAvatarUrl","token","localStorage","getItem","avatarUrl","timer","setTimeout","clearTimeout","handleLoginSuccess","setItem","handleLogout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [showLoginSuccessAlert, setShowLoginSuccessAlert] = useState(false);\r\n    const [showLogoutAlert, setShowLogoutAlert] = useState(false);\r\n    const [userAvatarUrl, setUserAvatarUrl] = useState(null); // State for storing user avatar URL\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        const avatarUrl = localStorage.getItem('avatarUrl');\r\n        setIsAuthenticated(!!token);\r\n        if (token && avatarUrl) {\r\n            setUserAvatarUrl(avatarUrl);\r\n        }\r\n    }, []);\r\n\r\n    // Auto-dismiss login success alert after 2 seconds\r\n    useEffect(() => {\r\n        let timer;\r\n        if (showLoginSuccessAlert) {\r\n            timer = setTimeout(() => {\r\n                setShowLoginSuccessAlert(false);\r\n            }, 2000);\r\n        }\r\n        return () => clearTimeout(timer); // Cleanup the timer\r\n    }, [showLoginSuccessAlert]);\r\n\r\n    // Auto-dismiss logout alert after 2 seconds\r\n    useEffect(() => {\r\n        let timer;\r\n        if (showLogoutAlert) {\r\n            timer = setTimeout(() => {\r\n                setShowLogoutAlert(false);\r\n            }, 2000);\r\n        }\r\n        return () => clearTimeout(timer); // Cleanup the timer\r\n    }, [showLogoutAlert]);\r\n\r\n    const handleLoginSuccess = (token, avatarUrl) => {\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('avatarUrl', avatarUrl); // Store avatar URL in localStorage\r\n        setIsAuthenticated(true);\r\n        setUserAvatarUrl(avatarUrl); // Update context with the avatar URL\r\n        setShowLoginSuccessAlert(true);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('avatarUrl'); // Remove avatar URL from localStorage\r\n        setIsAuthenticated(false);\r\n        setUserAvatarUrl(null); // Clear avatar URL from context\r\n        setShowLogoutAlert(true);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            isAuthenticated, \r\n            setIsAuthenticated, \r\n            showLoginSuccessAlert, \r\n            setShowLoginSuccessAlert,\r\n            showLogoutAlert, \r\n            setShowLogoutAlert,\r\n            userAvatarUrl, \r\n            setUserAvatarUrl,\r\n            handleLoginSuccess,\r\n            handleLogout\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1DC,SAAS,CAAC,MAAM;IACZ,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnDT,kBAAkB,CAAC,CAAC,CAACO,KAAK,CAAC;IAC3B,IAAIA,KAAK,IAAIG,SAAS,EAAE;MACpBJ,gBAAgB,CAACI,SAAS,CAAC;IAC/B;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAlB,SAAS,CAAC,MAAM;IACZ,IAAImB,KAAK;IACT,IAAIV,qBAAqB,EAAE;MACvBU,KAAK,GAAGC,UAAU,CAAC,MAAM;QACrBV,wBAAwB,CAAC,KAAK,CAAC;MACnC,CAAC,EAAE,IAAI,CAAC;IACZ;IACA,OAAO,MAAMW,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;EACtC,CAAC,EAAE,CAACV,qBAAqB,CAAC,CAAC;;EAE3B;EACAT,SAAS,CAAC,MAAM;IACZ,IAAImB,KAAK;IACT,IAAIR,eAAe,EAAE;MACjBQ,KAAK,GAAGC,UAAU,CAAC,MAAM;QACrBR,kBAAkB,CAAC,KAAK,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACZ;IACA,OAAO,MAAMS,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;EACtC,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EAErB,MAAMW,kBAAkB,GAAGA,CAACP,KAAK,EAAEG,SAAS,KAAK;IAC7CF,YAAY,CAACO,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;IACpCC,YAAY,CAACO,OAAO,CAAC,WAAW,EAAEL,SAAS,CAAC,CAAC,CAAC;IAC9CV,kBAAkB,CAAC,IAAI,CAAC;IACxBM,gBAAgB,CAACI,SAAS,CAAC,CAAC,CAAC;IAC7BR,wBAAwB,CAAC,IAAI,CAAC;EAClC,CAAC;EAED,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACvBR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;IACtCjB,kBAAkB,CAAC,KAAK,CAAC;IACzBM,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IACxBF,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,oBACIV,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MACzBpB,eAAe;MACfC,kBAAkB;MAClBC,qBAAqB;MACrBC,wBAAwB;MACxBC,eAAe;MACfC,kBAAkB;MAClBC,aAAa;MACbC,gBAAgB;MAChBQ,kBAAkB;MAClBE;IACJ,CAAE;IAAAnB,QAAA,EACGA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACzB,EAAA,CArEWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}