{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\StockHighlights.js\";\nimport React from 'react';\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableRow, Paper, Box, Grid, Skeleton // Import Skeleton from Material-UI\n} from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockHighlights = ({\n  highlights\n}) => {\n  const firstColumnHighlights = [{\n    key: \"wall_street_target_price\",\n    label: \"Target Price\"\n  }, {\n    key: \"market_capitalization\",\n    label: \"Market Cap\"\n  }, {\n    key: \"earnings_share\",\n    label: \"EPS\"\n  }, {\n    key: \"book_value\",\n    label: \"Book Value\"\n  }, {\n    key: \"eps_estimate_current_year\",\n    label: \"EPS Estimate\"\n  }, {\n    key: \"eps_estimate_next_year\",\n    label: \"EPS Est. Next Yr\"\n  }];\n  const secondColumnHighlights = [{\n    key: \"dividend_yield\",\n    label: \"Dividend Yield\"\n  }, {\n    key: \"pe_ratio\",\n    label: \"P/E Ratio\"\n  }, {\n    key: \"peg_ratio\",\n    label: \"PEG Ratio\"\n  }, {\n    key: \"profit_margin\",\n    label: \"Profit Margin\"\n  }, {\n    key: \"eps_estimate_current_quarter\",\n    label: \"EPS Estimate Qtr\"\n  }, {\n    key: \"eps_estimate_next_quarter\",\n    label: \"EPS Est. Next Qtr\"\n  }];\n  const renderRow = (data, key) => {\n    let formattedValue = highlights[data.key];\n    if (data.key === \"market_capitalization\") {\n      const marketCap = parseFloat(highlights[data.key]);\n      if (!isNaN(marketCap)) {\n        formattedValue = (marketCap / 1000000000).toFixed(2) + \"B\";\n      }\n    } else if (data.key === \"dividend_yield\") {\n      const dividendYield = parseFloat(highlights[data.key]);\n      if (!isNaN(dividendYield)) {\n        formattedValue = (dividendYield * 100).toFixed(2) + \"%\";\n      }\n    } else if (data.key === \"pe_ratio\") {\n      const peRatio = parseFloat(highlights[data.key]);\n      if (!isNaN(peRatio)) {\n        formattedValue = peRatio.toFixed(2);\n      }\n    } else if (data.key === \"peg_ratio\") {\n      const peRatio = parseFloat(highlights[data.key]);\n      if (!isNaN(peRatio)) {\n        formattedValue = peRatio.toFixed(2);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: formattedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      margin: 'auto',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'primary.main',\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          color: 'common.white',\n          textAlign: 'center'\n        },\n        children: \"Highlights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"Highlights Table\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: highlights ?\n              // Render content if highlights data is available\n              firstColumnHighlights.map(data => renderRow(data, data.key)) :\n              // Render skeleton loader if highlights data is not available\n              Array.from({\n                length: firstColumnHighlights.length\n              }, (_, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                    variant: \"text\",\n                    width: 100,\n                    animation: \"wave\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                    variant: \"text\",\n                    width: 100,\n                    animation: \"wave\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"Highlights Table\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: highlights ?\n              // Render content if highlights data is available\n              secondColumnHighlights.map(data => renderRow(data, data.key)) :\n              // Render skeleton loader if highlights data is not available\n              Array.from({\n                length: secondColumnHighlights.length\n              }, (_, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                    variant: \"text\",\n                    width: 100,\n                    animation: \"wave\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                    variant: \"text\",\n                    width: 100,\n                    animation: \"wave\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_c = StockHighlights;\nexport default StockHighlights;\nvar _c;\n$RefreshReg$(_c, \"StockHighlights\");","map":{"version":3,"names":["React","Typography","Table","TableBody","TableCell","TableContainer","TableRow","Paper","Box","Grid","Skeleton","jsxDEV","_jsxDEV","StockHighlights","highlights","firstColumnHighlights","key","label","secondColumnHighlights","renderRow","data","formattedValue","marketCap","parseFloat","isNaN","toFixed","dividendYield","peRatio","children","component","scope","fileName","_jsxFileName","lineNumber","columnNumber","align","sx","fontWeight","elevation","margin","overflow","bgcolor","p","variant","color","textAlign","container","spacing","item","xs","map","Array","from","length","_","index","width","animation","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/StockHighlights.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Skeleton // Import Skeleton from Material-UI\r\n} from '@mui/material';\r\n\r\nconst StockHighlights = ({ highlights }) => {\r\n  const firstColumnHighlights = [\r\n    { key: \"wall_street_target_price\", label: \"Target Price\" },\r\n    { key: \"market_capitalization\", label: \"Market Cap\" },\r\n    { key: \"earnings_share\", label: \"EPS\" },\r\n    { key: \"book_value\", label: \"Book Value\" },\r\n    { key: \"eps_estimate_current_year\", label: \"EPS Estimate\" },\r\n    { key: \"eps_estimate_next_year\", label: \"EPS Est. Next Yr\" },\r\n  ];\r\n\r\n  const secondColumnHighlights = [\r\n    { key: \"dividend_yield\", label: \"Dividend Yield\" },\r\n    { key: \"pe_ratio\", label: \"P/E Ratio\" },\r\n    { key: \"peg_ratio\", label: \"PEG Ratio\" },\r\n    { key: \"profit_margin\", label: \"Profit Margin\" },\r\n    { key: \"eps_estimate_current_quarter\", label: \"EPS Estimate Qtr\" },\r\n    { key: \"eps_estimate_next_quarter\", label: \"EPS Est. Next Qtr\" },    \r\n  ];\r\n\r\n  const renderRow = (data, key) => {\r\n    let formattedValue = highlights[data.key];\r\n\r\n    if (data.key === \"market_capitalization\") {\r\n      const marketCap = parseFloat(highlights[data.key]);\r\n      if (!isNaN(marketCap)) {\r\n        formattedValue = (marketCap / 1000000000).toFixed(2) + \"B\";\r\n      }\r\n    } else if (data.key === \"dividend_yield\") {\r\n      const dividendYield = parseFloat(highlights[data.key]);\r\n      if (!isNaN(dividendYield)) {\r\n        formattedValue = (dividendYield * 100).toFixed(2) + \"%\";\r\n      }\r\n    } else if (data.key === \"pe_ratio\") {\r\n      const peRatio = parseFloat(highlights[data.key]);\r\n      if (!isNaN(peRatio)) {\r\n        formattedValue = peRatio.toFixed(2);\r\n      }\r\n    } else if (data.key === \"peg_ratio\") {\r\n      const peRatio = parseFloat(highlights[data.key]);\r\n      if (!isNaN(peRatio)) {\r\n        formattedValue = peRatio.toFixed(2);\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <TableRow key={key}>\r\n        <TableCell component=\"th\" scope=\"row\">{data.label}</TableCell>\r\n        <TableCell align=\"right\" sx={{ fontWeight: 'bold' }}>\r\n          {formattedValue}\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n      <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Highlights</Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <Table aria-label=\"Highlights Table\">\r\n              <TableBody>\r\n                {highlights ? (\r\n                  // Render content if highlights data is available\r\n                  firstColumnHighlights.map((data) => renderRow(data, data.key))\r\n                ) : (\r\n                  // Render skeleton loader if highlights data is not available\r\n                  Array.from({ length: firstColumnHighlights.length }, (_, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>\r\n                        <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <Table aria-label=\"Highlights Table\">\r\n              <TableBody>\r\n                {highlights ? (\r\n                  // Render content if highlights data is available\r\n                  secondColumnHighlights.map((data) => renderRow(data, data.key))\r\n                ) : (\r\n                  // Render skeleton loader if highlights data is not available\r\n                  Array.from({ length: secondColumnHighlights.length }, (_, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>\r\n                        <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StockHighlights;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}