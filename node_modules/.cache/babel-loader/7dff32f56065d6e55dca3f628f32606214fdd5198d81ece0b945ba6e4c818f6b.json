{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\BalanceSheet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box, Grid, Alert, AlertTitle } from '@mui/material';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BalanceSheets = ({\n  balanceSheets,\n  isAuthenticated\n}) => {\n  _s();\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\n  const [filteredBalanceSheets, setFilteredBalanceSheets] = useState([]);\n  useEffect(() => {\n    // Filter balance sheets based on the selected frequency\n    const filteredData = balanceSheets === null || balanceSheets === void 0 ? void 0 : balanceSheets.filter(sheet => sheet.type.toLowerCase() === selectedFrequency);\n    setFilteredBalanceSheets(filteredData);\n  }, [balanceSheets, selectedFrequency]);\n\n  // Function to filter out keys\n  const filteredKeys = Object.keys(filteredBalanceSheets[0] || {}).filter(key => !keysToFilterOut.includes(key));\n\n  // Function to render table cells\n  const renderTableCell = (key, value) => {\n    const keysToFormatAsDate = ['date'];\n    if (keysToFilterOut.includes(key)) {\n      return null;\n    }\n    if (keysToFormatAsDate.includes(key)) {\n      return /*#__PURE__*/_jsxDEV(TableCell, {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\n    const displayedValue = !isNaN(numericValue) ? Math.round(numericValue).toLocaleString() : value;\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      children: displayedValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n  const downloadCSV = () => {\n    if (filteredBalanceSheets.length > 0) {\n      if (isAuthenticated) {\n        const csvData = Papa.unparse(filteredBalanceSheets);\n        const blob = new Blob([csvData], {\n          type: 'text/csv'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'balance_sheets.csv';\n        a.click();\n        window.URL.revokeObjectURL(url);\n      } else {\n        // Display a Material-UI alert when user is not logged in\n        alert('Please log in to download the CSV');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedFrequency === 'yearly' ? 'contained' : 'outlined',\n          onClick: () => setSelectedFrequency('yearly'),\n          sx: {\n            margin: 1\n          },\n          children: \"Yearly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedFrequency === 'quarterly' ? 'contained' : 'outlined',\n          onClick: () => setSelectedFrequency('quarterly'),\n          sx: {\n            margin: 1\n          },\n          children: \"Quarterly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: downloadCSV,\n          sx: {\n            margin: 1\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 24\n          }, this),\n          children: \"Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        margin: 'auto',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            color: 'common.white',\n            textAlign: 'center'\n          },\n          children: \"Balance Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"Balance Sheet\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: filteredKeys.map((key, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontWeight: 'bold'\n                },\n                className: \"MuiTableCell-sizeSmall\",\n                children: key.replace(/_/g, ' ').toUpperCase()\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: filteredBalanceSheets.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: filteredKeys.map(key => renderTableCell(key, item[key]))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), !isAuthenticated && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: \"Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), \"Please log in to download the CSV.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(BalanceSheets, \"PpGF3sl5p2vFggoepeQeROGR0Ao=\");\n_c = BalanceSheets;\nexport default BalanceSheets;\nvar _c;\n$RefreshReg$(_c, \"BalanceSheets\");","map":{"version":3,"names":["React","useState","useEffect","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Box","Grid","Alert","AlertTitle","GetAppIcon","Papa","jsxDEV","_jsxDEV","Fragment","_Fragment","BalanceSheets","balanceSheets","isAuthenticated","_s","selectedFrequency","setSelectedFrequency","filteredBalanceSheets","setFilteredBalanceSheets","filteredData","filter","sheet","type","toLowerCase","filteredKeys","Object","keys","key","keysToFilterOut","includes","renderTableCell","value","keysToFormatAsDate","children","fileName","_jsxFileName","lineNumber","columnNumber","numericValue","parseFloat","displayedValue","isNaN","Math","round","toLocaleString","downloadCSV","length","csvData","unparse","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","alert","container","spacing","item","variant","onClick","sx","margin","startIcon","elevation","overflow","bgcolor","p","color","textAlign","size","map","index","fontWeight","className","replace","toUpperCase","severity","mt","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/BalanceSheet.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Alert,\r\n  AlertTitle,\r\n} from '@mui/material';\r\nimport GetAppIcon from '@mui/icons-material/GetApp';\r\nimport Papa from 'papaparse';\r\n\r\nconst BalanceSheets = ({ balanceSheets, isAuthenticated }) => {\r\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\r\n  const [filteredBalanceSheets, setFilteredBalanceSheets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Filter balance sheets based on the selected frequency\r\n    const filteredData = balanceSheets?.filter(sheet => sheet.type.toLowerCase() === selectedFrequency);\r\n    setFilteredBalanceSheets(filteredData);\r\n  }, [balanceSheets, selectedFrequency]);\r\n\r\n  // Function to filter out keys\r\n  const filteredKeys = Object.keys(filteredBalanceSheets[0] || {})\r\n    .filter(key => !keysToFilterOut.includes(key));\r\n\r\n  // Function to render table cells\r\n  const renderTableCell = (key, value) => {\r\n    const keysToFormatAsDate = ['date'];\r\n\r\n    if (keysToFilterOut.includes(key)) {\r\n      return null;\r\n    }\r\n\r\n    if (keysToFormatAsDate.includes(key)) {\r\n      return (\r\n        <TableCell>\r\n          {value}\r\n        </TableCell>\r\n      );\r\n    }\r\n\r\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\r\n    const displayedValue = !isNaN(numericValue)\r\n      ? Math.round(numericValue).toLocaleString()\r\n      : value;\r\n\r\n    return (\r\n      <TableCell>\r\n        {displayedValue}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    if (filteredBalanceSheets.length > 0) {\r\n      if (isAuthenticated) {\r\n        const csvData = Papa.unparse(filteredBalanceSheets);\r\n        const blob = new Blob([csvData], { type: 'text/csv' });\r\n        const url = window.URL.createObjectURL(blob);\r\n\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'balance_sheets.csv';\r\n\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      } else {\r\n        // Display a Material-UI alert when user is not logged in\r\n        alert('Please log in to download the CSV');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'yearly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('yearly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Yearly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'quarterly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('quarterly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Quarterly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={downloadCSV}\r\n            sx={{ margin: 1 }}\r\n            startIcon={<GetAppIcon />}\r\n          >\r\n            Download CSV\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Balance Sheet</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Balance Sheet\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {filteredKeys.map((key, index) => (\r\n                  <TableCell key={index} sx={{ fontWeight: 'bold' }} className=\"MuiTableCell-sizeSmall\">\r\n                    {key.replace(/_/g, ' ').toUpperCase()}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredBalanceSheets.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  {filteredKeys.map((key) => (\r\n                    renderTableCell(key, item[key])\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n\r\n      {/* Display Material-UI alert for not logged in */}\r\n      {!isAuthenticated && (\r\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\r\n          <AlertTitle>Info</AlertTitle>\r\n          Please log in to download the CSV.\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BalanceSheets;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}