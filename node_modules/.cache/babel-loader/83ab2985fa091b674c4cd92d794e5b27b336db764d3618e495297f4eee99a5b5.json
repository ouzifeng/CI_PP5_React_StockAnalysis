{"ast":null,"code":"/*!\n * @license\n * TradingView Lightweight Chartsâ„¢ v4.1.2\n * Copyright (c) 2024 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\nconst candlestickStyleDefaults = {\n  upColor: '#26a69a',\n  downColor: '#ef5350',\n  wickVisible: true,\n  borderVisible: true,\n  borderColor: '#378658',\n  borderUpColor: '#26a69a',\n  borderDownColor: '#ef5350',\n  wickColor: '#737375',\n  wickUpColor: '#26a69a',\n  wickDownColor: '#ef5350'\n};\nconst barStyleDefaults = {\n  upColor: '#26a69a',\n  downColor: '#ef5350',\n  openVisible: true,\n  thinBars: true\n};\nconst lineStyleDefaults = {\n  color: '#2196f3',\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineWidth: 3,\n  lineType: 0 /* LineType.Simple */,\n  lineVisible: true,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n  pointMarkersVisible: false\n};\nconst areaStyleDefaults = {\n  topColor: 'rgba( 46, 220, 135, 0.4)',\n  bottomColor: 'rgba( 40, 221, 100, 0)',\n  invertFilledArea: false,\n  lineColor: '#33D778',\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineWidth: 3,\n  lineType: 0 /* LineType.Simple */,\n  lineVisible: true,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n  pointMarkersVisible: false\n};\nconst baselineStyleDefaults = {\n  baseValue: {\n    type: 'price',\n    price: 0\n  },\n  topFillColor1: 'rgba(38, 166, 154, 0.28)',\n  topFillColor2: 'rgba(38, 166, 154, 0.05)',\n  topLineColor: 'rgba(38, 166, 154, 1)',\n  bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n  bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n  bottomLineColor: 'rgba(239, 83, 80, 1)',\n  lineWidth: 3,\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineType: 0 /* LineType.Simple */,\n  lineVisible: true,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n  pointMarkersVisible: false\n};\nconst histogramStyleDefaults = {\n  color: '#26a69a',\n  base: 0\n};\nconst customStyleDefaults = {\n  color: '#2196f3'\n};\nconst seriesOptionsDefaults = {\n  title: '',\n  visible: true,\n  lastValueVisible: true,\n  priceLineVisible: true,\n  priceLineSource: 0 /* PriceLineSource.LastBar */,\n  priceLineWidth: 1,\n  priceLineColor: '',\n  priceLineStyle: 2 /* LineStyle.Dashed */,\n  baseLineVisible: true,\n  baseLineWidth: 1,\n  baseLineColor: '#B2B5BE',\n  baseLineStyle: 0 /* LineStyle.Solid */,\n  priceFormat: {\n    type: 'price',\n    precision: 2,\n    minMove: 0.01\n  }\n};\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n  /**\n   * A line.\n   */\n  LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n  /**\n   * A stepped line.\n   */\n  LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n  /**\n   * A curved line.\n   */\n  LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n  /**\n   * A solid line.\n   */\n  LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n  /**\n   * A dotted line.\n   */\n  LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n  /**\n   * A dashed line.\n   */\n  LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n  /**\n   * A dashed line with bigger dashes.\n   */\n  LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n  /**\n   * A dotted line with more space between dots.\n   */\n  LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n  const dashPatterns = {\n    [0 /* LineStyle.Solid */]: [],\n    [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n    [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n    [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n    [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth]\n  };\n  const dashPattern = dashPatterns[style];\n  ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n  ctx.beginPath();\n  const correction = ctx.lineWidth % 2 ? 0.5 : 0;\n  ctx.moveTo(left, y + correction);\n  ctx.lineTo(right, y + correction);\n  ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n  ctx.beginPath();\n  const correction = ctx.lineWidth % 2 ? 0.5 : 0;\n  ctx.moveTo(x + correction, top);\n  ctx.lineTo(x + correction, bottom);\n  ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n  ctx.save();\n  if (ctx.lineWidth % 2) {\n    ctx.translate(0.5, 0.5);\n  }\n  drawFunction();\n  ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n  }\n}\nfunction ensureDefined(value) {\n  if (value === undefined) {\n    throw new Error('Value is undefined');\n  }\n  return value;\n}\nfunction ensureNotNull(value) {\n  if (value === null) {\n    throw new Error('Value is null');\n  }\n  return value;\n}\nfunction ensure(value) {\n  return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) {}\n\n/**\n * Note this object should be explicitly marked as public so that dts-bundle-generator does not mangle the property names.\n *\n * @public\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n */\nconst namedColorRgbHexStrings = {\n  // The order of properties in this Record is not important for the internal logic.\n  // It's just GZIPped better when props follows this order.\n  // Please add new colors to the end of the record.\n  khaki: '#f0e68c',\n  azure: '#f0ffff',\n  aliceblue: '#f0f8ff',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gainsboro: '#dcdcdc',\n  gray: '#808080',\n  green: '#008000',\n  honeydew: '#f0fff0',\n  floralwhite: '#fffaf0',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lemonchiffon: '#fffacd',\n  hotpink: '#ff69b4',\n  lightyellow: '#ffffe0',\n  greenyellow: '#adff2f',\n  lightgoldenrodyellow: '#fafad2',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  lightcyan: '#e0ffff',\n  magenta: '#f0f',\n  maroon: '#800000',\n  olive: '#808000',\n  orange: '#ffa500',\n  oldlace: '#fdf5e6',\n  mediumblue: '#0000cd',\n  transparent: '#0000',\n  lime: '#0f0',\n  lightpink: '#ffb6c1',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  midnightblue: '#191970',\n  orchid: '#da70d6',\n  mediumorchid: '#ba55d3',\n  mediumturquoise: '#48d1cc',\n  orangered: '#ff4500',\n  royalblue: '#4169e1',\n  powderblue: '#b0e0e6',\n  red: '#f00',\n  coral: '#ff7f50',\n  turquoise: '#40e0d0',\n  white: '#fff',\n  whitesmoke: '#f5f5f5',\n  wheat: '#f5deb3',\n  teal: '#008080',\n  steelblue: '#4682b4',\n  bisque: '#ffe4c4',\n  aquamarine: '#7fffd4',\n  aqua: '#0ff',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  springgreen: '#00ff7f',\n  antiquewhite: '#faebd7',\n  burlywood: '#deb887',\n  brown: '#a52a2a',\n  beige: '#f5f5dc',\n  chocolate: '#d2691e',\n  chartreuse: '#7fff00',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cadetblue: '#5f9ea0',\n  tomato: '#ff6347',\n  fuchsia: '#f0f',\n  blue: '#00f',\n  salmon: '#fa8072',\n  blanchedalmond: '#ffebcd',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  thistle: '#d8bfd8',\n  tan: '#d2b48c',\n  cyan: '#0ff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  blueviolet: '#8a2be2',\n  black: '#000',\n  darkmagenta: '#8b008b',\n  darkslateblue: '#483d8b',\n  darkkhaki: '#bdb76b',\n  darkorchid: '#9932cc',\n  darkorange: '#ff8c00',\n  darkgreen: '#006400',\n  darkred: '#8b0000',\n  dodgerblue: '#1e90ff',\n  darkslategray: '#2f4f4f',\n  dimgray: '#696969',\n  deepskyblue: '#00bfff',\n  firebrick: '#b22222',\n  forestgreen: '#228b22',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  lavenderblush: '#fff0f5',\n  feldspar: '#d19275',\n  indianred: '#cd5c5c',\n  lightgreen: '#90ee90',\n  lightgrey: '#d3d3d3',\n  lightskyblue: '#87cefa',\n  lightslategray: '#789',\n  lightslateblue: '#8470ff',\n  snow: '#fffafa',\n  lightseagreen: '#20b2aa',\n  lightsalmon: '#ffa07a',\n  darksalmon: '#e9967a',\n  darkviolet: '#9400d3',\n  mediumpurple: '#9370d8',\n  mediumaquamarine: '#66cdaa',\n  skyblue: '#87ceeb',\n  lavender: '#e6e6fa',\n  lightsteelblue: '#b0c4de',\n  mediumvioletred: '#c71585',\n  mintcream: '#f5fffa',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  olivedrab: '#6b8e23',\n  palevioletred: '#d87093',\n  violetred: '#d02090',\n  yellow: '#ff0',\n  yellowgreen: '#9acd32',\n  lawngreen: '#7cfc00',\n  pink: '#ffc0cb',\n  paleturquoise: '#afeeee',\n  palegoldenrod: '#eee8aa',\n  darkolivegreen: '#556b2f',\n  darkseagreen: '#8fbc8f',\n  darkturquoise: '#00ced1',\n  peachpuff: '#ffdab9',\n  deeppink: '#ff1493',\n  violet: '#ee82ee',\n  palegreen: '#98fb98',\n  mediumseagreen: '#3cb371',\n  peru: '#cd853f',\n  saddlebrown: '#8b4513',\n  sandybrown: '#f4a460',\n  rosybrown: '#bc8f8f',\n  purple: '#800080',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  papayawhip: '#ffefd5',\n  mediumslateblue: '#7b68ee',\n  plum: '#dda0dd',\n  mediumspringgreen: '#00fa9a'\n};\nfunction normalizeRgbComponent(component) {\n  if (component < 0) {\n    return 0;\n  }\n  if (component > 255) {\n    return 255;\n  }\n  // NaN values are treated as 0\n  return Math.round(component) || 0;\n}\nfunction normalizeAlphaComponent(component) {\n  return !(component <= 0) && !(component > 0) ? 0 : component < 0 ? 0 : component > 1 ? 1 :\n  // limit the precision of all numbers to at most 4 digits in fractional part\n  Math.round(component * 10000) / 10000;\n}\n/**\n * @example\n * #fb0\n * @example\n * #f0f\n * @example\n * #f0fa\n */\nconst shortHexRe = /^#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i;\n/**\n * @example\n * #00ff00\n * @example\n * #336699\n * @example\n * #336699FA\n */\nconst hexRe = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$/i;\n/**\n * @example\n * rgb(123, 234, 45)\n * @example\n * rgb(255,234,245)\n */\nconst rgbRe = /^rgb\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*\\)$/;\n/**\n * @example\n * rgba(123, 234, 45, 1)\n * @example\n * rgba(255,234,245,0.1)\n */\nconst rgbaRe = /^rgba\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?[\\d]{0,10}(?:\\.\\d+)?)\\s*\\)$/;\nfunction colorStringToRgba(colorString) {\n  colorString = colorString.toLowerCase();\n  // eslint-disable-next-line no-restricted-syntax\n  if (colorString in namedColorRgbHexStrings) {\n    colorString = namedColorRgbHexStrings[colorString];\n  }\n  {\n    const matches = rgbaRe.exec(colorString) || rgbRe.exec(colorString);\n    if (matches) {\n      return [normalizeRgbComponent(parseInt(matches[1], 10)), normalizeRgbComponent(parseInt(matches[2], 10)), normalizeRgbComponent(parseInt(matches[3], 10)), normalizeAlphaComponent(matches.length < 5 ? 1 : parseFloat(matches[4]))];\n    }\n  }\n  {\n    const matches = hexRe.exec(colorString);\n    if (matches) {\n      return [normalizeRgbComponent(parseInt(matches[1], 16)), normalizeRgbComponent(parseInt(matches[2], 16)), normalizeRgbComponent(parseInt(matches[3], 16)), 1];\n    }\n  }\n  {\n    const matches = shortHexRe.exec(colorString);\n    if (matches) {\n      return [normalizeRgbComponent(parseInt(matches[1], 16) * 0x11), normalizeRgbComponent(parseInt(matches[2], 16) * 0x11), normalizeRgbComponent(parseInt(matches[3], 16) * 0x11), 1];\n    }\n  }\n  throw new Error(`Cannot parse color: ${colorString}`);\n}\nfunction rgbaToGrayscale(rgbValue) {\n  // Originally, the NTSC RGB to YUV formula\n  // perfected by @eugene-korobko's black magic\n  const redComponentGrayscaleWeight = 0.199;\n  const greenComponentGrayscaleWeight = 0.687;\n  const blueComponentGrayscaleWeight = 0.114;\n  return redComponentGrayscaleWeight * rgbValue[0] + greenComponentGrayscaleWeight * rgbValue[1] + blueComponentGrayscaleWeight * rgbValue[2];\n}\nfunction applyAlpha(color, alpha) {\n  // special case optimization\n  if (color === 'transparent') {\n    return color;\n  }\n  const originRgba = colorStringToRgba(color);\n  const originAlpha = originRgba[3];\n  return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n}\nfunction generateContrastColors(backgroundColor) {\n  const rgb = colorStringToRgba(backgroundColor);\n  return {\n    _internal_background: `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`,\n    _internal_foreground: rgbaToGrayscale(rgb) > 160 ? 'black' : 'white'\n  };\n}\nfunction gradientColorAtPercent(topColor, bottomColor, percent) {\n  const [topR, topG, topB, topA] = colorStringToRgba(topColor);\n  const [bottomR, bottomG, bottomB, bottomA] = colorStringToRgba(bottomColor);\n  const resultRgba = [normalizeRgbComponent(topR + percent * (bottomR - topR)), normalizeRgbComponent(topG + percent * (bottomG - topG)), normalizeRgbComponent(topB + percent * (bottomB - topB)), normalizeAlphaComponent(topA + percent * (bottomA - topA))];\n  return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n}\nclass Delegate {\n  constructor() {\n    this._private__listeners = [];\n  }\n  _internal_subscribe(callback, linkedObject, singleshot) {\n    const listener = {\n      _internal_callback: callback,\n      _internal_linkedObject: linkedObject,\n      _internal_singleshot: singleshot === true\n    };\n    this._private__listeners.push(listener);\n  }\n  _internal_unsubscribe(callback) {\n    const index = this._private__listeners.findIndex(listener => callback === listener._internal_callback);\n    if (index > -1) {\n      this._private__listeners.splice(index, 1);\n    }\n  }\n  _internal_unsubscribeAll(linkedObject) {\n    this._private__listeners = this._private__listeners.filter(listener => listener._internal_linkedObject !== linkedObject);\n  }\n  _internal_fire(param1, param2, param3) {\n    const listenersSnapshot = [...this._private__listeners];\n    this._private__listeners = this._private__listeners.filter(listener => !listener._internal_singleshot);\n    listenersSnapshot.forEach(listener => listener._internal_callback(param1, param2, param3));\n  }\n  _internal_hasListeners() {\n    return this._private__listeners.length > 0;\n  }\n  _internal_destroy() {\n    this._private__listeners = [];\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n  for (const src of sources) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const i in src) {\n      if (src[i] === undefined) {\n        continue;\n      }\n      if ('object' !== typeof src[i] || dst[i] === undefined || Array.isArray(src[i])) {\n        dst[i] = src[i];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        merge(dst[i], src[i]);\n      }\n    }\n  }\n  return dst;\n}\nfunction isNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\nfunction isInteger(value) {\n  return typeof value === 'number' && value % 1 === 0;\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\nfunction clone(object) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = object;\n  if (!o || 'object' !== typeof o) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return o;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let c;\n  if (Array.isArray(o)) {\n    c = [];\n  } else {\n    c = {};\n  }\n  let p;\n  let v;\n  // eslint-disable-next-line no-restricted-syntax\n  for (p in o) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n    if (o.hasOwnProperty(p)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      v = o[p];\n      if (v && 'object' === typeof v) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        c[p] = clone(v);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        c[p] = v;\n      }\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return c;\n}\nfunction notNull(t) {\n  return t !== null;\n}\nfunction undefinedIfNull(t) {\n  return t === null ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n  if (style !== undefined) {\n    style = `${style} `;\n  } else {\n    style = '';\n  }\n  if (family === undefined) {\n    family = defaultFontFamily;\n  }\n  return `${style}${size}px ${family}`;\n}\nclass PriceAxisRendererOptionsProvider {\n  constructor(chartModel) {\n    this._private__rendererOptions = {\n      _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n      _internal_tickLength: 5 /* RendererConstants.TickLength */,\n      _internal_fontSize: NaN,\n      _internal_font: '',\n      _internal_fontFamily: '',\n      _internal_color: '',\n      _internal_paneBackgroundColor: '',\n      _internal_paddingBottom: 0,\n      _internal_paddingInner: 0,\n      _internal_paddingOuter: 0,\n      _internal_paddingTop: 0,\n      _internal_baselineOffset: 0\n    };\n    this._private__chartModel = chartModel;\n  }\n  _internal_options() {\n    const rendererOptions = this._private__rendererOptions;\n    const currentFontSize = this._private__fontSize();\n    const currentFontFamily = this._private__fontFamily();\n    if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n      rendererOptions._internal_fontSize = currentFontSize;\n      rendererOptions._internal_fontFamily = currentFontFamily;\n      rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n      rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n      rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n      rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n      rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n      rendererOptions._internal_baselineOffset = 0;\n    }\n    rendererOptions._internal_color = this._private__textColor();\n    rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n    return this._private__rendererOptions;\n  }\n  _private__textColor() {\n    return this._private__chartModel._internal_options().layout.textColor;\n  }\n  _private__paneBackgroundColor() {\n    return this._private__chartModel._internal_backgroundTopColor();\n  }\n  _private__fontSize() {\n    return this._private__chartModel._internal_options().layout.fontSize;\n  }\n  _private__fontFamily() {\n    return this._private__chartModel._internal_options().layout.fontFamily;\n  }\n}\nclass CompositeRenderer {\n  constructor() {\n    this._private__renderers = [];\n  }\n  _internal_setRenderers(renderers) {\n    this._private__renderers = renderers;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__renderers.forEach(r => {\n      r._internal_draw(target, isHovered, hitTestData);\n    });\n  }\n}\nclass MediaCoordinatesPaneRenderer {\n  _internal_draw(target, isHovered, hitTestData) {\n    target.useMediaCoordinateSpace(scope => this._internal__drawImpl(scope, isHovered, hitTestData));\n  }\n  _internal_drawBackground(target, isHovered, hitTestData) {\n    target.useMediaCoordinateSpace(scope => this._internal__drawBackgroundImpl(scope, isHovered, hitTestData));\n  }\n  _internal__drawBackgroundImpl(renderingScope, isHovered, hitTestData) {}\n}\nclass PaneRendererMarks extends MediaCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx\n  }) {\n    if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n      return;\n    }\n    const visibleRange = this._internal__data._internal_visibleRange;\n    const data = this._internal__data;\n    const draw = radius => {\n      ctx.beginPath();\n      for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n        const point = data._internal_items[i];\n        ctx.moveTo(point._internal_x, point._internal_y);\n        ctx.arc(point._internal_x, point._internal_y, radius, 0, Math.PI * 2);\n      }\n      ctx.fill();\n    };\n    if (data._internal_lineWidth > 0) {\n      ctx.fillStyle = data._internal_backColor;\n      draw(data._internal_radius + data._internal_lineWidth);\n    }\n    ctx.fillStyle = data._internal_lineColor;\n    draw(data._internal_radius);\n  }\n}\nfunction createEmptyMarkerData() {\n  return {\n    _internal_items: [{\n      _internal_x: 0,\n      _internal_y: 0,\n      _internal_time: 0,\n      _internal_price: 0\n    }],\n    _internal_lineColor: '',\n    _internal_backColor: '',\n    _internal_radius: 0,\n    _internal_lineWidth: 0,\n    _internal_visibleRange: null\n  };\n}\nconst rangeForSinglePoint = {\n  from: 0,\n  to: 1\n};\nclass CrosshairMarksPaneView {\n  constructor(chartModel, crosshair) {\n    this._private__compositeRenderer = new CompositeRenderer();\n    this._private__markersRenderers = [];\n    this._private__markersData = [];\n    this._private__invalidated = true;\n    this._private__chartModel = chartModel;\n    this._private__crosshair = crosshair;\n    this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n  }\n  _internal_update(updateType) {\n    const serieses = this._private__chartModel._internal_serieses();\n    if (serieses.length !== this._private__markersRenderers.length) {\n      this._private__markersData = serieses.map(createEmptyMarkerData);\n      this._private__markersRenderers = this._private__markersData.map(data => {\n        const res = new PaneRendererMarks();\n        res._internal_setData(data);\n        return res;\n      });\n      this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__compositeRenderer;\n  }\n  _private__updateImpl() {\n    const forceHidden = this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */;\n    const serieses = this._private__chartModel._internal_serieses();\n    const timePointIndex = this._private__crosshair._internal_appliedIndex();\n    const timeScale = this._private__chartModel._internal_timeScale();\n    serieses.forEach((s, index) => {\n      var _a;\n      const data = this._private__markersData[index];\n      const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n      if (forceHidden || seriesData === null || !s._internal_visible()) {\n        data._internal_visibleRange = null;\n        return;\n      }\n      const firstValue = ensureNotNull(s._internal_firstValue());\n      data._internal_lineColor = seriesData._internal_backgroundColor;\n      data._internal_radius = seriesData._internal_radius;\n      data._internal_lineWidth = seriesData._internal_borderWidth;\n      data._internal_items[0]._internal_price = seriesData._internal_price;\n      data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n      data._internal_backColor = (_a = seriesData._internal_borderColor) !== null && _a !== void 0 ? _a : this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n      data._internal_items[0]._internal_time = timePointIndex;\n      data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n      data._internal_visibleRange = rangeForSinglePoint;\n    });\n  }\n}\nclass BitmapCoordinatesPaneRenderer {\n  _internal_draw(target, isHovered, hitTestData) {\n    target.useBitmapCoordinateSpace(scope => this._internal__drawImpl(scope, isHovered, hitTestData));\n  }\n}\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor(data) {\n    super();\n    this._private__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n    const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n    if (!vertLinesVisible && !horzLinesVisible) {\n      return;\n    }\n    const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n    const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n    ctx.lineCap = 'butt';\n    if (vertLinesVisible && x >= 0) {\n      ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n      ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n      ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n      setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n      drawVerticalLine(ctx, x, 0, bitmapSize.height);\n    }\n    if (horzLinesVisible && y >= 0) {\n      ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n      ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n      ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n      setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n      drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n  }\n}\nclass CrosshairPaneView {\n  constructor(source) {\n    this._private__invalidated = true;\n    this._private__rendererData = {\n      _internal_vertLine: {\n        _internal_lineWidth: 1,\n        _internal_lineStyle: 0,\n        _internal_color: '',\n        _internal_visible: false\n      },\n      _internal_horzLine: {\n        _internal_lineWidth: 1,\n        _internal_lineStyle: 0,\n        _internal_color: '',\n        _internal_visible: false\n      },\n      _internal_x: 0,\n      _internal_y: 0\n    };\n    this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n    this._private__source = source;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const visible = this._private__source._internal_visible();\n    const pane = ensureNotNull(this._private__source._internal_pane());\n    const crosshairOptions = pane._internal_model()._internal_options().crosshair;\n    const data = this._private__rendererData;\n    if (crosshairOptions.mode === 2 /* CrosshairMode.Hidden */) {\n      data._internal_horzLine._internal_visible = false;\n      data._internal_vertLine._internal_visible = false;\n      return;\n    }\n    data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(pane);\n    data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n    data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n    data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n    data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n    data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n    data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n    data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n    data._internal_x = this._private__source._internal_appliedX();\n    data._internal_y = this._private__source._internal_appliedY();\n  }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n  // horizontal (top and bottom) edges\n  ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n  ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n  // vertical (left and right) edges\n  ctx.fillRect(x, y, borderWidth, height);\n  ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n  ctx.save();\n  ctx.globalCompositeOperation = 'copy';\n  ctx.fillStyle = clearColor;\n  ctx.fillRect(x, y, w, h);\n  ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n  return borderRadius.map(x => x === 0 ? x : x + offset);\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n  /**\n   * As of May 2023, all of the major browsers now support ctx.roundRect() so we should\n   * be able to switch to the native version soon.\n   */\n  ctx.beginPath();\n  ctx.lineTo(x + w - radii[1], y);\n  if (radii[1] !== 0) {\n    ctx.arcTo(x + w, y, x + w, y + radii[1], radii[1]);\n  }\n  ctx.lineTo(x + w, y + h - radii[2]);\n  if (radii[2] !== 0) {\n    ctx.arcTo(x + w, y + h, x + w - radii[2], y + h, radii[2]);\n  }\n  ctx.lineTo(x + radii[3], y + h);\n  if (radii[3] !== 0) {\n    ctx.arcTo(x, y + h, x, y + h - radii[3], radii[3]);\n  }\n  ctx.lineTo(x, y + radii[0]);\n  if (radii[0] !== 0) {\n    ctx.arcTo(x, y, x + radii[0], y, radii[0]);\n  }\n}\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithInnerBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, borderRadius = [0, 0, 0, 0], borderColor = '') {\n  ctx.save();\n  if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n    drawRoundRect(ctx, left, top, width, height, borderRadius);\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n    return;\n  }\n  const halfBorderWidth = borderWidth / 2;\n  // Draw body\n  if (backgroundColor !== 'transparent') {\n    const innerRadii = changeBorderRadius(borderRadius, -borderWidth);\n    drawRoundRect(ctx, left + borderWidth, top + borderWidth, width - borderWidth * 2, height - borderWidth * 2, innerRadii);\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n  }\n  // Draw border\n  if (borderColor !== 'transparent') {\n    const outerRadii = changeBorderRadius(borderRadius, -halfBorderWidth);\n    drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, outerRadii);\n    ctx.lineWidth = borderWidth;\n    ctx.strokeStyle = borderColor;\n    ctx.closePath();\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n  ctx.save();\n  ctx.globalCompositeOperation = 'copy';\n  const gradient = ctx.createLinearGradient(0, 0, 0, h);\n  gradient.addColorStop(0, topColor);\n  gradient.addColorStop(1, bottomColor);\n  ctx.fillStyle = gradient;\n  ctx.fillRect(x, y, w, h);\n  ctx.restore();\n}\nclass PriceAxisViewRenderer {\n  constructor(data, commonData) {\n    this._internal_setData(data, commonData);\n  }\n  _internal_setData(data, commonData) {\n    this._private__data = data;\n    this._private__commonData = commonData;\n  }\n  _internal_height(rendererOptions, useSecondLine) {\n    if (!this._private__data._internal_visible) {\n      return 0;\n    }\n    return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n  }\n  _internal_draw(target, rendererOptions, textWidthCache, align) {\n    if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n      return;\n    }\n    const textColor = this._private__data._internal_color;\n    const backgroundColor = this._private__commonData._internal_background;\n    const geometry = target.useBitmapCoordinateSpace(scope => {\n      const ctx = scope.context;\n      ctx.font = rendererOptions._internal_font;\n      const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n      const gb = geom._internal_bitmap;\n      const drawLabelBody = (labelBackgroundColor, labelBorderColor) => {\n        if (geom._internal_alignRight) {\n          drawRoundRectWithInnerBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], labelBorderColor);\n        } else {\n          drawRoundRectWithInnerBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], labelBorderColor);\n        }\n      };\n      // draw border\n      // draw label background\n      drawLabelBody(backgroundColor, 'transparent');\n      // draw tick\n      if (this._private__data._internal_tickVisible) {\n        ctx.fillStyle = textColor;\n        ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n      }\n      // draw label border above the tick\n      drawLabelBody('transparent', backgroundColor);\n      // draw separator\n      if (this._private__data._internal_borderVisible) {\n        ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n        ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n      }\n      return geom;\n    });\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const gm = geometry._internal_media;\n      ctx.font = rendererOptions._internal_font;\n      ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = textColor;\n      ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n    });\n  }\n  _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n    var _a;\n    const {\n      context: ctx,\n      bitmapSize,\n      mediaSize,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = scope;\n    const tickSize = this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick ? rendererOptions._internal_tickLength : 0;\n    const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n    const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n    const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n    const paddingInner = rendererOptions._internal_paddingInner;\n    const paddingOuter = rendererOptions._internal_paddingOuter;\n    const text = this._private__data._internal_text;\n    const actualTextHeight = rendererOptions._internal_fontSize;\n    const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n    const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n    const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n    const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n    const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n    let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n    if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n      totalHeightBitmap += 1;\n    }\n    const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n    const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n    // tick overlaps scale border\n    const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n    const yMid = (_a = this._private__commonData._internal_fixedCoordinate) !== null && _a !== void 0 ? _a : this._private__commonData._internal_coordinate;\n    const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n    const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n    const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n    const alignRight = align === 'right';\n    const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n    const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n    let xOutsideBitmap;\n    let xTickBitmap;\n    let xText;\n    if (alignRight) {\n      // 2               1\n      //\n      //              6  5\n      //\n      // 3               4\n      xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n      xTickBitmap = xInsideBitmap - tickSizeBitmap;\n      xText = xInside - tickSize - paddingInner - horzBorder;\n    } else {\n      // 1               2\n      //\n      // 6  5\n      //\n      // 4               3\n      xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n      xTickBitmap = xInsideBitmap + tickSizeBitmap;\n      xText = xInside + tickSize + paddingInner;\n    }\n    return {\n      _internal_alignRight: alignRight,\n      _internal_bitmap: {\n        _internal_yTop: yTopBitmap,\n        _internal_yMid: yMidBitmap,\n        _internal_yBottom: yBottomBitmap,\n        _internal_totalWidth: totalWidthBitmap,\n        _internal_totalHeight: totalHeightBitmap,\n        // TODO: it is better to have different horizontal and vertical radii\n        _internal_radius: 2 * horizontalPixelRatio,\n        _internal_horzBorder: horzBorderBitmap,\n        _internal_xOutside: xOutsideBitmap,\n        _internal_xInside: xInsideBitmap,\n        _internal_xTick: xTickBitmap,\n        _internal_tickHeight: tickHeightBitmap,\n        _internal_right: bitmapSize.width\n      },\n      _internal_media: {\n        _internal_yTop: yTopBitmap / verticalPixelRatio,\n        _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n        _internal_xText: xText,\n        _internal_textMidCorrection: textMidCorrection\n      }\n    };\n  }\n}\nclass PriceAxisView {\n  constructor(ctor) {\n    this._private__commonRendererData = {\n      _internal_coordinate: 0,\n      _internal_background: '#000',\n      _internal_additionalPaddingBottom: 0,\n      _internal_additionalPaddingTop: 0\n    };\n    this._private__axisRendererData = {\n      _internal_text: '',\n      _internal_visible: false,\n      _internal_tickVisible: true,\n      _internal_moveTextToInvisibleTick: false,\n      _internal_borderColor: '',\n      _internal_color: '#FFF',\n      _internal_borderVisible: false,\n      _internal_separatorVisible: false\n    };\n    this._private__paneRendererData = {\n      _internal_text: '',\n      _internal_visible: false,\n      _internal_tickVisible: false,\n      _internal_moveTextToInvisibleTick: true,\n      _internal_borderColor: '',\n      _internal_color: '#FFF',\n      _internal_borderVisible: true,\n      _internal_separatorVisible: true\n    };\n    this._private__invalidated = true;\n    this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n  }\n  _internal_text() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_text;\n  }\n  _internal_coordinate() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__commonRendererData._internal_coordinate;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_height(rendererOptions, useSecondLine = false) {\n    return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n  }\n  _internal_getFixedCoordinate() {\n    return this._private__commonRendererData._internal_fixedCoordinate || 0;\n  }\n  _internal_setFixedCoordinate(value) {\n    this._private__commonRendererData._internal_fixedCoordinate = value;\n  }\n  _internal_isVisible() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n  }\n  _internal_isAxisLabelVisible() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_visible;\n  }\n  _internal_renderer(priceScale) {\n    this._private__updateRendererDataIfNeeded();\n    // force update tickVisible state from price scale options\n    // because we don't have and we can't have price axis in other methods\n    // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n    this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n    this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n    this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n    return this._private__axisRenderer;\n  }\n  _internal_paneRenderer() {\n    this._private__updateRendererDataIfNeeded();\n    this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n    return this._private__paneRenderer;\n  }\n  _private__updateRendererDataIfNeeded() {\n    if (this._private__invalidated) {\n      this._private__axisRendererData._internal_tickVisible = true;\n      this._private__paneRendererData._internal_tickVisible = false;\n      this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n    }\n  }\n}\nclass CrosshairPriceAxisView extends PriceAxisView {\n  constructor(source, priceScale, valueProvider) {\n    super();\n    this._private__source = source;\n    this._private__priceScale = priceScale;\n    this._private__valueProvider = valueProvider;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    axisRendererData._internal_visible = false;\n    if (this._private__source._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n      return;\n    }\n    const options = this._private__source._internal_options().horzLine;\n    if (!options.labelVisible) {\n      return;\n    }\n    const firstValue = this._private__priceScale._internal_firstValue();\n    if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || firstValue === null) {\n      return;\n    }\n    const colors = generateContrastColors(options.labelBackgroundColor);\n    commonRendererData._internal_background = colors._internal_background;\n    axisRendererData._internal_color = colors._internal_foreground;\n    const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n    commonRendererData._internal_additionalPaddingTop = additionalPadding;\n    commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n    const value = this._private__valueProvider(this._private__priceScale);\n    commonRendererData._internal_coordinate = value._internal_coordinate;\n    axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n    axisRendererData._internal_visible = true;\n  }\n}\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n  constructor() {\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_draw(target, rendererOptions) {\n    if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n      return;\n    }\n    const textWidth = target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      ctx.font = rendererOptions._internal_font;\n      return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n    });\n    if (textWidth <= 0) {\n      return;\n    }\n    const horzMargin = rendererOptions._internal_paddingHorizontal;\n    const labelWidth = textWidth + 2 * horzMargin;\n    const labelWidthHalf = labelWidth / 2;\n    const timeScaleWidth = this._private__data._internal_width;\n    let coordinate = this._private__data._internal_coordinate;\n    let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    if (x1 < 0) {\n      coordinate = coordinate + Math.abs(0 - x1);\n      x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    } else if (x1 + labelWidth > timeScaleWidth) {\n      coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n      x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    }\n    const x2 = x1 + labelWidth;\n    const y1 = 0;\n    const y2 = Math.ceil(y1 + rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize + rendererOptions._internal_paddingBottom);\n    target.useBitmapCoordinateSpace(({\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    }) => {\n      const data = ensureNotNull(this._private__data);\n      ctx.fillStyle = data._internal_background;\n      const x1scaled = Math.round(x1 * horizontalPixelRatio);\n      const y1scaled = Math.round(y1 * verticalPixelRatio);\n      const x2scaled = Math.round(x2 * horizontalPixelRatio);\n      const y2scaled = Math.round(y2 * verticalPixelRatio);\n      const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n      ctx.beginPath();\n      ctx.moveTo(x1scaled, y1scaled);\n      ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n      ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n      ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n      ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n      ctx.lineTo(x2scaled, y1scaled);\n      ctx.fill();\n      if (data._internal_tickVisible) {\n        const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n        const tickTop = y1scaled;\n        const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n        ctx.fillStyle = data._internal_color;\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n        ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n      }\n    });\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const data = ensureNotNull(this._private__data);\n      const yText = y1 + rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize / 2;\n      ctx.font = rendererOptions._internal_font;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = data._internal_color;\n      const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n      ctx.translate(x1 + horzMargin, yText + textYCorrection);\n      ctx.fillText(data._internal_text, 0, 0);\n    });\n  }\n}\nclass CrosshairTimeAxisView {\n  constructor(crosshair, model, valueProvider) {\n    this._private__invalidated = true;\n    this._private__renderer = new TimeAxisViewRenderer();\n    this._private__rendererData = {\n      _internal_visible: false,\n      _internal_background: '#4c525e',\n      _internal_color: 'white',\n      _internal_text: '',\n      _internal_width: 0,\n      _internal_coordinate: NaN,\n      _internal_tickVisible: true\n    };\n    this._private__crosshair = crosshair;\n    this._private__model = model;\n    this._private__valueProvider = valueProvider;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    this._private__renderer._internal_setData(this._private__rendererData);\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const data = this._private__rendererData;\n    data._internal_visible = false;\n    if (this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n      return;\n    }\n    const options = this._private__crosshair._internal_options().vertLine;\n    if (!options.labelVisible) {\n      return;\n    }\n    const timeScale = this._private__model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return;\n    }\n    data._internal_width = timeScale._internal_width();\n    const value = this._private__valueProvider();\n    if (value === null) {\n      return;\n    }\n    data._internal_coordinate = value._internal_coordinate;\n    const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n    data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n    data._internal_visible = true;\n    const colors = generateContrastColors(options.labelBackgroundColor);\n    data._internal_background = colors._internal_background;\n    data._internal_color = colors._internal_foreground;\n    data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n  }\n}\nclass DataSource {\n  constructor() {\n    this._internal__priceScale = null;\n    this._private__zorder = 0;\n  }\n  _internal_zorder() {\n    return this._private__zorder;\n  }\n  _internal_setZorder(zorder) {\n    this._private__zorder = zorder;\n  }\n  _internal_priceScale() {\n    return this._internal__priceScale;\n  }\n  _internal_setPriceScale(priceScale) {\n    this._internal__priceScale = priceScale;\n  }\n  _internal_labelPaneViews(pane) {\n    return [];\n  }\n  _internal_timeAxisViews() {\n    return [];\n  }\n  _internal_visible() {\n    return true;\n  }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n  /**\n   * This mode allows crosshair to move freely on the chart.\n   */\n  CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n  /**\n   * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n   */\n  CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n  /**\n   * This mode disables rendering of the crosshair.\n   */\n  CrosshairMode[CrosshairMode[\"Hidden\"] = 2] = \"Hidden\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n  constructor(model, options) {\n    super();\n    this._private__pane = null;\n    this._private__price = NaN;\n    this._private__index = 0;\n    this._private__visible = true;\n    this._private__priceAxisViews = new Map();\n    this._private__subscribed = false;\n    this._private__x = NaN;\n    this._private__y = NaN;\n    this._private__originX = NaN;\n    this._private__originY = NaN;\n    this._private__model = model;\n    this._private__options = options;\n    this._private__markersPaneView = new CrosshairMarksPaneView(model, this);\n    const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n      return priceScale => {\n        const coordinate = rawCoordinateProvider();\n        const rawPrice = rawPriceProvider();\n        if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n          // price must be defined\n          return {\n            _internal_price: rawPrice,\n            _internal_coordinate: coordinate\n          };\n        } else {\n          // always convert from coordinate\n          const firstValue = ensureNotNull(priceScale._internal_firstValue());\n          const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n          return {\n            _internal_price: price,\n            _internal_coordinate: coordinate\n          };\n        }\n      };\n    };\n    const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n      return () => {\n        const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n        const coordinate = rawCoordinateProvider();\n        if (!time || !Number.isFinite(coordinate)) {\n          return null;\n        }\n        return {\n          _internal_time: time,\n          _internal_coordinate: coordinate\n        };\n      };\n    };\n    // for current position always return both price and coordinate\n    this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n    const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n    this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n    this._private__paneView = new CrosshairPaneView(this);\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_saveOriginCoord(x, y) {\n    this._private__originX = x;\n    this._private__originY = y;\n  }\n  _internal_clearOriginCoord() {\n    this._private__originX = NaN;\n    this._private__originY = NaN;\n  }\n  _internal_originCoordX() {\n    return this._private__originX;\n  }\n  _internal_originCoordY() {\n    return this._private__originY;\n  }\n  _internal_setPosition(index, price, pane) {\n    if (!this._private__subscribed) {\n      this._private__subscribed = true;\n    }\n    this._private__visible = true;\n    this._private__tryToUpdateViews(index, price, pane);\n  }\n  _internal_appliedIndex() {\n    return this._private__index;\n  }\n  _internal_appliedX() {\n    return this._private__x;\n  }\n  _internal_appliedY() {\n    return this._private__y;\n  }\n  _internal_visible() {\n    return this._private__visible;\n  }\n  _internal_clearPosition() {\n    this._private__visible = false;\n    this._private__setIndexToLastSeriesBarIndex();\n    this._private__price = NaN;\n    this._private__x = NaN;\n    this._private__y = NaN;\n    this._private__pane = null;\n    this._internal_clearOriginCoord();\n  }\n  _internal_paneViews(pane) {\n    return this._private__pane !== null ? [this._private__paneView, this._private__markersPaneView] : [];\n  }\n  _internal_horzLineVisible(pane) {\n    return pane === this._private__pane && this._private__options.horzLine.visible;\n  }\n  _internal_vertLineVisible() {\n    return this._private__options.vertLine.visible;\n  }\n  _internal_priceAxisViews(pane, priceScale) {\n    if (!this._private__visible || this._private__pane !== pane) {\n      this._private__priceAxisViews.clear();\n    }\n    const views = [];\n    if (this._private__pane === pane) {\n      views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n    }\n    return views;\n  }\n  _internal_timeAxisViews() {\n    return this._private__visible ? [this._private__timeAxisView] : [];\n  }\n  _internal_pane() {\n    return this._private__pane;\n  }\n  _internal_updateAllViews() {\n    this._private__paneView._internal_update();\n    this._private__priceAxisViews.forEach(value => value._internal_update());\n    this._private__timeAxisView._internal_update();\n    this._private__markersPaneView._internal_update();\n  }\n  _private__priceScaleByPane(pane) {\n    if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n      return pane._internal_defaultPriceScale();\n    }\n    return null;\n  }\n  _private__tryToUpdateViews(index, price, pane) {\n    if (this._private__tryToUpdateData(index, price, pane)) {\n      this._internal_updateAllViews();\n    }\n  }\n  _private__tryToUpdateData(newIndex, newPrice, newPane) {\n    const oldX = this._private__x;\n    const oldY = this._private__y;\n    const oldPrice = this._private__price;\n    const oldIndex = this._private__index;\n    const oldPane = this._private__pane;\n    const priceScale = this._private__priceScaleByPane(newPane);\n    this._private__index = newIndex;\n    this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n    this._private__pane = newPane;\n    const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n    if (priceScale !== null && firstValue !== null) {\n      this._private__price = newPrice;\n      this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n    } else {\n      this._private__price = NaN;\n      this._private__y = NaN;\n    }\n    return oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index || oldPrice !== this._private__price || oldPane !== this._private__pane;\n  }\n  _private__setIndexToLastSeriesBarIndex() {\n    const lastIndexes = this._private__model._internal_serieses().map(s => s._internal_bars()._internal_lastIndex()).filter(notNull);\n    const lastBarIndex = lastIndexes.length === 0 ? null : Math.max(...lastIndexes);\n    this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n  }\n  _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n    let view = map.get(priceScale);\n    if (view === undefined) {\n      view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n      map.set(priceScale, view);\n    }\n    return view;\n  }\n}\nfunction isDefaultPriceScale(priceScaleId) {\n  return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\nfunction mergePaneInvalidation(beforeValue, newValue) {\n  if (beforeValue === undefined) {\n    return newValue;\n  }\n  const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n  const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n  return {\n    _internal_level: level,\n    _internal_autoScale: autoScale\n  };\n}\nclass InvalidateMask {\n  constructor(globalLevel) {\n    this._private__invalidatedPanes = new Map();\n    this._private__timeScaleInvalidations = [];\n    this._private__globalLevel = globalLevel;\n  }\n  _internal_invalidatePane(paneIndex, invalidation) {\n    const prevValue = this._private__invalidatedPanes.get(paneIndex);\n    const newValue = mergePaneInvalidation(prevValue, invalidation);\n    this._private__invalidatedPanes.set(paneIndex, newValue);\n  }\n  _internal_fullInvalidation() {\n    return this._private__globalLevel;\n  }\n  _internal_invalidateForPane(paneIndex) {\n    const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n    if (paneInvalidation === undefined) {\n      return {\n        _internal_level: this._private__globalLevel\n      };\n    }\n    return {\n      _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n      _internal_autoScale: paneInvalidation._internal_autoScale\n    };\n  }\n  _internal_setFitContent() {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 0 /* TimeScaleInvalidationType.FitContent */\n    }];\n  }\n  _internal_applyRange(range) {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */,\n      _internal_value: range\n    }];\n  }\n  _internal_setTimeScaleAnimation(animation) {\n    this._private__removeTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 5 /* TimeScaleInvalidationType.Animation */,\n      _internal_value: animation\n    });\n  }\n  _internal_stopTimeScaleAnimation() {\n    this._private__removeTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */\n    });\n  }\n  _internal_resetTimeScale() {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 4 /* TimeScaleInvalidationType.Reset */\n    }];\n  }\n  _internal_setBarSpacing(barSpacing) {\n    this._internal_stopTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */,\n      _internal_value: barSpacing\n    });\n  }\n  _internal_setRightOffset(offset) {\n    this._internal_stopTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */,\n      _internal_value: offset\n    });\n  }\n  _internal_timeScaleInvalidations() {\n    return this._private__timeScaleInvalidations;\n  }\n  _internal_merge(other) {\n    for (const tsInvalidation of other._private__timeScaleInvalidations) {\n      this._private__applyTimeScaleInvalidation(tsInvalidation);\n    }\n    this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n    other._private__invalidatedPanes.forEach((invalidation, index) => {\n      this._internal_invalidatePane(index, invalidation);\n    });\n  }\n  static _internal_light() {\n    return new InvalidateMask(2 /* InvalidationLevel.Light */);\n  }\n  static _internal_full() {\n    return new InvalidateMask(3 /* InvalidationLevel.Full */);\n  }\n  _private__applyTimeScaleInvalidation(invalidation) {\n    switch (invalidation._internal_type) {\n      case 0 /* TimeScaleInvalidationType.FitContent */:\n        this._internal_setFitContent();\n        break;\n      case 1 /* TimeScaleInvalidationType.ApplyRange */:\n        this._internal_applyRange(invalidation._internal_value);\n        break;\n      case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n        this._internal_setBarSpacing(invalidation._internal_value);\n        break;\n      case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n        this._internal_setRightOffset(invalidation._internal_value);\n        break;\n      case 4 /* TimeScaleInvalidationType.Reset */:\n        this._internal_resetTimeScale();\n        break;\n      case 5 /* TimeScaleInvalidationType.Animation */:\n        this._internal_setTimeScaleAnimation(invalidation._internal_value);\n        break;\n      case 6 /* TimeScaleInvalidationType.StopAnimation */:\n        this._private__removeTimeScaleAnimation();\n    }\n  }\n  _private__removeTimeScaleAnimation() {\n    const index = this._private__timeScaleInvalidations.findIndex(inv => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n    if (index !== -1) {\n      this._private__timeScaleInvalidations.splice(index, 1);\n    }\n  }\n}\nconst formatterOptions = {\n  _internal_decimalSign: '.',\n  _internal_decimalSignFractional: '\\''\n};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n  if (!isNumber(value)) {\n    return 'n/a';\n  }\n  if (!isInteger(length)) {\n    throw new TypeError('invalid length');\n  }\n  if (length < 0 || length > 16) {\n    throw new TypeError('invalid length');\n  }\n  if (length === 0) {\n    return value.toString();\n  }\n  const dummyString = '0000000000000000';\n  return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter {\n  constructor(priceScale, minMove) {\n    if (!minMove) {\n      minMove = 1;\n    }\n    if (!isNumber(priceScale) || !isInteger(priceScale)) {\n      priceScale = 100;\n    }\n    if (priceScale < 0) {\n      throw new TypeError('invalid base');\n    }\n    this._private__priceScale = priceScale;\n    this._private__minMove = minMove;\n    this._private__calculateDecimal();\n  }\n  format(price) {\n    // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n    // we should use it because it has the same width as plus sign +\n    const sign = price < 0 ? '\\u2212' : '';\n    price = Math.abs(price);\n    return sign + this._private__formatAsDecimal(price);\n  }\n  _private__calculateDecimal() {\n    // check if this._base is power of 10\n    // for double fractional _fractionalLength if for the main fractional only\n    this._internal__fractionalLength = 0;\n    if (this._private__priceScale > 0 && this._private__minMove > 0) {\n      let base = this._private__priceScale;\n      while (base > 1) {\n        base /= 10;\n        this._internal__fractionalLength++;\n      }\n    }\n  }\n  _private__formatAsDecimal(price) {\n    const base = this._private__priceScale / this._private__minMove;\n    let intPart = Math.floor(price);\n    let fracString = '';\n    const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n    if (base > 1) {\n      let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n      if (fracPart >= base) {\n        fracPart -= base;\n        intPart += 1;\n      }\n      fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n    } else {\n      // should round int part to min move\n      intPart = Math.round(intPart * base) / base;\n      // if min move > 1, fractional part is always = 0\n      if (fracLength > 0) {\n        fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n      }\n    }\n    return intPart.toFixed(0) + fracString;\n  }\n}\nclass PercentageFormatter extends PriceFormatter {\n  constructor(priceScale = 100) {\n    super(priceScale);\n  }\n  format(price) {\n    return `${super.format(price)}%`;\n  }\n}\nclass VolumeFormatter {\n  constructor(precision) {\n    this._private__precision = precision;\n  }\n  format(vol) {\n    let sign = '';\n    if (vol < 0) {\n      sign = '-';\n      vol = -vol;\n    }\n    if (vol < 995) {\n      return sign + this._private__formatNumber(vol);\n    } else if (vol < 999995) {\n      return sign + this._private__formatNumber(vol / 1000) + 'K';\n    } else if (vol < 999999995) {\n      vol = 1000 * Math.round(vol / 1000);\n      return sign + this._private__formatNumber(vol / 1000000) + 'M';\n    } else {\n      vol = 1000000 * Math.round(vol / 1000000);\n      return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n    }\n  }\n  _private__formatNumber(value) {\n    let res;\n    const priceScale = Math.pow(10, this._private__precision);\n    value = Math.round(value * priceScale) / priceScale;\n    if (value >= 1e-15 && value < 1) {\n      res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n    } else {\n      res = String(value);\n    }\n    return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n  }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth,\n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n  if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n    return;\n  }\n  const {\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  } = renderingScope;\n  const firstItem = items[visibleRange.from];\n  let currentStyle = styleGetter(renderingScope, firstItem);\n  let currentStyleFirstItem = firstItem;\n  if (visibleRange.to - visibleRange.from < 2) {\n    const halfBarWidth = barWidth / 2;\n    ctx.beginPath();\n    const item1 = {\n      _internal_x: firstItem._internal_x - halfBarWidth,\n      _internal_y: firstItem._internal_y\n    };\n    const item2 = {\n      _internal_x: firstItem._internal_x + halfBarWidth,\n      _internal_y: firstItem._internal_y\n    };\n    ctx.moveTo(item1._internal_x * horizontalPixelRatio, item1._internal_y * verticalPixelRatio);\n    ctx.lineTo(item2._internal_x * horizontalPixelRatio, item2._internal_y * verticalPixelRatio);\n    finishStyledArea(renderingScope, currentStyle, item1, item2);\n  } else {\n    const changeStyle = (newStyle, currentItem) => {\n      finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n      ctx.beginPath();\n      currentStyle = newStyle;\n      currentStyleFirstItem = currentItem;\n    };\n    let currentItem = currentStyleFirstItem;\n    ctx.beginPath();\n    ctx.moveTo(firstItem._internal_x * horizontalPixelRatio, firstItem._internal_y * verticalPixelRatio);\n    for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n      currentItem = items[i];\n      const itemStyle = styleGetter(renderingScope, currentItem);\n      switch (lineType) {\n        case 0 /* LineType.Simple */:\n          ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n          break;\n        case 1 /* LineType.WithSteps */:\n          ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n          if (itemStyle !== currentStyle) {\n            changeStyle(itemStyle, currentItem);\n            ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n          }\n          ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n          break;\n        case 2 /* LineType.Curved */:\n          {\n            const [cp1, cp2] = getControlPoints(items, i - 1, i);\n            ctx.bezierCurveTo(cp1._internal_x * horizontalPixelRatio, cp1._internal_y * verticalPixelRatio, cp2._internal_x * horizontalPixelRatio, cp2._internal_y * verticalPixelRatio, currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n            break;\n          }\n      }\n      if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n        changeStyle(itemStyle, currentItem);\n        ctx.moveTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n      }\n    }\n    if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n      finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n    }\n  }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n  return {\n    _internal_x: p1._internal_x - p2._internal_x,\n    _internal_y: p1._internal_y - p2._internal_y\n  };\n}\nfunction add(p1, p2) {\n  return {\n    _internal_x: p1._internal_x + p2._internal_x,\n    _internal_y: p1._internal_y + p2._internal_y\n  };\n}\nfunction divide(p1, n) {\n  return {\n    _internal_x: p1._internal_x / n,\n    _internal_y: p1._internal_y / n\n  };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n  const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n  const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n  const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n  const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n  return [cp1, cp2];\n}\nfunction finishStyledArea$1(baseLevelCoordinate, scope, style, areaFirstItem, newAreaFirstItem) {\n  const {\n    context,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  } = scope;\n  context.lineTo(newAreaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n  context.lineTo(areaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n  context.closePath();\n  context.fillStyle = style;\n  context.fill();\n}\nclass PaneRendererAreaBase extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    var _a;\n    if (this._internal__data === null) {\n      return;\n    }\n    const {\n      _internal_items: items,\n      _internal_visibleRange: visibleRange,\n      _internal_barWidth: barWidth,\n      _internal_lineWidth: lineWidth,\n      _internal_lineStyle: lineStyle,\n      _internal_lineType: lineType\n    } = this._internal__data;\n    const baseLevelCoordinate = (_a = this._internal__data._internal_baseLevelCoordinate) !== null && _a !== void 0 ? _a : this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height;\n    if (visibleRange === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = lineWidth;\n    setLineStyle(ctx, lineStyle);\n    // walk lines with width=1 to have more accurate gradient's filling\n    ctx.lineWidth = 1;\n    walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea$1.bind(null, baseLevelCoordinate));\n  }\n}\nfunction clamp(value, minVal, maxVal) {\n  return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n  if (value < 0) {\n    return false;\n  }\n  for (let current = value; current > 1; current /= 10) {\n    if (current % 10 !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n  return x2 - x1 <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n  return Math.abs(x1 - x2) < epsilon;\n}\n// We can't use Math.min(...arr) because that would only support arrays shorter than 65536 items.\nfunction min(arr) {\n  if (arr.length < 1) {\n    throw Error('array is empty');\n  }\n  let minVal = arr[0];\n  for (let i = 1; i < arr.length; ++i) {\n    if (arr[i] < minVal) {\n      minVal = arr[i];\n    }\n  }\n  return minVal;\n}\nfunction ceiledEven(x) {\n  const ceiled = Math.ceil(x);\n  return ceiled % 2 !== 0 ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n  const ceiled = Math.ceil(x);\n  return ceiled % 2 === 0 ? ceiled - 1 : ceiled;\n}\nclass GradientStyleCache {\n  _internal_get(scope, params) {\n    const cachedParams = this._private__params;\n    const {\n      _internal_topColor1: topColor1,\n      _internal_topColor2: topColor2,\n      _internal_bottomColor1: bottomColor1,\n      _internal_bottomColor2: bottomColor2,\n      _internal_bottom: bottom,\n      _internal_baseLevelCoordinate: baseLevelCoordinate\n    } = params;\n    if (this._private__cachedValue === undefined || cachedParams === undefined || cachedParams._internal_topColor1 !== topColor1 || cachedParams._internal_topColor2 !== topColor2 || cachedParams._internal_bottomColor1 !== bottomColor1 || cachedParams._internal_bottomColor2 !== bottomColor2 || cachedParams._internal_baseLevelCoordinate !== baseLevelCoordinate || cachedParams._internal_bottom !== bottom) {\n      const gradient = scope.context.createLinearGradient(0, 0, 0, bottom);\n      gradient.addColorStop(0, topColor1);\n      if (baseLevelCoordinate != null) {\n        const baselinePercent = clamp(baseLevelCoordinate * scope.verticalPixelRatio / bottom, 0, 1);\n        gradient.addColorStop(baselinePercent, topColor2);\n        gradient.addColorStop(baselinePercent, bottomColor1);\n      }\n      gradient.addColorStop(1, bottomColor2);\n      this._private__cachedValue = gradient;\n      this._private__params = params;\n    }\n    return this._private__cachedValue;\n  }\n}\nclass PaneRendererArea extends PaneRendererAreaBase {\n  constructor() {\n    super(...arguments);\n    this._private__fillCache = new GradientStyleCache();\n  }\n  _internal__fillStyle(renderingScope, item) {\n    return this._private__fillCache._internal_get(renderingScope, {\n      _internal_topColor1: item._internal_topColor,\n      _internal_topColor2: '',\n      _internal_bottomColor1: '',\n      _internal_bottomColor2: item._internal_bottomColor,\n      _internal_bottom: renderingScope.bitmapSize.height\n    });\n  }\n}\nfunction drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange,\n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter) {\n  const {\n    horizontalPixelRatio,\n    verticalPixelRatio,\n    context\n  } = renderingScope;\n  let prevStyle = null;\n  const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n  const correction = tickWidth % 2 / 2;\n  const radius = pointMarkersRadius * verticalPixelRatio + correction;\n  for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n    const point = items[i];\n    if (point) {\n      const style = styleGetter(renderingScope, point);\n      if (style !== prevStyle) {\n        context.beginPath();\n        if (prevStyle !== null) {\n          context.fill();\n        }\n        context.fillStyle = style;\n        prevStyle = style;\n      }\n      const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n      const centerY = point._internal_y * verticalPixelRatio;\n      context.moveTo(centerX, centerY);\n      context.arc(centerX, centerY, radius, 0, Math.PI * 2);\n    }\n  }\n  context.fill();\n}\nfunction finishStyledArea(scope, style) {\n  const ctx = scope.context;\n  ctx.strokeStyle = style;\n  ctx.stroke();\n}\nclass PaneRendererLineBase extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    if (this._internal__data === null) {\n      return;\n    }\n    const {\n      _internal_items: items,\n      _internal_visibleRange: visibleRange,\n      _internal_barWidth: barWidth,\n      _internal_lineType: lineType,\n      _internal_lineWidth: lineWidth,\n      _internal_lineStyle: lineStyle,\n      _internal_pointMarkersRadius: pointMarkersRadius\n    } = this._internal__data;\n    if (visibleRange === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    ctx.lineCap = 'butt';\n    ctx.lineWidth = lineWidth * renderingScope.verticalPixelRatio;\n    setLineStyle(ctx, lineStyle);\n    ctx.lineJoin = 'round';\n    const styleGetter = this._internal__strokeStyle.bind(this);\n    if (lineType !== undefined) {\n      walkLine(renderingScope, items, lineType, visibleRange, barWidth, styleGetter, finishStyledArea);\n    }\n    if (pointMarkersRadius) {\n      drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, styleGetter);\n    }\n  }\n}\nclass PaneRendererLine extends PaneRendererLineBase {\n  _internal__strokeStyle(renderingScope, item) {\n    return item._internal_lineColor;\n  }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction boundCompare(lower, arr, value, compare, start = 0, to = arr.length) {\n  let count = to - start;\n  while (0 < count) {\n    const count2 = count >> 1;\n    const mid = start + count2;\n    if (compare(arr[mid], value) === lower) {\n      start = mid + 1;\n      count -= count2 + 1;\n    } else {\n      count = count2;\n    }\n  }\n  return start;\n}\nconst lowerBound = boundCompare.bind(null, true);\nconst upperBound = boundCompare.bind(null, false);\nfunction lowerBoundItemsCompare(item, time) {\n  return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(item, time) {\n  return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n  const firstBar = range._internal_left();\n  const lastBar = range._internal_right();\n  const from = lowerBound(items, firstBar, lowerBoundItemsCompare);\n  const to = upperBound(items, lastBar, upperBoundItemsCompare);\n  if (!extendedRange) {\n    return {\n      from,\n      to\n    };\n  }\n  let extendedFrom = from;\n  let extendedTo = to;\n  if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n    extendedFrom = from - 1;\n  }\n  if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n    extendedTo = to + 1;\n  }\n  return {\n    from: extendedFrom,\n    to: extendedTo\n  };\n}\nclass SeriesPaneViewBase {\n  constructor(series, model, extendedVisibleRange) {\n    this._internal__invalidated = true;\n    this._internal__dataInvalidated = true;\n    this._internal__optionsInvalidated = true;\n    this._internal__items = [];\n    this._internal__itemsVisibleRange = null;\n    this._internal__series = series;\n    this._internal__model = model;\n    this._private__extendedVisibleRange = extendedVisibleRange;\n  }\n  _internal_update(updateType) {\n    this._internal__invalidated = true;\n    if (updateType === 'data') {\n      this._internal__dataInvalidated = true;\n    }\n    if (updateType === 'options') {\n      this._internal__optionsInvalidated = true;\n    }\n  }\n  _internal_renderer() {\n    if (!this._internal__series._internal_visible()) {\n      return null;\n    }\n    this._private__makeValid();\n    return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n  }\n  _internal__updateOptions() {\n    this._internal__items = this._internal__items.map(item => Object.assign(Object.assign({}, item), this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time)));\n  }\n  _internal__clearVisibleRange() {\n    this._internal__itemsVisibleRange = null;\n  }\n  _private__makeValid() {\n    if (this._internal__dataInvalidated) {\n      this._internal__fillRawPoints();\n      this._internal__dataInvalidated = false;\n    }\n    if (this._internal__optionsInvalidated) {\n      this._internal__updateOptions();\n      this._internal__optionsInvalidated = false;\n    }\n    if (this._internal__invalidated) {\n      this._private__makeValidImpl();\n      this._internal__invalidated = false;\n    }\n  }\n  _private__makeValidImpl() {\n    const priceScale = this._internal__series._internal_priceScale();\n    const timeScale = this._internal__model._internal_timeScale();\n    this._internal__clearVisibleRange();\n    if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n      return;\n    }\n    const visibleBars = timeScale._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return;\n    }\n    if (this._internal__series._internal_bars()._internal_size() === 0) {\n      return;\n    }\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n    this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n    this._internal__prepareRendererData();\n  }\n}\nclass LinePaneViewBase extends SeriesPaneViewBase {\n  constructor(series, model) {\n    super(series, model, true);\n  }\n  _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__createRawItemBase(time, price) {\n    return {\n      _internal_time: time,\n      _internal_price: price,\n      _internal_x: NaN,\n      _internal_y: NaN\n    };\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => {\n      const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n      return this._internal__createRawItem(row._internal_index, value, colorer);\n    });\n  }\n}\nclass SeriesAreaPaneView extends LinePaneViewBase {\n  constructor(series, model) {\n    super(series, model);\n    this._internal__renderer = new CompositeRenderer();\n    this._private__areaRenderer = new PaneRendererArea();\n    this._private__lineRenderer = new PaneRendererLine();\n    this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const options = this._internal__series._internal_options();\n    this._private__areaRenderer._internal_setData({\n      _internal_lineType: options.lineType,\n      _internal_items: this._internal__items,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineWidth: options.lineWidth,\n      _internal_baseLevelCoordinate: null,\n      _internal_invertFilledArea: options.invertFilledArea,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing()\n    });\n    this._private__lineRenderer._internal_setData({\n      _internal_lineType: options.lineVisible ? options.lineType : undefined,\n      _internal_items: this._internal__items,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineWidth: options.lineWidth,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_pointMarkersRadius: options.pointMarkersVisible ? options.pointMarkersRadius || options.lineWidth / 2 + 2 : undefined\n    });\n  }\n}\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n  return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n  const barSpacingSpecialCaseFrom = 2.5;\n  const barSpacingSpecialCaseTo = 4;\n  const barSpacingSpecialCaseCoeff = 3;\n  if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n    return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n  }\n  // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n  const barSpacingReducingCoeff = 0.2;\n  const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n  const res = Math.floor(barSpacing * coeff * pixelRatio);\n  const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n  const optimal = Math.min(res, scaledBarSpacing);\n  return Math.max(Math.floor(pixelRatio), optimal);\n}\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__barWidth = 0;\n    this._private__barLineWidth = 0;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  // eslint-disable-next-line complexity\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n    // grid and crosshair have line width = Math.floor(pixelRatio)\n    // if this value is odd, we have to make bars' width odd\n    // if this value is even, we have to make bars' width even\n    // in order of keeping crosshair-over-bar drawing symmetric\n    if (this._private__barWidth >= 2) {\n      const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n      if (lineWidth % 2 !== this._private__barWidth % 2) {\n        this._private__barWidth--;\n      }\n    }\n    // if scale is compressed, bar could become less than 1 CSS pixel\n    this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n    let prevColor = null;\n    const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n      const bar = this._private__data._internal_bars[i];\n      if (prevColor !== bar._internal_barColor) {\n        ctx.fillStyle = bar._internal_barColor;\n        prevColor = bar._internal_barColor;\n      }\n      const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n      const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n      const bodyLeft = bodyCenter - bodyWidthHalf;\n      const bodyWidth = this._private__barLineWidth;\n      const bodyRight = bodyLeft + bodyWidth - 1;\n      const high = Math.min(bar._internal_highY, bar._internal_lowY);\n      const low = Math.max(bar._internal_highY, bar._internal_lowY);\n      const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n      const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n      const bodyHeight = Math.max(bodyBottom - bodyTop, this._private__barLineWidth);\n      ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n      const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n      if (drawOpenClose) {\n        if (this._private__data._internal_openVisible) {\n          const openLeft = bodyCenter - sideWidth;\n          let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n          let openBottom = openTop + bodyWidth - 1;\n          if (openBottom > bodyTop + bodyHeight - 1) {\n            openBottom = bodyTop + bodyHeight - 1;\n            openTop = openBottom - bodyWidth + 1;\n          }\n          ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n        }\n        const closeRight = bodyCenter + sideWidth;\n        let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n        let closeBottom = closeTop + bodyWidth - 1;\n        if (closeBottom > bodyTop + bodyHeight - 1) {\n          closeBottom = bodyTop + bodyHeight - 1;\n          closeTop = closeBottom - bodyWidth + 1;\n        }\n        ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n      }\n    }\n  }\n  _private__calcBarWidth(pixelRatio) {\n    const limit = Math.floor(pixelRatio);\n    return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n  }\n}\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n  constructor(series, model) {\n    super(series, model, false);\n  }\n  _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__createDefaultItem(time, bar, colorer) {\n    return {\n      _internal_time: time,\n      _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n      _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n      _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n      _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n      _internal_x: NaN,\n      _internal_openY: NaN,\n      _internal_highY: NaN,\n      _internal_lowY: NaN,\n      _internal_closeY: NaN\n    };\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => this._internal__createRawItem(row._internal_index, row, colorer));\n  }\n}\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererBars();\n  }\n  _internal__createRawItem(time, bar, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const barStyleProps = this._internal__series._internal_options();\n    this._internal__renderer._internal_setData({\n      _internal_bars: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_openVisible: barStyleProps.openVisible,\n      _internal_thinBars: barStyleProps.thinBars,\n      _internal_visibleRange: this._internal__itemsVisibleRange\n    });\n  }\n}\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n  constructor() {\n    super(...arguments);\n    this._private__fillCache = new GradientStyleCache();\n  }\n  _internal__fillStyle(renderingScope, item) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const data = this._internal__data;\n    return this._private__fillCache._internal_get(renderingScope, {\n      _internal_topColor1: item._internal_topFillColor1,\n      _internal_topColor2: item._internal_topFillColor2,\n      _internal_bottomColor1: item._internal_bottomFillColor1,\n      _internal_bottomColor2: item._internal_bottomFillColor2,\n      _internal_bottom: renderingScope.bitmapSize.height,\n      _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate\n    });\n  }\n}\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n  constructor() {\n    super(...arguments);\n    this._private__strokeCache = new GradientStyleCache();\n  }\n  _internal__strokeStyle(renderingScope, item) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const data = this._internal__data;\n    return this._private__strokeCache._internal_get(renderingScope, {\n      _internal_topColor1: item._internal_topLineColor,\n      _internal_topColor2: item._internal_topLineColor,\n      _internal_bottomColor1: item._internal_bottomLineColor,\n      _internal_bottomColor2: item._internal_bottomLineColor,\n      _internal_bottom: renderingScope.bitmapSize.height,\n      _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate\n    });\n  }\n}\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n  constructor(series, model) {\n    super(series, model);\n    this._internal__renderer = new CompositeRenderer();\n    this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n    this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n    this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    const options = this._internal__series._internal_options();\n    const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(options.baseValue.price, firstValue._internal_value);\n    const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n    this._private__baselineAreaRenderer._internal_setData({\n      _internal_items: this._internal__items,\n      _internal_lineWidth: options.lineWidth,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineType: options.lineType,\n      _internal_baseLevelCoordinate: baseLevelCoordinate,\n      _internal_invertFilledArea: false,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: barWidth\n    });\n    this._private__baselineLineRenderer._internal_setData({\n      _internal_items: this._internal__items,\n      _internal_lineWidth: options.lineWidth,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineType: options.lineVisible ? options.lineType : undefined,\n      _internal_pointMarkersRadius: options.pointMarkersVisible ? options.pointMarkersRadius || options.lineWidth / 2 + 2 : undefined,\n      _internal_baseLevelCoordinate: baseLevelCoordinate,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: barWidth\n    });\n  }\n}\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    // scaled with pixelRatio\n    this._private__barWidth = 0;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    const {\n      horizontalPixelRatio\n    } = renderingScope;\n    // now we know pixelRatio and we could calculate barWidth effectively\n    this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n    // grid and crosshair have line width = Math.floor(pixelRatio)\n    // if this value is odd, we have to make candlesticks' width odd\n    // if this value is even, we have to make candlesticks' width even\n    // in order of keeping crosshair-over-candlesticks drawing symmetric\n    if (this._private__barWidth >= 2) {\n      const wickWidth = Math.floor(horizontalPixelRatio);\n      if (wickWidth % 2 !== this._private__barWidth % 2) {\n        this._private__barWidth--;\n      }\n    }\n    const bars = this._private__data._internal_bars;\n    if (this._private__data._internal_wickVisible) {\n      this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n    if (this._private__data._internal_borderVisible) {\n      this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n      this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n  }\n  _private__drawWicks(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevWickColor = '';\n    let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n    wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n    const wickOffset = Math.floor(wickWidth * 0.5);\n    let prevEdge = null;\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      if (bar._internal_barWickColor !== prevWickColor) {\n        ctx.fillStyle = bar._internal_barWickColor;\n        prevWickColor = bar._internal_barWickColor;\n      }\n      const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const high = Math.round(bar._internal_highY * verticalPixelRatio);\n      const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n      const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n      let left = scaledX - wickOffset;\n      const right = left + wickWidth - 1;\n      if (prevEdge !== null) {\n        left = Math.max(prevEdge + 1, left);\n        left = Math.min(left, right);\n      }\n      const width = right - left + 1;\n      ctx.fillRect(left, high, width, top - high);\n      ctx.fillRect(left, bottom + 1, width, low - bottom);\n      prevEdge = right;\n    }\n  }\n  _private__calculateBorderWidth(pixelRatio) {\n    let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n    if (this._private__barWidth <= 2 * borderWidth) {\n      borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n    }\n    const res = Math.max(Math.floor(pixelRatio), borderWidth);\n    if (this._private__barWidth <= res * 2) {\n      // do not draw bodies, restore original value\n      return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n    }\n    return res;\n  }\n  _private__drawBorder(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevBorderColor = '';\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    let prevEdge = null;\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      if (bar._internal_barBorderColor !== prevBorderColor) {\n        ctx.fillStyle = bar._internal_barBorderColor;\n        prevBorderColor = bar._internal_barBorderColor;\n      }\n      let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n      // this is important to calculate right before patching left\n      const right = left + this._private__barWidth - 1;\n      const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      if (prevEdge !== null) {\n        left = Math.max(prevEdge + 1, left);\n        left = Math.min(left, right);\n      }\n      if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n        fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n      } else {\n        const width = right - left + 1;\n        ctx.fillRect(left, top, width, bottom - top + 1);\n      }\n      prevEdge = right;\n    }\n  }\n  _private__drawCandles(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevBarColor = '';\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n      let right = left + this._private__barWidth - 1;\n      if (bar._internal_barColor !== prevBarColor) {\n        const barColor = bar._internal_barColor;\n        ctx.fillStyle = barColor;\n        prevBarColor = barColor;\n      }\n      if (this._private__data._internal_borderVisible) {\n        left += borderWidth;\n        top += borderWidth;\n        right -= borderWidth;\n        bottom -= borderWidth;\n      }\n      if (top > bottom) {\n        continue;\n      }\n      ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n    }\n  }\n}\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererCandlesticks();\n  }\n  _internal__createRawItem(time, bar, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const candlestickStyleProps = this._internal__series._internal_options();\n    this._internal__renderer._internal_setData({\n      _internal_bars: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_wickVisible: candlestickStyleProps.wickVisible,\n      _internal_borderVisible: candlestickStyleProps.borderVisible,\n      _internal_visibleRange: this._internal__itemsVisibleRange\n    });\n  }\n}\nclass CustomSeriesPaneRendererWrapper {\n  constructor(sourceRenderer, priceScale) {\n    this._private__sourceRenderer = sourceRenderer;\n    this._private__priceScale = priceScale;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__sourceRenderer.draw(target, this._private__priceScale, isHovered, hitTestData);\n  }\n}\nclass SeriesCustomPaneView extends SeriesPaneViewBase {\n  constructor(series, model, paneView) {\n    super(series, model, false);\n    this._private__paneView = paneView;\n    this._internal__renderer = new CustomSeriesPaneRendererWrapper(this._private__paneView.renderer(), price => {\n      const firstValue = series._internal_firstValue();\n      if (firstValue === null) {\n        return null;\n      }\n      return series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n    });\n  }\n  _internal_priceValueBuilder(plotRow) {\n    return this._private__paneView.priceValueBuilder(plotRow);\n  }\n  _internal_isWhitespace(data) {\n    return this._private__paneView.isWhitespace(data);\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => {\n      return Object.assign(Object.assign({\n        _internal_time: row._internal_index,\n        _internal_x: NaN\n      }, colorer._internal_barStyle(row._internal_index)), {\n        _internal_originalData: row._internal_data\n      });\n    });\n  }\n  _internal__convertToCoordinates(priceScale, timeScale) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__prepareRendererData() {\n    this._private__paneView.update({\n      bars: this._internal__items.map(unwrapItemData),\n      barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      visibleRange: this._internal__itemsVisibleRange\n    }, this._internal__series._internal_options());\n  }\n}\nfunction unwrapItemData(item) {\n  return {\n    x: item._internal_x,\n    time: item._internal_time,\n    originalData: item._internal_originalData,\n    barColor: item._internal_barColor\n  };\n}\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__precalculatedCache = [];\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n    this._private__precalculatedCache = [];\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    if (!this._private__precalculatedCache.length) {\n      this._private__fillPrecalculatedCache(horizontalPixelRatio);\n    }\n    const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n    const histogramBase = Math.round(this._private__data._internal_histogramBase * verticalPixelRatio);\n    const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n    const bottomHistogramBase = topHistogramBase + tickWidth;\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      const y = Math.round(item._internal_y * verticalPixelRatio);\n      ctx.fillStyle = item._internal_barColor;\n      let top;\n      let bottom;\n      if (y <= topHistogramBase) {\n        top = y;\n        bottom = bottomHistogramBase;\n      } else {\n        top = topHistogramBase;\n        bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n      }\n      ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n    }\n  }\n  // eslint-disable-next-line complexity\n  _private__fillPrecalculatedCache(pixelRatio) {\n    if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n      this._private__precalculatedCache = [];\n      return;\n    }\n    const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n    const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n    this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      // force cast to avoid ensureDefined call\n      const x = Math.round(item._internal_x * pixelRatio);\n      let left;\n      let right;\n      if (columnWidth % 2) {\n        const halfWidth = (columnWidth - 1) / 2;\n        left = x - halfWidth;\n        right = x + halfWidth;\n      } else {\n        // shift pixel to left\n        const halfWidth = columnWidth / 2;\n        left = x - halfWidth;\n        right = x + halfWidth - 1;\n      }\n      this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n        _internal_left: left,\n        _internal_right: right,\n        _internal_roundedCenter: x,\n        _internal_center: item._internal_x * pixelRatio,\n        _internal_time: item._internal_time\n      };\n    }\n    // correct positions\n    for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n      if (current._internal_time !== prev._internal_time + 1) {\n        continue;\n      }\n      if (current._internal_left - prev._internal_right !== spacing + 1) {\n        // have to align\n        if (prev._internal_roundedCenter > prev._internal_center) {\n          // prev wasshifted to left, so add pixel to right\n          prev._internal_right = current._internal_left - spacing - 1;\n        } else {\n          // extend current to left\n          current._internal_left = prev._internal_right + spacing + 1;\n        }\n      }\n    }\n    let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      // this could happen if barspacing < 1\n      if (current._internal_right < current._internal_left) {\n        current._internal_right = current._internal_left;\n      }\n      const width = current._internal_right - current._internal_left + 1;\n      minWidth = Math.min(width, minWidth);\n    }\n    if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n      for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n        const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n        const width = current._internal_right - current._internal_left + 1;\n        if (width > minWidth) {\n          if (current._internal_roundedCenter > current._internal_center) {\n            current._internal_right -= 1;\n          } else {\n            current._internal_left += 1;\n          }\n        }\n      }\n    }\n  }\n}\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererHistogram();\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const data = {\n      _internal_items: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value)\n    };\n    this._internal__renderer._internal_setData(data);\n  }\n}\nclass SeriesLinePaneView extends LinePaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererLine();\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const options = this._internal__series._internal_options();\n    const data = {\n      _internal_items: this._internal__items,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineType: options.lineVisible ? options.lineType : undefined,\n      _internal_lineWidth: options.lineWidth,\n      _internal_pointMarkersRadius: options.pointMarkersVisible ? options.pointMarkersRadius || options.lineWidth / 2 + 2 : undefined,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing()\n    };\n    this._internal__renderer._internal_setData(data);\n  }\n}\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n  constructor(size = 50) {\n    this._private__actualSize = 0;\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__tick2Labels = {};\n    this._private__cache = new Map();\n    this._private__maxSize = size;\n  }\n  _internal_reset() {\n    this._private__actualSize = 0;\n    this._private__cache.clear();\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__tick2Labels = {};\n  }\n  _internal_measureText(ctx, text, optimizationReplacementRe) {\n    return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n  }\n  _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n    const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n    // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n    return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n  }\n  _private__getMetrics(ctx, text, optimizationReplacementRe) {\n    const re = optimizationReplacementRe || defaultReplacementRe;\n    const cacheString = String(text).replace(re, '0');\n    if (this._private__cache.has(cacheString)) {\n      return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n    }\n    if (this._private__actualSize === this._private__maxSize) {\n      const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n      delete this._private__tick2Labels[this._private__oldestTick];\n      this._private__cache.delete(oldestValue);\n      this._private__oldestTick++;\n      this._private__actualSize--;\n    }\n    ctx.save();\n    ctx.textBaseline = 'middle';\n    const metrics = ctx.measureText(cacheString);\n    ctx.restore();\n    if (metrics.width === 0 && !!text.length) {\n      // measureText can return 0 in FF depending on a canvas size, don't cache it\n      return metrics;\n    }\n    this._private__cache.set(cacheString, {\n      _internal_metrics: metrics,\n      _internal_tick: this._private__usageTick\n    });\n    this._private__tick2Labels[this._private__usageTick] = cacheString;\n    this._private__actualSize++;\n    this._private__usageTick++;\n    return metrics;\n  }\n}\nclass PanePriceAxisViewRenderer {\n  constructor(textWidthCache) {\n    this._private__priceAxisViewRenderer = null;\n    this._private__rendererOptions = null;\n    this._private__align = 'right';\n    this._private__textWidthCache = textWidthCache;\n  }\n  _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n    this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n    this._private__rendererOptions = rendererOptions;\n    this._private__align = align;\n  }\n  _internal_draw(target) {\n    if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n      return;\n    }\n    this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n  }\n}\nclass PanePriceAxisView {\n  constructor(priceAxisView, dataSource, chartModel) {\n    this._private__priceAxisView = priceAxisView;\n    this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n    this._private__dataSource = dataSource;\n    this._private__chartModel = chartModel;\n    this._private__fontSize = -1;\n    this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n  }\n  _internal_renderer() {\n    const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n    if (pane === null) {\n      return null;\n    }\n    // this price scale will be used to find label placement only (left, right, none)\n    const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n    if (priceScale === null) {\n      return null;\n    }\n    const position = pane._internal_priceScalePosition(priceScale);\n    if (position === 'overlay') {\n      return null;\n    }\n    const options = this._private__chartModel._internal_priceAxisRendererOptions();\n    if (options._internal_fontSize !== this._private__fontSize) {\n      this._private__fontSize = options._internal_fontSize;\n      this._private__textWidthCache._internal_reset();\n    }\n    this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n    return this._private__renderer;\n  }\n}\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_hitTest(x, y) {\n    var _a;\n    if (!((_a = this._private__data) === null || _a === void 0 ? void 0 : _a._internal_visible)) {\n      return null;\n    }\n    const {\n      _internal_y: itemY,\n      _internal_lineWidth: lineWidth,\n      _internal_externalId: externalId\n    } = this._private__data;\n    // add a fixed area threshold around line (Y + width) for hit test\n    if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n      return {\n        _internal_hitTestData: this._private__data,\n        _internal_externalId: externalId\n      };\n    }\n    return null;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    if (this._private__data._internal_visible === false) {\n      return;\n    }\n    const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n    if (y < 0 || y > bitmapSize.height) {\n      return;\n    }\n    ctx.lineCap = 'butt';\n    ctx.strokeStyle = this._private__data._internal_color;\n    ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n    setLineStyle(ctx, this._private__data._internal_lineStyle);\n    drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n  }\n}\nclass SeriesHorizontalLinePaneView {\n  constructor(series) {\n    this._internal__lineRendererData = {\n      _internal_y: 0,\n      _internal_color: 'rgba(0, 0, 0, 0)',\n      _internal_lineWidth: 1,\n      _internal_lineStyle: 0 /* LineStyle.Solid */,\n      _internal_visible: false\n    };\n    this._internal__lineRenderer = new HorizontalLineRenderer();\n    this._private__invalidated = true;\n    this._internal__series = series;\n    this._internal__model = series._internal_model();\n    this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (!this._internal__series._internal_visible()) {\n      return null;\n    }\n    if (this._private__invalidated) {\n      this._internal__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._internal__lineRenderer;\n  }\n}\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(series) {\n    super(series);\n  }\n  _internal__updateImpl() {\n    this._internal__lineRendererData._internal_visible = false;\n    const priceScale = this._internal__series._internal_priceScale();\n    const mode = priceScale._internal_mode()._internal_mode;\n    if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n      return;\n    }\n    const seriesOptions = this._internal__series._internal_options();\n    if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n      return;\n    }\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    this._internal__lineRendererData._internal_visible = true;\n    this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n    this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n    this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n    this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n  }\n}\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_data() {\n    return this._private__data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    const data = this._private__data;\n    if (data === null) {\n      return;\n    }\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = tickWidth % 2 / 2;\n    const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n    const centerY = data._internal_center.y * verticalPixelRatio;\n    ctx.fillStyle = data._internal_seriesLineColor;\n    ctx.beginPath();\n    // TODO: it is better to have different horizontal and vertical radii\n    const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n    ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.fillStyle = data._internal_fillColor;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = tickWidth;\n    ctx.strokeStyle = data._internal_strokeColor;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n    ctx.stroke();\n  }\n}\nconst animationStagesData = [{\n  _internal_start: 0,\n  _internal_end: 0.25 /* Constants.Stage1Period */,\n  _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n  _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n  _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n  _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */\n}, {\n  _internal_start: 0.25 /* Constants.Stage1Period */,\n  _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n  _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n  _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n  _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n  _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */\n}, {\n  _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n  _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n  _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n  _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n  _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n  _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */\n}];\nfunction color(seriesLineColor, stage, startAlpha, endAlpha) {\n  const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n  return applyAlpha(seriesLineColor, alpha);\n}\nfunction radius(stage, startRadius, endRadius) {\n  return startRadius + (endRadius - startRadius) * stage;\n}\nfunction animationData(durationSinceStart, lineColor) {\n  const globalStage = durationSinceStart % 2600 /* Constants.AnimationPeriod */ / 2600 /* Constants.AnimationPeriod */;\n  let currentStageData;\n  for (const stageData of animationStagesData) {\n    if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n      currentStageData = stageData;\n      break;\n    }\n  }\n  assert(currentStageData !== undefined, 'Last price animation internal logic error');\n  const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n  return {\n    _internal_fillColor: color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n    _internal_strokeColor: color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n    _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius)\n  };\n}\nclass SeriesLastPriceAnimationPaneView {\n  constructor(series) {\n    this._private__renderer = new SeriesLastPriceAnimationRenderer();\n    this._private__invalidated = true;\n    this._private__stageInvalidated = true;\n    this._private__startTime = performance.now();\n    this._private__endTime = this._private__startTime - 1;\n    this._private__series = series;\n  }\n  _internal_onDataCleared() {\n    this._private__endTime = this._private__startTime - 1;\n    this._internal_update();\n  }\n  _internal_onNewRealtimeDataReceived() {\n    this._internal_update();\n    if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n      const now = performance.now();\n      const timeToAnimationEnd = this._private__endTime - now;\n      if (timeToAnimationEnd > 0) {\n        if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n          this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n        }\n        return;\n      }\n      this._private__startTime = now;\n      this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n    }\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_invalidateStage() {\n    this._private__stageInvalidated = true;\n  }\n  _internal_visible() {\n    // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n    return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n  }\n  _internal_animationActive() {\n    switch (this._private__series._internal_options().lastPriceAnimation) {\n      case 0 /* LastPriceAnimationMode.Disabled */:\n        return false;\n      case 1 /* LastPriceAnimationMode.Continuous */:\n        return true;\n      case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n        return performance.now() <= this._private__endTime;\n    }\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n      this._private__stageInvalidated = false;\n    } else if (this._private__stageInvalidated) {\n      this._private__updateRendererDataStage();\n      this._private__stageInvalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    this._private__renderer._internal_setData(null);\n    const timeScale = this._private__series._internal_model()._internal_timeScale();\n    const visibleRange = timeScale._internal_visibleStrictRange();\n    const firstValue = this._private__series._internal_firstValue();\n    if (visibleRange === null || firstValue === null) {\n      return;\n    }\n    const lastValue = this._private__series._internal_lastValueData(true);\n    if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n      return;\n    }\n    const lastValuePoint = {\n      x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n      y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value)\n    };\n    const seriesLineColor = lastValue._internal_color;\n    const seriesLineWidth = this._private__series._internal_options().lineWidth;\n    const data = animationData(this._private__duration(), seriesLineColor);\n    this._private__renderer._internal_setData({\n      _internal_seriesLineColor: seriesLineColor,\n      _internal_seriesLineWidth: seriesLineWidth,\n      _internal_fillColor: data._internal_fillColor,\n      _internal_strokeColor: data._internal_strokeColor,\n      _internal_radius: data._internal_radius,\n      _internal_center: lastValuePoint\n    });\n  }\n  _private__updateRendererDataStage() {\n    const rendererData = this._private__renderer._internal_data();\n    if (rendererData !== null) {\n      const data = animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n      rendererData._internal_fillColor = data._internal_fillColor;\n      rendererData._internal_strokeColor = data._internal_strokeColor;\n      rendererData._internal_radius = data._internal_radius;\n    }\n  }\n  _private__duration() {\n    return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n  }\n}\nfunction size(barSpacing, coeff) {\n  const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n  return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n  switch (shape) {\n    case 'arrowDown':\n    case 'arrowUp':\n      return size(originalSize, 1);\n    case 'circle':\n      return size(originalSize, 0.8);\n    case 'square':\n      return size(originalSize, 0.7);\n  }\n}\nfunction calculateShapeHeight(barSpacing) {\n  return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n  return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\nfunction drawSquare(ctx, centerX, centerY, size) {\n  const squareSize = shapeSize('square', size);\n  const halfSize = (squareSize - 1) / 2;\n  const left = centerX - halfSize;\n  const top = centerY - halfSize;\n  ctx.fillRect(left, top, squareSize, squareSize);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n  const squareSize = shapeSize('square', size);\n  const halfSize = (squareSize - 1) / 2;\n  const left = centerX - halfSize;\n  const top = centerY - halfSize;\n  return x >= left && x <= left + squareSize && y >= top && y <= top + squareSize;\n}\nfunction drawArrow(up, ctx, centerX, centerY, size) {\n  const arrowSize = shapeSize('arrowUp', size);\n  const halfArrowSize = (arrowSize - 1) / 2;\n  const baseSize = ceiledOdd(size / 2);\n  const halfBaseSize = (baseSize - 1) / 2;\n  ctx.beginPath();\n  if (up) {\n    ctx.moveTo(centerX - halfArrowSize, centerY);\n    ctx.lineTo(centerX, centerY - halfArrowSize);\n    ctx.lineTo(centerX + halfArrowSize, centerY);\n    ctx.lineTo(centerX + halfBaseSize, centerY);\n    ctx.lineTo(centerX + halfBaseSize, centerY + halfArrowSize);\n    ctx.lineTo(centerX - halfBaseSize, centerY + halfArrowSize);\n    ctx.lineTo(centerX - halfBaseSize, centerY);\n  } else {\n    ctx.moveTo(centerX - halfArrowSize, centerY);\n    ctx.lineTo(centerX, centerY + halfArrowSize);\n    ctx.lineTo(centerX + halfArrowSize, centerY);\n    ctx.lineTo(centerX + halfBaseSize, centerY);\n    ctx.lineTo(centerX + halfBaseSize, centerY - halfArrowSize);\n    ctx.lineTo(centerX - halfBaseSize, centerY - halfArrowSize);\n    ctx.lineTo(centerX - halfBaseSize, centerY);\n  }\n  ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n  // TODO: implement arrow hit test\n  return hitTestSquare(centerX, centerY, size, x, y);\n}\nfunction drawCircle(ctx, centerX, centerY, size) {\n  const circleSize = shapeSize('circle', size);\n  const halfSize = (circleSize - 1) / 2;\n  ctx.beginPath();\n  ctx.arc(centerX, centerY, halfSize, 0, 2 * Math.PI, false);\n  ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n  const circleSize = shapeSize('circle', size);\n  const tolerance = 2 + circleSize / 2;\n  const xOffset = centerX - x;\n  const yOffset = centerY - y;\n  const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n  return dist <= tolerance;\n}\nfunction drawText(ctx, text, x, y) {\n  ctx.fillText(text, x, y);\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n  const halfHeight = textHeight / 2;\n  return x >= textX && x <= textX + textWidth && y >= textY - halfHeight && y <= textY + halfHeight;\n}\nclass SeriesMarkersRenderer extends MediaCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__textWidthCache = new TextWidthCache();\n    this._private__fontSize = -1;\n    this._private__fontFamily = '';\n    this._private__font = '';\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_setParams(fontSize, fontFamily) {\n    if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n      this._private__fontSize = fontSize;\n      this._private__fontFamily = fontFamily;\n      this._private__font = makeFont(fontSize, fontFamily);\n      this._private__textWidthCache._internal_reset();\n    }\n  }\n  _internal_hitTest(x, y) {\n    if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n      return null;\n    }\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      if (hitTestItem(item, x, y)) {\n        return {\n          _internal_hitTestData: item._internal_internalId,\n          _internal_externalId: item._internal_externalId\n        };\n      }\n    }\n    return null;\n  }\n  _internal__drawImpl({\n    context: ctx\n  }, isHovered, hitTestData) {\n    if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    ctx.textBaseline = 'middle';\n    ctx.font = this._private__font;\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      if (item._internal_text !== undefined) {\n        item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n        item._internal_text._internal_height = this._private__fontSize;\n        item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n      }\n      drawItem(item, ctx);\n    }\n  }\n}\nfunction drawItem(item, ctx) {\n  ctx.fillStyle = item._internal_color;\n  if (item._internal_text !== undefined) {\n    drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y);\n  }\n  drawShape(item, ctx);\n}\nfunction drawShape(item, ctx) {\n  if (item._internal_size === 0) {\n    return;\n  }\n  switch (item._internal_shape) {\n    case 'arrowDown':\n      drawArrow(false, ctx, item._internal_x, item._internal_y, item._internal_size);\n      return;\n    case 'arrowUp':\n      drawArrow(true, ctx, item._internal_x, item._internal_y, item._internal_size);\n      return;\n    case 'circle':\n      drawCircle(ctx, item._internal_x, item._internal_y, item._internal_size);\n      return;\n    case 'square':\n      drawSquare(ctx, item._internal_x, item._internal_y, item._internal_size);\n      return;\n  }\n  ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n  if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n    return true;\n  }\n  return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n  if (item._internal_size === 0) {\n    return false;\n  }\n  switch (item._internal_shape) {\n    case 'arrowDown':\n      return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'arrowUp':\n      return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'circle':\n      return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'square':\n      return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, priceScale, timeScale, firstValue) {\n  const inBarPrice = isNumber(seriesData) ? seriesData : seriesData._internal_close;\n  const highPrice = isNumber(seriesData) ? seriesData : seriesData._internal_high;\n  const lowPrice = isNumber(seriesData) ? seriesData : seriesData._internal_low;\n  const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n  const shapeSize = calculateShapeHeight(timeScale._internal_barSpacing()) * sizeMultiplier;\n  const halfSize = shapeSize / 2;\n  rendererItem._internal_size = shapeSize;\n  switch (marker.position) {\n    case 'inBar':\n      {\n        rendererItem._internal_y = priceScale._internal_priceToCoordinate(inBarPrice, firstValue);\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n        }\n        return;\n      }\n    case 'aboveBar':\n      {\n        rendererItem._internal_y = priceScale._internal_priceToCoordinate(highPrice, firstValue) - halfSize - offsets._internal_aboveBar;\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n          offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n        }\n        offsets._internal_aboveBar += shapeSize + shapeMargin;\n        return;\n      }\n    case 'belowBar':\n      {\n        rendererItem._internal_y = priceScale._internal_priceToCoordinate(lowPrice, firstValue) + halfSize + offsets._internal_belowBar;\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n          offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n        }\n        offsets._internal_belowBar += shapeSize + shapeMargin;\n        return;\n      }\n  }\n  ensureNever(marker.position);\n}\nclass SeriesMarkersPaneView {\n  constructor(series, model) {\n    this._private__invalidated = true;\n    this._private__dataInvalidated = true;\n    this._private__autoScaleMarginsInvalidated = true;\n    this._private__autoScaleMargins = null;\n    this._private__renderer = new SeriesMarkersRenderer();\n    this._private__series = series;\n    this._private__model = model;\n    this._private__data = {\n      _internal_items: [],\n      _internal_visibleRange: null\n    };\n  }\n  _internal_update(updateType) {\n    this._private__invalidated = true;\n    this._private__autoScaleMarginsInvalidated = true;\n    if (updateType === 'data') {\n      this._private__dataInvalidated = true;\n    }\n  }\n  _internal_renderer(addAnchors) {\n    if (!this._private__series._internal_visible()) {\n      return null;\n    }\n    if (this._private__invalidated) {\n      this._internal__makeValid();\n    }\n    const layout = this._private__model._internal_options().layout;\n    this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily);\n    this._private__renderer._internal_setData(this._private__data);\n    return this._private__renderer;\n  }\n  _internal_autoScaleMargins() {\n    if (this._private__autoScaleMarginsInvalidated) {\n      if (this._private__series._internal_indexedMarkers().length > 0) {\n        const barSpacing = this._private__model._internal_timeScale()._internal_barSpacing();\n        const shapeMargin$1 = shapeMargin(barSpacing);\n        const marginsAboveAndBelow = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n        this._private__autoScaleMargins = {\n          above: marginsAboveAndBelow,\n          below: marginsAboveAndBelow\n        };\n      } else {\n        this._private__autoScaleMargins = null;\n      }\n      this._private__autoScaleMarginsInvalidated = false;\n    }\n    return this._private__autoScaleMargins;\n  }\n  _internal__makeValid() {\n    const priceScale = this._private__series._internal_priceScale();\n    const timeScale = this._private__model._internal_timeScale();\n    const seriesMarkers = this._private__series._internal_indexedMarkers();\n    if (this._private__dataInvalidated) {\n      this._private__data._internal_items = seriesMarkers.map(marker => ({\n        _internal_time: marker.time,\n        _internal_x: 0,\n        _internal_y: 0,\n        _internal_size: 0,\n        _internal_shape: marker.shape,\n        _internal_color: marker.color,\n        _internal_internalId: marker._internal_internalId,\n        _internal_externalId: marker.id,\n        _internal_text: undefined\n      }));\n      this._private__dataInvalidated = false;\n    }\n    const layoutOptions = this._private__model._internal_options().layout;\n    this._private__data._internal_visibleRange = null;\n    const visibleBars = timeScale._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return;\n    }\n    const firstValue = this._private__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    if (this._private__data._internal_items.length === 0) {\n      return;\n    }\n    let prevTimeIndex = NaN;\n    const shapeMargin$1 = shapeMargin(timeScale._internal_barSpacing());\n    const offsets = {\n      _internal_aboveBar: shapeMargin$1,\n      _internal_belowBar: shapeMargin$1\n    };\n    this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBars, true);\n    for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n      const marker = seriesMarkers[index];\n      if (marker.time !== prevTimeIndex) {\n        // new bar, reset stack counter\n        offsets._internal_aboveBar = shapeMargin$1;\n        offsets._internal_belowBar = shapeMargin$1;\n        prevTimeIndex = marker.time;\n      }\n      const rendererItem = this._private__data._internal_items[index];\n      rendererItem._internal_x = timeScale._internal_indexToCoordinate(marker.time);\n      if (marker.text !== undefined && marker.text.length > 0) {\n        rendererItem._internal_text = {\n          _internal_content: marker.text,\n          _internal_x: 0,\n          _internal_y: 0,\n          _internal_width: 0,\n          _internal_height: 0\n        };\n      }\n      const dataAt = this._private__series._internal_dataAt(marker.time);\n      if (dataAt === null) {\n        continue;\n      }\n      fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, priceScale, timeScale, firstValue._internal_value);\n    }\n    this._private__invalidated = false;\n  }\n}\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(series) {\n    super(series);\n  }\n  _internal__updateImpl() {\n    const data = this._internal__lineRendererData;\n    data._internal_visible = false;\n    const seriesOptions = this._internal__series._internal_options();\n    if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n      return;\n    }\n    const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n    if (lastValueData._internal_noData) {\n      return;\n    }\n    data._internal_visible = true;\n    data._internal_y = lastValueData._internal_coordinate;\n    data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n    data._internal_lineWidth = seriesOptions.priceLineWidth;\n    data._internal_lineStyle = seriesOptions.priceLineStyle;\n  }\n}\nclass SeriesPriceAxisView extends PriceAxisView {\n  constructor(source) {\n    super();\n    this._private__source = source;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    axisRendererData._internal_visible = false;\n    paneRendererData._internal_visible = false;\n    const source = this._private__source;\n    if (!source._internal_visible()) {\n      return;\n    }\n    const seriesOptions = source._internal_options();\n    const showSeriesLastValue = seriesOptions.lastValueVisible;\n    const showSymbolLabel = source._internal_title() !== '';\n    const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n    const lastValueData = source._internal_lastValueData(false);\n    if (lastValueData._internal_noData) {\n      return;\n    }\n    if (showSeriesLastValue) {\n      axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n      axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n    }\n    if (showSymbolLabel || showPriceAndPercentage) {\n      paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n      paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n    }\n    const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n    const colors = generateContrastColors(lastValueColor);\n    commonRendererData._internal_background = colors._internal_background;\n    commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n    paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n    axisRendererData._internal_borderColor = lastValueColor;\n    axisRendererData._internal_color = colors._internal_foreground;\n    paneRendererData._internal_color = colors._internal_foreground;\n  }\n  _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n    let result = '';\n    const title = this._private__source._internal_title();\n    if (showSymbolLabel && title.length !== 0) {\n      result += `${title} `;\n    }\n    if (showSeriesLastValue && showPriceAndPercentage) {\n      result += this._private__source._internal_priceScale()._internal_isPercentage() ? lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n    }\n    return result.trim();\n  }\n  _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n    if (!showSeriesLastValue) {\n      return '';\n    }\n    if (!showPriceAndPercentage) {\n      return lastValueData._internal_text;\n    }\n    return this._private__source._internal_priceScale()._internal_isPercentage() ? lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n  }\n}\nfunction computeFiniteResult(method, valueOne, valueTwo, fallback) {\n  const firstFinite = Number.isFinite(valueOne);\n  const secondFinite = Number.isFinite(valueTwo);\n  if (firstFinite && secondFinite) {\n    return method(valueOne, valueTwo);\n  }\n  return !firstFinite && !secondFinite ? fallback : firstFinite ? valueOne : valueTwo;\n}\nclass PriceRangeImpl {\n  constructor(minValue, maxValue) {\n    this._private__minValue = minValue;\n    this._private__maxValue = maxValue;\n  }\n  _internal_equals(pr) {\n    if (pr === null) {\n      return false;\n    }\n    return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n  }\n  _internal_clone() {\n    return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n  }\n  _internal_minValue() {\n    return this._private__minValue;\n  }\n  _internal_maxValue() {\n    return this._private__maxValue;\n  }\n  _internal_length() {\n    return this._private__maxValue - this._private__minValue;\n  }\n  _internal_isEmpty() {\n    return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n  }\n  _internal_merge(anotherRange) {\n    if (anotherRange === null) {\n      return this;\n    }\n    return new PriceRangeImpl(computeFiniteResult(Math.min, this._internal_minValue(), anotherRange._internal_minValue(), -Infinity), computeFiniteResult(Math.max, this._internal_maxValue(), anotherRange._internal_maxValue(), Infinity));\n  }\n  _internal_scaleAroundCenter(coeff) {\n    if (!isNumber(coeff)) {\n      return;\n    }\n    const delta = this._private__maxValue - this._private__minValue;\n    if (delta === 0) {\n      return;\n    }\n    const center = (this._private__maxValue + this._private__minValue) * 0.5;\n    let maxDelta = this._private__maxValue - center;\n    let minDelta = this._private__minValue - center;\n    maxDelta *= coeff;\n    minDelta *= coeff;\n    this._private__maxValue = center + maxDelta;\n    this._private__minValue = center + minDelta;\n  }\n  _internal_shift(delta) {\n    if (!isNumber(delta)) {\n      return;\n    }\n    this._private__maxValue += delta;\n    this._private__minValue += delta;\n  }\n  _internal_toRaw() {\n    return {\n      minValue: this._private__minValue,\n      maxValue: this._private__maxValue\n    };\n  }\n  static _internal_fromRaw(raw) {\n    return raw === null ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n  }\n}\nclass AutoscaleInfoImpl {\n  constructor(priceRange, margins) {\n    this._private__priceRange = priceRange;\n    this._private__margins = margins || null;\n  }\n  _internal_priceRange() {\n    return this._private__priceRange;\n  }\n  _internal_margins() {\n    return this._private__margins;\n  }\n  _internal_toRaw() {\n    if (this._private__priceRange === null) {\n      return null;\n    }\n    return {\n      priceRange: this._private__priceRange._internal_toRaw(),\n      margins: this._private__margins || undefined\n    };\n  }\n  static _internal_fromRaw(raw) {\n    return raw === null ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n  }\n}\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n  constructor(series, priceLine) {\n    super(series);\n    this._private__priceLine = priceLine;\n  }\n  _internal__updateImpl() {\n    const data = this._internal__lineRendererData;\n    data._internal_visible = false;\n    const lineOptions = this._private__priceLine._internal_options();\n    if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n      return;\n    }\n    const y = this._private__priceLine._internal_yCoord();\n    if (y === null) {\n      return;\n    }\n    data._internal_visible = true;\n    data._internal_y = y;\n    data._internal_color = lineOptions.color;\n    data._internal_lineWidth = lineOptions.lineWidth;\n    data._internal_lineStyle = lineOptions.lineStyle;\n    data._internal_externalId = this._private__priceLine._internal_options().id;\n  }\n}\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n  constructor(series, priceLine) {\n    super();\n    this._private__series = series;\n    this._private__priceLine = priceLine;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n    axisRendererData._internal_visible = false;\n    paneRendererData._internal_visible = false;\n    const options = this._private__priceLine._internal_options();\n    const labelVisible = options.axisLabelVisible;\n    const showPaneLabel = options.title !== '';\n    const series = this._private__series;\n    if (!labelVisible || !series._internal_visible()) {\n      return;\n    }\n    const y = this._private__priceLine._internal_yCoord();\n    if (y === null) {\n      return;\n    }\n    if (showPaneLabel) {\n      paneRendererData._internal_text = options.title;\n      paneRendererData._internal_visible = true;\n    }\n    paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n    axisRendererData._internal_text = this._private__formatPrice(options.price);\n    axisRendererData._internal_visible = true;\n    const colors = generateContrastColors(options.axisLabelColor || options.color);\n    commonData._internal_background = colors._internal_background;\n    const textColor = options.axisLabelTextColor || colors._internal_foreground;\n    axisRendererData._internal_color = textColor; // price text\n    paneRendererData._internal_color = textColor; // title text\n    commonData._internal_coordinate = y;\n  }\n  _private__formatPrice(price) {\n    const firstValue = this._private__series._internal_firstValue();\n    if (firstValue === null) {\n      return '';\n    }\n    return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n  }\n}\nclass CustomPriceLine {\n  constructor(series, options) {\n    this._private__series = series;\n    this._private__options = options;\n    this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n    this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n    this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._internal_update();\n    this._private__series._internal_model()._internal_lightUpdate();\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_paneView() {\n    return this._private__priceLineView;\n  }\n  _internal_labelPaneView() {\n    return this._private__panePriceAxisView;\n  }\n  _internal_priceAxisView() {\n    return this._private__priceAxisView;\n  }\n  _internal_update() {\n    this._private__priceLineView._internal_update();\n    this._private__priceAxisView._internal_update();\n  }\n  _internal_yCoord() {\n    const series = this._private__series;\n    const priceScale = series._internal_priceScale();\n    const timeScale = series._internal_model()._internal_timeScale();\n    if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n      return null;\n    }\n    const firstValue = series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n  }\n}\nclass PriceDataSource extends DataSource {\n  constructor(model) {\n    super();\n    this._private__model = model;\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n}\nconst barStyleFnMap = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n    var _a;\n    const upColor = barStyle.upColor;\n    const downColor = barStyle.downColor;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : isUp ? upColor : downColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n    var _a, _b, _c;\n    const upColor = candlestickStyle.upColor;\n    const downColor = candlestickStyle.downColor;\n    const borderUpColor = candlestickStyle.borderUpColor;\n    const borderDownColor = candlestickStyle.borderDownColor;\n    const wickUpColor = candlestickStyle.wickUpColor;\n    const wickDownColor = candlestickStyle.wickDownColor;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : isUp ? upColor : downColor,\n      _internal_barBorderColor: (_b = currentBar._internal_borderColor) !== null && _b !== void 0 ? _b : isUp ? borderUpColor : borderDownColor,\n      _internal_barWickColor: (_c = currentBar._internal_wickColor) !== null && _c !== void 0 ? _c : isUp ? wickUpColor : wickDownColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Custom: (findBar, customStyle, barIndex, precomputedBars) => {\n    var _a;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : customStyle.color\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n    var _a, _b, _c, _d;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_lineColor) !== null && _a !== void 0 ? _a : areaStyle.lineColor,\n      _internal_lineColor: (_b = currentBar._internal_lineColor) !== null && _b !== void 0 ? _b : areaStyle.lineColor,\n      _internal_topColor: (_c = currentBar._internal_topColor) !== null && _c !== void 0 ? _c : areaStyle.topColor,\n      _internal_bottomColor: (_d = currentBar._internal_bottomColor) !== null && _d !== void 0 ? _d : areaStyle.bottomColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n    var _a, _b, _c, _d, _e, _f;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n    return {\n      _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n      _internal_topLineColor: (_a = currentBar._internal_topLineColor) !== null && _a !== void 0 ? _a : baselineStyle.topLineColor,\n      _internal_bottomLineColor: (_b = currentBar._internal_bottomLineColor) !== null && _b !== void 0 ? _b : baselineStyle.bottomLineColor,\n      _internal_topFillColor1: (_c = currentBar._internal_topFillColor1) !== null && _c !== void 0 ? _c : baselineStyle.topFillColor1,\n      _internal_topFillColor2: (_d = currentBar._internal_topFillColor2) !== null && _d !== void 0 ? _d : baselineStyle.topFillColor2,\n      _internal_bottomFillColor1: (_e = currentBar._internal_bottomFillColor1) !== null && _e !== void 0 ? _e : baselineStyle.bottomFillColor1,\n      _internal_bottomFillColor2: (_f = currentBar._internal_bottomFillColor2) !== null && _f !== void 0 ? _f : baselineStyle.bottomFillColor2\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n    var _a, _b;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : lineStyle.color,\n      _internal_lineColor: (_b = currentBar._internal_color) !== null && _b !== void 0 ? _b : lineStyle.color\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n    var _a;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : histogramStyle.color\n    };\n  }\n};\nclass SeriesBarColorer {\n  constructor(series) {\n    this._private__findBar = (barIndex, precomputedBars) => {\n      if (precomputedBars !== undefined) {\n        return precomputedBars._internal_value;\n      }\n      return this._private__series._internal_bars()._internal_valueAt(barIndex);\n    };\n    this._private__series = series;\n    this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n  }\n  _internal_barStyle(barIndex, precomputedBars) {\n    // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n    // Used to avoid binary search if bars are already known\n    return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n  }\n}\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n  /**\n   * Search the nearest left item\n   */\n  MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n  /**\n   * Do not search\n   */\n  MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n  /**\n   * Search the nearest right item\n   */\n  MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n  constructor() {\n    this._private__items = [];\n    this._private__minMaxCache = new Map();\n    this._private__rowSearchCache = new Map();\n  }\n  // @returns Last row\n  _internal_last() {\n    return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n  }\n  _internal_firstIndex() {\n    return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n  }\n  _internal_lastIndex() {\n    return this._internal_size() > 0 ? this._private__indexAt(this._private__items.length - 1) : null;\n  }\n  _internal_size() {\n    return this._private__items.length;\n  }\n  _internal_isEmpty() {\n    return this._internal_size() === 0;\n  }\n  _internal_contains(index) {\n    return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n  }\n  _internal_valueAt(index) {\n    return this._internal_search(index);\n  }\n  _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n    const pos = this._private__search(index, searchMode);\n    if (pos === null) {\n      return null;\n    }\n    return Object.assign(Object.assign({}, this._private__valueAt(pos)), {\n      _internal_index: this._private__indexAt(pos)\n    });\n  }\n  _internal_rows() {\n    return this._private__items;\n  }\n  _internal_minMaxOnRangeCached(start, end, plots) {\n    // this code works for single series only\n    // could fail after whitespaces implementation\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    let result = null;\n    for (const plot of plots) {\n      const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    return result;\n  }\n  _internal_setData(plotRows) {\n    this._private__rowSearchCache.clear();\n    this._private__minMaxCache.clear();\n    this._private__items = plotRows;\n  }\n  _private__indexAt(offset) {\n    return this._private__items[offset]._internal_index;\n  }\n  _private__valueAt(offset) {\n    return this._private__items[offset];\n  }\n  _private__search(index, searchMode) {\n    const exactPos = this._private__bsearch(index);\n    if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n      switch (searchMode) {\n        case -1 /* MismatchDirection.NearestLeft */:\n          return this._private__searchNearestLeft(index);\n        case 1 /* MismatchDirection.NearestRight */:\n          return this._private__searchNearestRight(index);\n        default:\n          throw new TypeError('Unknown search mode');\n      }\n    }\n    return exactPos;\n  }\n  _private__searchNearestLeft(index) {\n    let nearestLeftPos = this._private__lowerbound(index);\n    if (nearestLeftPos > 0) {\n      nearestLeftPos = nearestLeftPos - 1;\n    }\n    return nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index ? nearestLeftPos : null;\n  }\n  _private__searchNearestRight(index) {\n    const nearestRightPos = this._private__upperbound(index);\n    return nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos) ? nearestRightPos : null;\n  }\n  _private__bsearch(index) {\n    const start = this._private__lowerbound(index);\n    if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n      return start;\n    }\n    return null;\n  }\n  _private__lowerbound(index) {\n    return lowerBound(this._private__items, index, (a, b) => a._internal_index < b);\n  }\n  _private__upperbound(index) {\n    return upperBound(this._private__items, index, (a, b) => a._internal_index > b);\n  }\n  _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n    let result = null;\n    for (let i = startIndex; i < endIndexExclusive; i++) {\n      const values = this._private__items[i]._internal_value;\n      const v = values[plotIndex];\n      if (Number.isNaN(v)) {\n        continue;\n      }\n      if (result === null) {\n        result = {\n          _internal_min: v,\n          _internal_max: v\n        };\n      } else {\n        if (v < result._internal_min) {\n          result._internal_min = v;\n        }\n        if (v > result._internal_max) {\n          result._internal_max = v;\n        }\n      }\n    }\n    return result;\n  }\n  _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n    // this code works for single series only\n    // could fail after whitespaces implementation\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    let result = null;\n    // assume that bar indexes only increase\n    const firstIndex = ensureNotNull(this._internal_firstIndex());\n    const lastIndex = ensureNotNull(this._internal_lastIndex());\n    const s = Math.max(start, firstIndex);\n    const e = Math.min(end, lastIndex);\n    const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n    const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n    {\n      const startIndex = this._private__lowerbound(s);\n      const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n      const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    let minMaxCache = this._private__minMaxCache.get(plotIndex);\n    if (minMaxCache === undefined) {\n      minMaxCache = new Map();\n      this._private__minMaxCache.set(plotIndex, minMaxCache);\n    }\n    // now go cached\n    for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n      const chunkIndex = Math.floor(c / CHUNK_SIZE);\n      let chunkMinMax = minMaxCache.get(chunkIndex);\n      if (chunkMinMax === undefined) {\n        const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n        const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n        chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n        minMaxCache.set(chunkIndex, chunkMinMax);\n      }\n      result = mergeMinMax(result, chunkMinMax);\n    }\n    // tail\n    {\n      const startIndex = this._private__lowerbound(cachedHigh);\n      const endIndex = this._private__upperbound(e); // non-inclusive end\n      const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    return result;\n  }\n}\nfunction mergeMinMax(first, second) {\n  if (first === null) {\n    return second;\n  } else {\n    if (second === null) {\n      return first;\n    } else {\n      // merge MinMax values\n      const min = Math.min(first._internal_min, second._internal_min);\n      const max = Math.max(first._internal_max, second._internal_max);\n      return {\n        _internal_min: min,\n        _internal_max: max\n      };\n    }\n  }\n}\nfunction createSeriesPlotList() {\n  return new PlotList();\n}\nclass SeriesPrimitiveRendererWrapper {\n  constructor(baseRenderer) {\n    this._private__baseRenderer = baseRenderer;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__baseRenderer.draw(target);\n  }\n  _internal_drawBackground(target, isHovered, hitTestData) {\n    var _a, _b;\n    (_b = (_a = this._private__baseRenderer).drawBackground) === null || _b === void 0 ? void 0 : _b.call(_a, target);\n  }\n}\nclass SeriesPrimitivePaneViewWrapper {\n  constructor(paneView) {\n    this._private__cache = null;\n    this._private__paneView = paneView;\n  }\n  _internal_renderer() {\n    var _a;\n    const baseRenderer = this._private__paneView.renderer();\n    if (baseRenderer === null) {\n      return null;\n    }\n    if (((_a = this._private__cache) === null || _a === void 0 ? void 0 : _a._internal_base) === baseRenderer) {\n      return this._private__cache._internal_wrapper;\n    }\n    const wrapper = new SeriesPrimitiveRendererWrapper(baseRenderer);\n    this._private__cache = {\n      _internal_base: baseRenderer,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_zOrder() {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = this._private__paneView).zOrder) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : 'normal';\n  }\n}\nfunction getAxisViewData(baseView) {\n  var _a, _b, _c, _d, _e;\n  return {\n    _internal_text: baseView.text(),\n    _internal_coordinate: baseView.coordinate(),\n    _internal_fixedCoordinate: (_a = baseView.fixedCoordinate) === null || _a === void 0 ? void 0 : _a.call(baseView),\n    _internal_color: baseView.textColor(),\n    _internal_background: baseView.backColor(),\n    _internal_visible: (_c = (_b = baseView.visible) === null || _b === void 0 ? void 0 : _b.call(baseView)) !== null && _c !== void 0 ? _c : true,\n    _internal_tickVisible: (_e = (_d = baseView.tickVisible) === null || _d === void 0 ? void 0 : _d.call(baseView)) !== null && _e !== void 0 ? _e : true\n  };\n}\nclass SeriesPrimitiveTimeAxisViewWrapper {\n  constructor(baseView, timeScale) {\n    this._private__renderer = new TimeAxisViewRenderer();\n    this._private__baseView = baseView;\n    this._private__timeScale = timeScale;\n  }\n  _internal_renderer() {\n    this._private__renderer._internal_setData(Object.assign({\n      _internal_width: this._private__timeScale._internal_width()\n    }, getAxisViewData(this._private__baseView)));\n    return this._private__renderer;\n  }\n}\nclass SeriesPrimitivePriceAxisViewWrapper extends PriceAxisView {\n  constructor(baseView, priceScale) {\n    super();\n    this._private__baseView = baseView;\n    this._private__priceScale = priceScale;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    const data = getAxisViewData(this._private__baseView);\n    commonRendererData._internal_background = data._internal_background;\n    axisRendererData._internal_color = data._internal_color;\n    const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n    commonRendererData._internal_additionalPaddingTop = additionalPadding;\n    commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n    commonRendererData._internal_coordinate = data._internal_coordinate;\n    commonRendererData._internal_fixedCoordinate = data._internal_fixedCoordinate;\n    axisRendererData._internal_text = data._internal_text;\n    axisRendererData._internal_visible = data._internal_visible;\n    axisRendererData._internal_tickVisible = data._internal_tickVisible;\n  }\n}\nclass SeriesPrimitiveWrapper {\n  constructor(primitive, series) {\n    this._private__paneViewsCache = null;\n    this._private__timeAxisViewsCache = null;\n    this._private__priceAxisViewsCache = null;\n    this._private__priceAxisPaneViewsCache = null;\n    this._private__timeAxisPaneViewsCache = null;\n    this._private__primitive = primitive;\n    this._private__series = series;\n  }\n  _internal_primitive() {\n    return this._private__primitive;\n  }\n  _internal_updateAllViews() {\n    var _a, _b;\n    (_b = (_a = this._private__primitive).updateAllViews) === null || _b === void 0 ? void 0 : _b.call(_a);\n  }\n  _internal_paneViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).paneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__paneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__paneViewsCache._internal_wrapper;\n    }\n    const wrapper = base.map(pw => new SeriesPrimitivePaneViewWrapper(pw));\n    this._private__paneViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_timeAxisViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).timeAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__timeAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__timeAxisViewsCache._internal_wrapper;\n    }\n    const timeScale = this._private__series._internal_model()._internal_timeScale();\n    const wrapper = base.map(aw => new SeriesPrimitiveTimeAxisViewWrapper(aw, timeScale));\n    this._private__timeAxisViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_priceAxisViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).priceAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__priceAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__priceAxisViewsCache._internal_wrapper;\n    }\n    const priceScale = this._private__series._internal_priceScale();\n    const wrapper = base.map(aw => new SeriesPrimitivePriceAxisViewWrapper(aw, priceScale));\n    this._private__priceAxisViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_priceAxisPaneViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).priceAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__priceAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__priceAxisPaneViewsCache._internal_wrapper;\n    }\n    const wrapper = base.map(pw => new SeriesPrimitivePaneViewWrapper(pw));\n    this._private__priceAxisPaneViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_timeAxisPaneViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).timeAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__timeAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__timeAxisPaneViewsCache._internal_wrapper;\n    }\n    const wrapper = base.map(pw => new SeriesPrimitivePaneViewWrapper(pw));\n    this._private__timeAxisPaneViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = this._private__primitive).autoscaleInfo) === null || _b === void 0 ? void 0 : _b.call(_a, startTimePoint, endTimePoint)) !== null && _c !== void 0 ? _c : null;\n  }\n  _internal_hitTest(x, y) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = this._private__primitive).hitTest) === null || _b === void 0 ? void 0 : _b.call(_a, x, y)) !== null && _c !== void 0 ? _c : null;\n  }\n}\nfunction extractPrimitivePaneViews(primitives, extractor, zOrder, destination) {\n  primitives.forEach(wrapper => {\n    extractor(wrapper).forEach(paneView => {\n      if (paneView._internal_zOrder() !== zOrder) {\n        return;\n      }\n      destination.push(paneView);\n    });\n  });\n}\nfunction primitivePaneViewsExtractor(wrapper) {\n  return wrapper._internal_paneViews();\n}\nfunction primitivePricePaneViewsExtractor(wrapper) {\n  return wrapper._internal_priceAxisPaneViews();\n}\nfunction primitiveTimePaneViewsExtractor(wrapper) {\n  return wrapper._internal_timeAxisPaneViews();\n}\nclass Series extends PriceDataSource {\n  constructor(model, options, seriesType, pane, customPaneView) {\n    super(model);\n    this._private__data = createSeriesPlotList();\n    this._private__priceLineView = new SeriesPriceLinePaneView(this);\n    this._private__customPriceLines = [];\n    this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n    this._private__lastPriceAnimationPaneView = null;\n    this._private__barColorerCache = null;\n    this._private__markers = [];\n    this._private__indexedMarkers = [];\n    this._private__animationTimeoutId = null;\n    this._private__primitives = [];\n    this._private__options = options;\n    this._private__seriesType = seriesType;\n    const priceAxisView = new SeriesPriceAxisView(this);\n    this._private__priceAxisViews = [priceAxisView];\n    this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n    if (seriesType === 'Area' || seriesType === 'Line' || seriesType === 'Baseline') {\n      this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n    }\n    this._private__recreateFormatter();\n    this._private__recreatePaneViews(customPaneView);\n  }\n  _internal_destroy() {\n    if (this._private__animationTimeoutId !== null) {\n      clearTimeout(this._private__animationTimeoutId);\n    }\n  }\n  _internal_priceLineColor(lastBarColor) {\n    return this._private__options.priceLineColor || lastBarColor;\n  }\n  _internal_lastValueData(globalLast) {\n    const noDataRes = {\n      _internal_noData: true\n    };\n    const priceScale = this._internal_priceScale();\n    if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n      return noDataRes;\n    }\n    const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n    const firstValue = this._internal_firstValue();\n    if (visibleBars === null || firstValue === null) {\n      return noDataRes;\n    }\n    // find range of bars inside range\n    // TODO: make it more optimal\n    let bar;\n    let lastIndex;\n    if (globalLast) {\n      const lastBar = this._private__data._internal_last();\n      if (lastBar === null) {\n        return noDataRes;\n      }\n      bar = lastBar;\n      lastIndex = lastBar._internal_index;\n    } else {\n      const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n      if (endBar === null) {\n        return noDataRes;\n      }\n      bar = this._private__data._internal_valueAt(endBar._internal_index);\n      if (bar === null) {\n        return noDataRes;\n      }\n      lastIndex = endBar._internal_index;\n    }\n    const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n    const barColorer = this._internal_barColorer();\n    const style = barColorer._internal_barStyle(lastIndex, {\n      _internal_value: bar\n    });\n    const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n    return {\n      _internal_noData: false,\n      _internal_price: price,\n      _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n      _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n      _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n      _internal_color: style._internal_barColor,\n      _internal_coordinate: coordinate,\n      _internal_index: lastIndex\n    };\n  }\n  _internal_barColorer() {\n    if (this._private__barColorerCache !== null) {\n      return this._private__barColorerCache;\n    }\n    this._private__barColorerCache = new SeriesBarColorer(this);\n    return this._private__barColorerCache;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    const targetPriceScaleId = options.priceScaleId;\n    if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n      // series cannot do it itself, ask model\n      this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n    }\n    merge(this._private__options, options);\n    if (options.priceFormat !== undefined) {\n      this._private__recreateFormatter();\n      // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n      // thus we need to force the chart to do a full update to apply changes correctly\n      // full update is quite heavy operation in terms of performance\n      // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n      this._internal_model()._internal_fullUpdate();\n    }\n    this._internal_model()._internal_updateSource(this);\n    // a series might affect crosshair by some options (like crosshair markers)\n    // that's why we need to update crosshair as well\n    this._internal_model()._internal_updateCrosshair();\n    this._private__paneView._internal_update('options');\n  }\n  _internal_setData(data, updateInfo) {\n    this._private__data._internal_setData(data);\n    this._private__recalculateMarkers();\n    this._private__paneView._internal_update('data');\n    this._private__markersPaneView._internal_update('data');\n    if (this._private__lastPriceAnimationPaneView !== null) {\n      if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n        this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n      } else if (data.length === 0) {\n        this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n      }\n    }\n    const sourcePane = this._internal_model()._internal_paneForSource(this);\n    this._internal_model()._internal_recalculatePane(sourcePane);\n    this._internal_model()._internal_updateSource(this);\n    this._internal_model()._internal_updateCrosshair();\n    this._internal_model()._internal_lightUpdate();\n  }\n  _internal_setMarkers(data) {\n    this._private__markers = data;\n    this._private__recalculateMarkers();\n    const sourcePane = this._internal_model()._internal_paneForSource(this);\n    this._private__markersPaneView._internal_update('data');\n    this._internal_model()._internal_recalculatePane(sourcePane);\n    this._internal_model()._internal_updateSource(this);\n    this._internal_model()._internal_updateCrosshair();\n    this._internal_model()._internal_lightUpdate();\n  }\n  _internal_markers() {\n    return this._private__markers;\n  }\n  _internal_indexedMarkers() {\n    return this._private__indexedMarkers;\n  }\n  _internal_createPriceLine(options) {\n    const result = new CustomPriceLine(this, options);\n    this._private__customPriceLines.push(result);\n    this._internal_model()._internal_updateSource(this);\n    return result;\n  }\n  _internal_removePriceLine(line) {\n    const index = this._private__customPriceLines.indexOf(line);\n    if (index !== -1) {\n      this._private__customPriceLines.splice(index, 1);\n    }\n    this._internal_model()._internal_updateSource(this);\n  }\n  _internal_seriesType() {\n    return this._private__seriesType;\n  }\n  _internal_firstValue() {\n    const bar = this._internal_firstBar();\n    if (bar === null) {\n      return null;\n    }\n    return {\n      _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n      _internal_timePoint: bar._internal_time\n    };\n  }\n  _internal_firstBar() {\n    const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return null;\n    }\n    const startTimePoint = visibleBars._internal_left();\n    return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n  }\n  _internal_bars() {\n    return this._private__data;\n  }\n  _internal_dataAt(time) {\n    const prices = this._private__data._internal_valueAt(time);\n    if (prices === null) {\n      return null;\n    }\n    if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick' || this._private__seriesType === 'Custom') {\n      return {\n        _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n        _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n        _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n        _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */]\n      };\n    } else {\n      return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n    }\n  }\n  _internal_topPaneViews(pane) {\n    const res = [];\n    extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'top', res);\n    const animationPaneView = this._private__lastPriceAnimationPaneView;\n    if (animationPaneView === null || !animationPaneView._internal_visible()) {\n      return res;\n    }\n    if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n      this._private__animationTimeoutId = setTimeout(() => {\n        this._private__animationTimeoutId = null;\n        this._internal_model()._internal_cursorUpdate();\n      }, 0);\n    }\n    animationPaneView._internal_invalidateStage();\n    res.push(animationPaneView);\n    return res;\n  }\n  _internal_paneViews() {\n    const res = [];\n    if (!this._private__isOverlay()) {\n      res.push(this._private__baseHorizontalLineView);\n    }\n    res.push(this._private__paneView, this._private__priceLineView, this._private__markersPaneView);\n    const priceLineViews = this._private__customPriceLines.map(line => line._internal_paneView());\n    res.push(...priceLineViews);\n    extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'normal', res);\n    return res;\n  }\n  _internal_bottomPaneViews() {\n    return this._private__extractPaneViews(primitivePaneViewsExtractor, 'bottom');\n  }\n  _internal_pricePaneViews(zOrder) {\n    return this._private__extractPaneViews(primitivePricePaneViewsExtractor, zOrder);\n  }\n  _internal_timePaneViews(zOrder) {\n    return this._private__extractPaneViews(primitiveTimePaneViewsExtractor, zOrder);\n  }\n  _internal_primitiveHitTest(x, y) {\n    return this._private__primitives.map(primitive => primitive._internal_hitTest(x, y)).filter(result => result !== null);\n  }\n  _internal_labelPaneViews(pane) {\n    return [this._private__panePriceAxisView, ...this._private__customPriceLines.map(line => line._internal_labelPaneView())];\n  }\n  _internal_priceAxisViews(pane, priceScale) {\n    if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n      return [];\n    }\n    const result = [...this._private__priceAxisViews];\n    for (const customPriceLine of this._private__customPriceLines) {\n      result.push(customPriceLine._internal_priceAxisView());\n    }\n    this._private__primitives.forEach(wrapper => {\n      result.push(...wrapper._internal_priceAxisViews());\n    });\n    return result;\n  }\n  _internal_timeAxisViews() {\n    const res = [];\n    this._private__primitives.forEach(wrapper => {\n      res.push(...wrapper._internal_timeAxisViews());\n    });\n    return res;\n  }\n  _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n    if (this._private__options.autoscaleInfoProvider !== undefined) {\n      const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n        const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n        return res === null ? null : res._internal_toRaw();\n      });\n      return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n    }\n    return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n  }\n  _internal_minMove() {\n    return this._private__options.priceFormat.minMove;\n  }\n  _internal_formatter() {\n    return this._private__formatter;\n  }\n  _internal_updateAllViews() {\n    var _a;\n    this._private__paneView._internal_update();\n    this._private__markersPaneView._internal_update();\n    for (const priceAxisView of this._private__priceAxisViews) {\n      priceAxisView._internal_update();\n    }\n    for (const customPriceLine of this._private__customPriceLines) {\n      customPriceLine._internal_update();\n    }\n    this._private__priceLineView._internal_update();\n    this._private__baseHorizontalLineView._internal_update();\n    (_a = this._private__lastPriceAnimationPaneView) === null || _a === void 0 ? void 0 : _a._internal_update();\n    this._private__primitives.forEach(wrapper => wrapper._internal_updateAllViews());\n  }\n  _internal_priceScale() {\n    return ensureNotNull(super._internal_priceScale());\n  }\n  _internal_markerDataAtIndex(index) {\n    const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') && this._private__options.crosshairMarkerVisible;\n    if (!getValue) {\n      return null;\n    }\n    const bar = this._private__data._internal_valueAt(index);\n    if (bar === null) {\n      return null;\n    }\n    const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n    const radius = this._private__markerRadius();\n    const borderColor = this._private__markerBorderColor();\n    const borderWidth = this._private__markerBorderWidth();\n    const backgroundColor = this._private__markerBackgroundColor(index);\n    return {\n      _internal_price: price,\n      _internal_radius: radius,\n      _internal_borderColor: borderColor,\n      _internal_borderWidth: borderWidth,\n      _internal_backgroundColor: backgroundColor\n    };\n  }\n  _internal_title() {\n    return this._private__options.title;\n  }\n  _internal_visible() {\n    return this._private__options.visible;\n  }\n  _internal_attachPrimitive(primitive) {\n    this._private__primitives.push(new SeriesPrimitiveWrapper(primitive, this));\n  }\n  _internal_detachPrimitive(source) {\n    this._private__primitives = this._private__primitives.filter(wrapper => wrapper._internal_primitive() !== source);\n  }\n  _internal_customSeriesPlotValuesBuilder() {\n    if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n      return undefined;\n    }\n    return data => {\n      return this._private__paneView._internal_priceValueBuilder(data);\n    };\n  }\n  _internal_customSeriesWhitespaceCheck() {\n    if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n      return undefined;\n    }\n    return data => {\n      return this._private__paneView._internal_isWhitespace(data);\n    };\n  }\n  _private__isOverlay() {\n    const priceScale = this._internal_priceScale();\n    return !isDefaultPriceScale(priceScale._internal_id());\n  }\n  _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n    if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n      return null;\n    }\n    // TODO: refactor this\n    // series data is strongly hardcoded to keep bars\n    const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram' ? [3 /* PlotRowValueIndex.Close */] : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n    const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n    let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n    if (this._internal_seriesType() === 'Histogram') {\n      const base = this._private__options.base;\n      const rangeWithBase = new PriceRangeImpl(base, base);\n      range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n    }\n    let margins = this._private__markersPaneView._internal_autoScaleMargins();\n    this._private__primitives.forEach(primitive => {\n      const primitiveAutoscale = primitive._internal_autoscaleInfo(startTimePoint, endTimePoint);\n      if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.priceRange) {\n        const primitiveRange = new PriceRangeImpl(primitiveAutoscale.priceRange.minValue, primitiveAutoscale.priceRange.maxValue);\n        range = range !== null ? range._internal_merge(primitiveRange) : primitiveRange;\n      }\n      if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.margins) {\n        margins = mergeMargins(margins, primitiveAutoscale.margins);\n      }\n    });\n    return new AutoscaleInfoImpl(range, margins);\n  }\n  _private__markerRadius() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        return this._private__options.crosshairMarkerRadius;\n    }\n    return 0;\n  }\n  _private__markerBorderColor() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        {\n          const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n          if (crosshairMarkerBorderColor.length !== 0) {\n            return crosshairMarkerBorderColor;\n          }\n        }\n    }\n    return null;\n  }\n  _private__markerBorderWidth() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        return this._private__options.crosshairMarkerBorderWidth;\n    }\n    return 0;\n  }\n  _private__markerBackgroundColor(index) {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        {\n          const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n          if (crosshairMarkerBackgroundColor.length !== 0) {\n            return crosshairMarkerBackgroundColor;\n          }\n        }\n    }\n    return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n  }\n  _private__recreateFormatter() {\n    switch (this._private__options.priceFormat.type) {\n      case 'custom':\n        {\n          this._private__formatter = {\n            format: this._private__options.priceFormat.formatter\n          };\n          break;\n        }\n      case 'volume':\n        {\n          this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n          break;\n        }\n      case 'percent':\n        {\n          this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n          break;\n        }\n      default:\n        {\n          const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n          this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n        }\n    }\n    if (this._internal__priceScale !== null) {\n      this._internal__priceScale._internal_updateFormatter();\n    }\n  }\n  _private__recalculateMarkers() {\n    const timeScale = this._internal_model()._internal_timeScale();\n    if (!timeScale._internal_hasPoints() || this._private__data._internal_isEmpty()) {\n      this._private__indexedMarkers = [];\n      return;\n    }\n    const firstDataIndex = ensureNotNull(this._private__data._internal_firstIndex());\n    this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n      // the first find index on the time scale (across all series)\n      const timePointIndex = ensureNotNull(timeScale._internal_timeToIndex(marker.time, true));\n      // and then search that index inside the series data\n      const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n      const seriesDataIndex = ensureNotNull(this._private__data._internal_search(timePointIndex, searchMode))._internal_index;\n      return {\n        time: seriesDataIndex,\n        position: marker.position,\n        shape: marker.shape,\n        color: marker.color,\n        id: marker.id,\n        _internal_internalId: index,\n        text: marker.text,\n        size: marker.size,\n        originalTime: marker.originalTime\n      };\n    });\n  }\n  _private__recreatePaneViews(customPaneView) {\n    this._private__markersPaneView = new SeriesMarkersPaneView(this, this._internal_model());\n    switch (this._private__seriesType) {\n      case 'Bar':\n        {\n          this._private__paneView = new SeriesBarsPaneView(this, this._internal_model());\n          break;\n        }\n      case 'Candlestick':\n        {\n          this._private__paneView = new SeriesCandlesticksPaneView(this, this._internal_model());\n          break;\n        }\n      case 'Line':\n        {\n          this._private__paneView = new SeriesLinePaneView(this, this._internal_model());\n          break;\n        }\n      case 'Custom':\n        {\n          this._private__paneView = new SeriesCustomPaneView(this, this._internal_model(), ensureDefined(customPaneView));\n          break;\n        }\n      case 'Area':\n        {\n          this._private__paneView = new SeriesAreaPaneView(this, this._internal_model());\n          break;\n        }\n      case 'Baseline':\n        {\n          this._private__paneView = new SeriesBaselinePaneView(this, this._internal_model());\n          break;\n        }\n      case 'Histogram':\n        {\n          this._private__paneView = new SeriesHistogramPaneView(this, this._internal_model());\n          break;\n        }\n      default:\n        throw Error('Unknown chart style assigned: ' + this._private__seriesType);\n    }\n  }\n  _private__extractPaneViews(extractor, zOrder) {\n    const res = [];\n    extractPrimitivePaneViews(this._private__primitives, extractor, zOrder, res);\n    return res;\n  }\n}\nfunction mergeMargins(source, additionalMargin) {\n  var _a, _b;\n  return {\n    above: Math.max((_a = source === null || source === void 0 ? void 0 : source.above) !== null && _a !== void 0 ? _a : 0, additionalMargin.above),\n    below: Math.max((_b = source === null || source === void 0 ? void 0 : source.below) !== null && _b !== void 0 ? _b : 0, additionalMargin.below)\n  };\n}\nclass Magnet {\n  constructor(options) {\n    this._private__options = options;\n  }\n  _internal_align(price, index, pane) {\n    let res = price;\n    if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n      return res;\n    }\n    const defaultPriceScale = pane._internal_defaultPriceScale();\n    const firstValue = defaultPriceScale._internal_firstValue();\n    if (firstValue === null) {\n      return res;\n    }\n    const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n    // get all serieses from the pane\n    const serieses = pane._internal_dataSources().filter(ds => ds instanceof Series);\n    const candidates = serieses.reduce((acc, series) => {\n      if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n        return acc;\n      }\n      const ps = series._internal_priceScale();\n      const bars = series._internal_bars();\n      if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n        return acc;\n      }\n      const bar = bars._internal_valueAt(index);\n      if (bar === null) {\n        return acc;\n      }\n      // convert bar to pixels\n      const firstPrice = ensure(series._internal_firstValue());\n      return acc.concat([ps._internal_priceToCoordinate(bar._internal_value[3 /* PlotRowValueIndex.Close */], firstPrice._internal_value)]);\n    }, []);\n    if (candidates.length === 0) {\n      return res;\n    }\n    candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n    const nearest = candidates[0];\n    res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n    return res;\n  }\n}\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    ctx.lineWidth = lineWidth;\n    strokeInPixel(ctx, () => {\n      const data = ensureNotNull(this._private__data);\n      if (data._internal_vertLinesVisible) {\n        ctx.strokeStyle = data._internal_vertLinesColor;\n        setLineStyle(ctx, data._internal_vertLineStyle);\n        ctx.beginPath();\n        for (const timeMark of data._internal_timeMarks) {\n          const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n          ctx.moveTo(x, -lineWidth);\n          ctx.lineTo(x, bitmapSize.height + lineWidth);\n        }\n        ctx.stroke();\n      }\n      if (data._internal_horzLinesVisible) {\n        ctx.strokeStyle = data._internal_horzLinesColor;\n        setLineStyle(ctx, data._internal_horzLineStyle);\n        ctx.beginPath();\n        for (const priceMark of data._internal_priceMarks) {\n          const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n          ctx.moveTo(-lineWidth, y);\n          ctx.lineTo(bitmapSize.width + lineWidth, y);\n        }\n        ctx.stroke();\n      }\n    });\n  }\n}\nclass GridPaneView {\n  constructor(pane) {\n    this._private__renderer = new GridRenderer();\n    this._private__invalidated = true;\n    this._private__pane = pane;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n      const data = {\n        _internal_horzLinesVisible: gridOptions.horzLines.visible,\n        _internal_vertLinesVisible: gridOptions.vertLines.visible,\n        _internal_horzLinesColor: gridOptions.horzLines.color,\n        _internal_vertLinesColor: gridOptions.vertLines.color,\n        _internal_horzLineStyle: gridOptions.horzLines.style,\n        _internal_vertLineStyle: gridOptions.vertLines.style,\n        _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n        // need this conversiom because TimeMark is a part of external interface\n        // and fields inside TimeMark are not minified\n        _internal_timeMarks: (this._private__pane._internal_model()._internal_timeScale()._internal_marks() || []).map(tm => {\n          return {\n            _internal_coord: tm.coord\n          };\n        })\n      };\n      this._private__renderer._internal_setData(data);\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n}\nclass Grid {\n  constructor(pane) {\n    this._private__paneView = new GridPaneView(pane);\n  }\n  _internal_paneView() {\n    return this._private__paneView;\n  }\n}\nconst defLogFormula = {\n  _internal_logicalOffset: 4,\n  _internal_coordOffset: 0.0001\n};\nfunction fromPercent(value, baseValue) {\n  if (baseValue < 0) {\n    value = -value;\n  }\n  return value / 100 * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n  const result = 100 * (value - baseValue) / baseValue;\n  return baseValue < 0 ? -result : result;\n}\nfunction toPercentRange(priceRange, baseValue) {\n  const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n  const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n  return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n  value -= 100;\n  if (baseValue < 0) {\n    value = -value;\n  }\n  return value / 100 * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n  const result = 100 * (value - baseValue) / baseValue + 100;\n  return baseValue < 0 ? -result : result;\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n  const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n  const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n  return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n  const m = Math.abs(price);\n  if (m < 1e-15) {\n    return 0;\n  }\n  const res = Math.log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n  return price < 0 ? -res : res;\n}\nfunction fromLog(logical, logFormula) {\n  const m = Math.abs(logical);\n  if (m < 1e-15) {\n    return 0;\n  }\n  const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n  return logical < 0 ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return null;\n  }\n  const min = toLog(priceRange._internal_minValue(), logFormula);\n  const max = toLog(priceRange._internal_maxValue(), logFormula);\n  return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return false;\n  }\n  const min = fromLog(priceRange._internal_minValue(), logFormula);\n  const max = fromLog(priceRange._internal_maxValue(), logFormula);\n  return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return null;\n  }\n  const min = fromLog(priceRange._internal_minValue(), logFormula);\n  const max = fromLog(priceRange._internal_maxValue(), logFormula);\n  return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n  if (range === null) {\n    return defLogFormula;\n  }\n  const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n  if (diff >= 1 || diff < 1e-15) {\n    return defLogFormula;\n  }\n  const digits = Math.ceil(Math.abs(Math.log10(diff)));\n  const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n  const coordOffset = 1 / Math.pow(10, logicalOffset);\n  return {\n    _internal_logicalOffset: logicalOffset,\n    _internal_coordOffset: coordOffset\n  };\n}\nfunction logFormulasAreSame(f1, f2) {\n  return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\nclass PriceTickSpanCalculator {\n  constructor(base, integralDividers) {\n    this._private__base = base;\n    this._private__integralDividers = integralDividers;\n    if (isBaseDecimal(this._private__base)) {\n      this._private__fractionalDividers = [2, 2.5, 2];\n    } else {\n      this._private__fractionalDividers = [];\n      for (let baseRest = this._private__base; baseRest !== 1;) {\n        if (baseRest % 2 === 0) {\n          this._private__fractionalDividers.push(2);\n          baseRest /= 2;\n        } else if (baseRest % 5 === 0) {\n          this._private__fractionalDividers.push(2, 2.5);\n          baseRest /= 5;\n        } else {\n          throw new Error('unexpected base');\n        }\n        if (this._private__fractionalDividers.length > 100) {\n          throw new Error('something wrong with base');\n        }\n      }\n    }\n  }\n  _internal_tickSpan(high, low, maxTickSpan) {\n    const minMovement = this._private__base === 0 ? 0 : 1 / this._private__base;\n    let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(Math.log10(high - low))));\n    let index = 0;\n    let c = this._private__integralDividers[0];\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // the second part is actual for small with very small values like 1e-10\n      // greaterOrEqual fails for such values\n      const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > minMovement + 1e-14 /* Constants.TickSpanEpsilon */;\n      const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n      const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n      const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n      if (!haveToContinue) {\n        break;\n      }\n      resultTickSpan /= c;\n      c = this._private__integralDividers[++index % this._private__integralDividers.length];\n    }\n    if (resultTickSpan <= minMovement + 1e-14 /* Constants.TickSpanEpsilon */) {\n      resultTickSpan = minMovement;\n    }\n    resultTickSpan = Math.max(1, resultTickSpan);\n    if (this._private__fractionalDividers.length > 0 && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n      index = 0;\n      c = this._private__fractionalDividers[0];\n      while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > minMovement + 1e-14 /* Constants.TickSpanEpsilon */) {\n        resultTickSpan /= c;\n        c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n      }\n    }\n    return resultTickSpan;\n  }\n}\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n  constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n    this._private__marks = [];\n    this._private__priceScale = priceScale;\n    this._private__base = base;\n    this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n    this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n  }\n  _internal_tickSpan(high, low) {\n    if (high < low) {\n      throw new Error('high < low');\n    }\n    const scaleHeight = this._private__priceScale._internal_height();\n    const markHeight = this._private__tickMarkHeight();\n    const maxTickSpan = (high - low) * markHeight / scaleHeight;\n    const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n    const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n    const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n    const spans = [];\n    spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n    return min(spans);\n  }\n  _internal_rebuildTickMarks() {\n    const priceScale = this._private__priceScale;\n    const firstValue = priceScale._internal_firstValue();\n    if (firstValue === null) {\n      this._private__marks = [];\n      return;\n    }\n    const scaleHeight = priceScale._internal_height();\n    const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n    const top = this._private__coordinateToLogicalFunc(0, firstValue);\n    const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n    const minCoord = extraTopBottomMargin;\n    const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n    const high = Math.max(bottom, top);\n    const low = Math.min(bottom, top);\n    if (high === low) {\n      this._private__marks = [];\n      return;\n    }\n    let span = this._internal_tickSpan(high, low);\n    let mod = high % span;\n    mod += mod < 0 ? span : 0;\n    const sign = high >= low ? 1 : -1;\n    let prevCoord = null;\n    let targetIndex = 0;\n    for (let logical = high - mod; logical > low; logical -= span) {\n      const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n      // check if there is place for it\n      // this is required for log scale\n      if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n        continue;\n      }\n      // check if a tick mark is partially visible and skip it if entireTextOnly is true\n      if (coord < minCoord || coord > maxCoord) {\n        continue;\n      }\n      if (targetIndex < this._private__marks.length) {\n        this._private__marks[targetIndex]._internal_coord = coord;\n        this._private__marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n      } else {\n        this._private__marks.push({\n          _internal_coord: coord,\n          _internal_label: priceScale._internal_formatLogical(logical)\n        });\n      }\n      targetIndex++;\n      prevCoord = coord;\n      if (priceScale._internal_isLog()) {\n        // recalc span\n        span = this._internal_tickSpan(logical * sign, low);\n      }\n    }\n    this._private__marks.length = targetIndex;\n  }\n  _internal_marks() {\n    return this._private__marks;\n  }\n  _private__fontHeight() {\n    return this._private__priceScale._internal_fontSize();\n  }\n  _private__tickMarkHeight() {\n    return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n  }\n}\nfunction sortSources(sources) {\n  return sources.slice().sort((s1, s2) => {\n    return ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder());\n  });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n  /**\n   * Price scale shows prices. Price range changes linearly.\n   */\n  PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n  /**\n   * Price scale shows prices. Price range changes logarithmically.\n   */\n  PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n  /**\n   * Price scale shows percentage values according the first visible value of the price scale.\n   * The first visible value is 0% in this mode.\n   */\n  PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n  /**\n   * The same as percentage mode, but the first value is moved to 100.\n   */\n  PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n  constructor(id, options, layoutOptions, localizationOptions) {\n    this._private__height = 0;\n    this._private__internalHeightCache = null;\n    this._private__priceRange = null;\n    this._private__priceRangeSnapshot = null;\n    this._private__invalidatedForRange = {\n      _internal_isValid: false,\n      _internal_visibleBars: null\n    };\n    this._private__marginAbove = 0;\n    this._private__marginBelow = 0;\n    this._private__onMarksChanged = new Delegate();\n    this._private__modeChanged = new Delegate();\n    this._private__dataSources = [];\n    this._private__cachedOrderedSources = null;\n    this._private__marksCache = null;\n    this._private__scaleStartPoint = null;\n    this._private__scrollStartPoint = null;\n    this._private__formatter = defaultPriceFormatter;\n    this._private__logFormula = logFormulaForPriceRange(null);\n    this._private__id = id;\n    this._private__options = options;\n    this._private__layoutOptions = layoutOptions;\n    this._private__localizationOptions = localizationOptions;\n    this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n  }\n  _internal_id() {\n    return this._private__id;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._internal_updateFormatter();\n    if (options.mode !== undefined) {\n      this._internal_setMode({\n        _internal_mode: options.mode\n      });\n    }\n    if (options.scaleMargins !== undefined) {\n      const top = ensureDefined(options.scaleMargins.top);\n      const bottom = ensureDefined(options.scaleMargins.bottom);\n      if (top < 0 || top > 1) {\n        throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n      }\n      if (bottom < 0 || bottom > 1) {\n        throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n      }\n      if (top + bottom > 1) {\n        throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n      }\n      this._private__invalidateInternalHeightCache();\n      this._private__marksCache = null;\n    }\n  }\n  _internal_isAutoScale() {\n    return this._private__options.autoScale;\n  }\n  _internal_isLog() {\n    return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n  }\n  _internal_isPercentage() {\n    return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n  }\n  _internal_isIndexedTo100() {\n    return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n  }\n  _internal_mode() {\n    return {\n      _internal_autoScale: this._private__options.autoScale,\n      _internal_isInverted: this._private__options.invertScale,\n      _internal_mode: this._private__options.mode\n    };\n  }\n  // eslint-disable-next-line complexity\n  _internal_setMode(newMode) {\n    const oldMode = this._internal_mode();\n    let priceRange = null;\n    if (newMode._internal_autoScale !== undefined) {\n      this._private__options.autoScale = newMode._internal_autoScale;\n    }\n    if (newMode._internal_mode !== undefined) {\n      this._private__options.mode = newMode._internal_mode;\n      if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n        this._private__options.autoScale = true;\n      }\n      // TODO: Remove after making rebuildTickMarks lazy\n      this._private__invalidatedForRange._internal_isValid = false;\n    }\n    // define which scale converted from\n    if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n      if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n        priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n        if (priceRange !== null) {\n          this._internal_setPriceRange(priceRange);\n        }\n      } else {\n        this._private__options.autoScale = true;\n      }\n    }\n    // define which scale converted to\n    if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n      priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n      if (priceRange !== null) {\n        this._internal_setPriceRange(priceRange);\n      }\n    }\n    const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n    if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n      this._internal_updateFormatter();\n    }\n    if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n      this._internal_updateFormatter();\n    }\n    if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n      this._private__options.invertScale = newMode._internal_isInverted;\n      this._private__onIsInvertedChanged();\n    }\n    this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n  }\n  _internal_modeChanged() {\n    return this._private__modeChanged;\n  }\n  _internal_fontSize() {\n    return this._private__layoutOptions.fontSize;\n  }\n  _internal_height() {\n    return this._private__height;\n  }\n  _internal_setHeight(value) {\n    if (this._private__height === value) {\n      return;\n    }\n    this._private__height = value;\n    this._private__invalidateInternalHeightCache();\n    this._private__marksCache = null;\n  }\n  _internal_internalHeight() {\n    if (this._private__internalHeightCache) {\n      return this._private__internalHeightCache;\n    }\n    const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n    this._private__internalHeightCache = res;\n    return res;\n  }\n  _internal_priceRange() {\n    this._private__makeSureItIsValid();\n    return this._private__priceRange;\n  }\n  _internal_setPriceRange(newPriceRange, isForceSetValue) {\n    const oldPriceRange = this._private__priceRange;\n    if (!isForceSetValue && !(oldPriceRange === null && newPriceRange !== null) && (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n      return;\n    }\n    this._private__marksCache = null;\n    this._private__priceRange = newPriceRange;\n  }\n  _internal_isEmpty() {\n    this._private__makeSureItIsValid();\n    return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n  }\n  _internal_invertedCoordinate(coordinate) {\n    return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n  }\n  _internal_priceToCoordinate(price, baseValue) {\n    if (this._internal_isPercentage()) {\n      price = toPercent(price, baseValue);\n    } else if (this._internal_isIndexedTo100()) {\n      price = toIndexedTo100(price, baseValue);\n    }\n    return this._private__logicalToCoordinate(price, baseValue);\n  }\n  _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n    this._private__makeSureItIsValid();\n    const bh = this._private__bottomMarginPx();\n    const range = ensureNotNull(this._internal_priceRange());\n    const min = range._internal_minValue();\n    const max = range._internal_maxValue();\n    const ih = this._internal_internalHeight() - 1;\n    const isInverted = this._internal_isInverted();\n    const hmm = ih / (max - min);\n    const fromIndex = visibleRange === undefined ? 0 : visibleRange.from;\n    const toIndex = visibleRange === undefined ? points.length : visibleRange.to;\n    const transformFn = this._private__getCoordinateTransformer();\n    for (let i = fromIndex; i < toIndex; i++) {\n      const point = points[i];\n      const price = point._internal_price;\n      if (isNaN(price)) {\n        continue;\n      }\n      let logical = price;\n      if (transformFn !== null) {\n        logical = transformFn(point._internal_price, baseValue);\n      }\n      const invCoordinate = bh + hmm * (logical - min);\n      const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      point._internal_y = coordinate;\n    }\n  }\n  _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n    this._private__makeSureItIsValid();\n    const bh = this._private__bottomMarginPx();\n    const range = ensureNotNull(this._internal_priceRange());\n    const min = range._internal_minValue();\n    const max = range._internal_maxValue();\n    const ih = this._internal_internalHeight() - 1;\n    const isInverted = this._internal_isInverted();\n    const hmm = ih / (max - min);\n    const fromIndex = visibleRange === undefined ? 0 : visibleRange.from;\n    const toIndex = visibleRange === undefined ? pricesList.length : visibleRange.to;\n    const transformFn = this._private__getCoordinateTransformer();\n    for (let i = fromIndex; i < toIndex; i++) {\n      const bar = pricesList[i];\n      let openLogical = bar._internal_open;\n      let highLogical = bar._internal_high;\n      let lowLogical = bar._internal_low;\n      let closeLogical = bar._internal_close;\n      if (transformFn !== null) {\n        openLogical = transformFn(bar._internal_open, baseValue);\n        highLogical = transformFn(bar._internal_high, baseValue);\n        lowLogical = transformFn(bar._internal_low, baseValue);\n        closeLogical = transformFn(bar._internal_close, baseValue);\n      }\n      let invCoordinate = bh + hmm * (openLogical - min);\n      let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_openY = coordinate;\n      invCoordinate = bh + hmm * (highLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_highY = coordinate;\n      invCoordinate = bh + hmm * (lowLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_lowY = coordinate;\n      invCoordinate = bh + hmm * (closeLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_closeY = coordinate;\n    }\n  }\n  _internal_coordinateToPrice(coordinate, baseValue) {\n    const logical = this._private__coordinateToLogical(coordinate, baseValue);\n    return this._internal_logicalToPrice(logical, baseValue);\n  }\n  _internal_logicalToPrice(logical, baseValue) {\n    let value = logical;\n    if (this._internal_isPercentage()) {\n      value = fromPercent(value, baseValue);\n    } else if (this._internal_isIndexedTo100()) {\n      value = fromIndexedTo100(value, baseValue);\n    }\n    return value;\n  }\n  _internal_dataSources() {\n    return this._private__dataSources;\n  }\n  _internal_orderedSources() {\n    if (this._private__cachedOrderedSources) {\n      return this._private__cachedOrderedSources;\n    }\n    let sources = [];\n    for (let i = 0; i < this._private__dataSources.length; i++) {\n      const ds = this._private__dataSources[i];\n      if (ds._internal_zorder() === null) {\n        ds._internal_setZorder(i + 1);\n      }\n      sources.push(ds);\n    }\n    sources = sortSources(sources);\n    this._private__cachedOrderedSources = sources;\n    return this._private__cachedOrderedSources;\n  }\n  _internal_addDataSource(source) {\n    if (this._private__dataSources.indexOf(source) !== -1) {\n      return;\n    }\n    this._private__dataSources.push(source);\n    this._internal_updateFormatter();\n    this._internal_invalidateSourcesCache();\n  }\n  _internal_removeDataSource(source) {\n    const index = this._private__dataSources.indexOf(source);\n    if (index === -1) {\n      throw new Error('source is not attached to scale');\n    }\n    this._private__dataSources.splice(index, 1);\n    if (this._private__dataSources.length === 0) {\n      this._internal_setMode({\n        _internal_autoScale: true\n      });\n      // if no sources on price scale let's clear price range cache as well as enabling auto scale\n      this._internal_setPriceRange(null);\n    }\n    this._internal_updateFormatter();\n    this._internal_invalidateSourcesCache();\n  }\n  _internal_firstValue() {\n    // TODO: cache the result\n    let result = null;\n    for (const source of this._private__dataSources) {\n      const firstValue = source._internal_firstValue();\n      if (firstValue === null) {\n        continue;\n      }\n      if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n        result = firstValue;\n      }\n    }\n    return result === null ? null : result._internal_value;\n  }\n  _internal_isInverted() {\n    return this._private__options.invertScale;\n  }\n  _internal_marks() {\n    const firstValueIsNull = this._internal_firstValue() === null;\n    // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n    // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n    // we could display an empty price scale, but this is not good from UX\n    // so in this case we need to keep an previous marks to display them on the scale\n    // as one of possible examples for this situation could be the following:\n    // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n    // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n    if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n      return this._private__marksCache._internal_marks;\n    }\n    this._private__markBuilder._internal_rebuildTickMarks();\n    const marks = this._private__markBuilder._internal_marks();\n    this._private__marksCache = {\n      _internal_marks: marks,\n      _internal_firstValueIsNull: firstValueIsNull\n    };\n    this._private__onMarksChanged._internal_fire();\n    return marks;\n  }\n  _internal_onMarksChanged() {\n    return this._private__onMarksChanged;\n  }\n  _internal_startScale(x) {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    // invert x\n    this._private__scaleStartPoint = this._private__height - x;\n    this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n  }\n  _internal_scaleTo(x) {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    if (this._private__scaleStartPoint === null) {\n      return;\n    }\n    this._internal_setMode({\n      _internal_autoScale: false\n    });\n    // invert x\n    x = this._private__height - x;\n    if (x < 0) {\n      x = 0;\n    }\n    let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n    const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n    scaleCoeff = Math.max(scaleCoeff, 0.1);\n    newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n    this._internal_setPriceRange(newPriceRange);\n  }\n  _internal_endScale() {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    this._private__scaleStartPoint = null;\n    this._private__priceRangeSnapshot = null;\n  }\n  _internal_startScroll(x) {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scrollStartPoint = x;\n    this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n  }\n  _internal_scrollTo(x) {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n    let pixelDelta = x - this._private__scrollStartPoint;\n    if (this._internal_isInverted()) {\n      pixelDelta *= -1;\n    }\n    const priceDelta = pixelDelta * priceUnitsPerPixel;\n    const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n    newPriceRange._internal_shift(priceDelta);\n    this._internal_setPriceRange(newPriceRange, true);\n    this._private__marksCache = null;\n  }\n  _internal_endScroll() {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    this._private__scrollStartPoint = null;\n    this._private__priceRangeSnapshot = null;\n  }\n  _internal_formatter() {\n    if (!this._private__formatter) {\n      this._internal_updateFormatter();\n    }\n    return this._private__formatter;\n  }\n  _internal_formatPrice(price, firstValue) {\n    switch (this._private__options.mode) {\n      case 2 /* PriceScaleMode.Percentage */:\n        return this._private__formatPercentage(toPercent(price, firstValue));\n      case 3 /* PriceScaleMode.IndexedTo100 */:\n        return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n      default:\n        return this._private__formatPrice(price);\n    }\n  }\n  _internal_formatLogical(logical) {\n    switch (this._private__options.mode) {\n      case 2 /* PriceScaleMode.Percentage */:\n        return this._private__formatPercentage(logical);\n      case 3 /* PriceScaleMode.IndexedTo100 */:\n        return this._internal_formatter().format(logical);\n      default:\n        return this._private__formatPrice(logical);\n    }\n  }\n  _internal_formatPriceAbsolute(price) {\n    return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource())._internal_formatter());\n  }\n  _internal_formatPricePercentage(price, baseValue) {\n    price = toPercent(price, baseValue);\n    return this._private__formatPercentage(price, percentageFormatter);\n  }\n  _internal_sourcesForAutoScale() {\n    return this._private__dataSources;\n  }\n  _internal_recalculatePriceRange(visibleBars) {\n    this._private__invalidatedForRange = {\n      _internal_visibleBars: visibleBars,\n      _internal_isValid: false\n    };\n  }\n  _internal_updateAllViews() {\n    this._private__dataSources.forEach(s => s._internal_updateAllViews());\n  }\n  _internal_updateFormatter() {\n    this._private__marksCache = null;\n    const formatterSource = this._private__formatterSource();\n    let base = 100;\n    if (formatterSource !== null) {\n      base = Math.round(1 / formatterSource._internal_minMove());\n    }\n    this._private__formatter = defaultPriceFormatter;\n    if (this._internal_isPercentage()) {\n      this._private__formatter = percentageFormatter;\n      base = 100;\n    } else if (this._internal_isIndexedTo100()) {\n      this._private__formatter = new PriceFormatter(100, 1);\n      base = 100;\n    } else {\n      if (formatterSource !== null) {\n        // user\n        this._private__formatter = formatterSource._internal_formatter();\n      }\n    }\n    this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    this._private__markBuilder._internal_rebuildTickMarks();\n  }\n  _internal_invalidateSourcesCache() {\n    this._private__cachedOrderedSources = null;\n  }\n  /**\n   * @returns The {@link IPriceDataSource} that will be used as the \"formatter source\" (take minMove for formatter).\n   */\n  _private__formatterSource() {\n    return this._private__dataSources[0] || null;\n  }\n  _private__topMarginPx() {\n    return this._internal_isInverted() ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n  }\n  _private__bottomMarginPx() {\n    return this._internal_isInverted() ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n  }\n  _private__makeSureItIsValid() {\n    if (!this._private__invalidatedForRange._internal_isValid) {\n      this._private__invalidatedForRange._internal_isValid = true;\n      this._private__recalculatePriceRangeImpl();\n    }\n  }\n  _private__invalidateInternalHeightCache() {\n    this._private__internalHeightCache = null;\n  }\n  _private__logicalToCoordinate(logical, baseValue) {\n    this._private__makeSureItIsValid();\n    if (this._internal_isEmpty()) {\n      return 0;\n    }\n    logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n    const range = ensureNotNull(this._internal_priceRange());\n    const invCoordinate = this._private__bottomMarginPx() + (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n    const coordinate = this._internal_invertedCoordinate(invCoordinate);\n    return coordinate;\n  }\n  _private__coordinateToLogical(coordinate, baseValue) {\n    this._private__makeSureItIsValid();\n    if (this._internal_isEmpty()) {\n      return 0;\n    }\n    const invCoordinate = this._internal_invertedCoordinate(coordinate);\n    const range = ensureNotNull(this._internal_priceRange());\n    const logical = range._internal_minValue() + range._internal_length() * ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n    return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n  }\n  _private__onIsInvertedChanged() {\n    this._private__marksCache = null;\n    this._private__markBuilder._internal_rebuildTickMarks();\n  }\n  // eslint-disable-next-line complexity\n  _private__recalculatePriceRangeImpl() {\n    const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n    if (visibleBars === null) {\n      return;\n    }\n    let priceRange = null;\n    const sources = this._internal_sourcesForAutoScale();\n    let marginAbove = 0;\n    let marginBelow = 0;\n    for (const source of sources) {\n      if (!source._internal_visible()) {\n        continue;\n      }\n      const firstValue = source._internal_firstValue();\n      if (firstValue === null) {\n        continue;\n      }\n      const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n      let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n      if (sourceRange !== null) {\n        switch (this._private__options.mode) {\n          case 1 /* PriceScaleMode.Logarithmic */:\n            sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n            break;\n          case 2 /* PriceScaleMode.Percentage */:\n            sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n            break;\n          case 3 /* PriceScaleMode.IndexedTo100 */:\n            sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n            break;\n        }\n        if (priceRange === null) {\n          priceRange = sourceRange;\n        } else {\n          priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n        }\n        if (autoScaleInfo !== null) {\n          const margins = autoScaleInfo._internal_margins();\n          if (margins !== null) {\n            marginAbove = Math.max(marginAbove, margins.above);\n            marginBelow = Math.max(marginAbove, margins.below);\n          }\n        }\n      }\n    }\n    if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n      this._private__marginAbove = marginAbove;\n      this._private__marginBelow = marginBelow;\n      this._private__marksCache = null;\n      this._private__invalidateInternalHeightCache();\n    }\n    if (priceRange !== null) {\n      // keep current range is new is empty\n      if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n        const formatterSource = this._private__formatterSource();\n        const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n        // if price range is degenerated to 1 point let's extend it by 10 min move values\n        // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n        const extendValue = 5 * minMove;\n        if (this._internal_isLog()) {\n          priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n        }\n        priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n        if (this._internal_isLog()) {\n          priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n        }\n      }\n      if (this._internal_isLog()) {\n        const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n        const newLogFormula = logFormulaForPriceRange(rawRange);\n        if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n          const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n          this._private__logFormula = newLogFormula;\n          priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n          if (rawSnapshot !== null) {\n            this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n          }\n        }\n      }\n      this._internal_setPriceRange(priceRange);\n    } else {\n      // reset empty to default\n      if (this._private__priceRange === null) {\n        this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n        this._private__logFormula = logFormulaForPriceRange(null);\n      }\n    }\n    this._private__invalidatedForRange._internal_isValid = true;\n  }\n  _private__getCoordinateTransformer() {\n    if (this._internal_isPercentage()) {\n      return toPercent;\n    } else if (this._internal_isIndexedTo100()) {\n      return toIndexedTo100;\n    } else if (this._internal_isLog()) {\n      return price => toLog(price, this._private__logFormula);\n    }\n    return null;\n  }\n  _private__formatValue(value, formatter, fallbackFormatter) {\n    if (formatter === undefined) {\n      if (fallbackFormatter === undefined) {\n        fallbackFormatter = this._internal_formatter();\n      }\n      return fallbackFormatter.format(value);\n    }\n    return formatter(value);\n  }\n  _private__formatPrice(price, fallbackFormatter) {\n    return this._private__formatValue(price, this._private__localizationOptions.priceFormatter, fallbackFormatter);\n  }\n  _private__formatPercentage(percentage, fallbackFormatter) {\n    return this._private__formatValue(percentage, this._private__localizationOptions.percentageFormatter, fallbackFormatter);\n  }\n}\nconst DEFAULT_STRETCH_FACTOR = 1000;\nclass Pane {\n  constructor(timeScale, model) {\n    this._private__dataSources = [];\n    this._private__overlaySourcesByScaleId = new Map();\n    this._private__height = 0;\n    this._private__width = 0;\n    this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n    this._private__cachedOrderedSources = null;\n    this._private__destroyed = new Delegate();\n    this._private__timeScale = timeScale;\n    this._private__model = model;\n    this._private__grid = new Grid(this);\n    const options = model._internal_options();\n    this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n    this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n    this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n    this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n    this._internal_applyScaleOptions(options);\n  }\n  _internal_applyScaleOptions(options) {\n    if (options.leftPriceScale) {\n      this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n    }\n    if (options.rightPriceScale) {\n      this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n    }\n    if (options.localization) {\n      this._private__leftPriceScale._internal_updateFormatter();\n      this._private__rightPriceScale._internal_updateFormatter();\n    }\n    if (options.overlayPriceScales) {\n      const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n      for (const arr of sourceArrays) {\n        const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n        priceScale._internal_applyOptions(options.overlayPriceScales);\n        if (options.localization) {\n          priceScale._internal_updateFormatter();\n        }\n      }\n    }\n  }\n  _internal_priceScaleById(id) {\n    switch (id) {\n      case \"left\" /* DefaultPriceScaleId.Left */:\n        {\n          return this._private__leftPriceScale;\n        }\n      case \"right\" /* DefaultPriceScaleId.Right */:\n        {\n          return this._private__rightPriceScale;\n        }\n    }\n    if (this._private__overlaySourcesByScaleId.has(id)) {\n      return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n    }\n    return null;\n  }\n  _internal_destroy() {\n    this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n    this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n    this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n    this._private__dataSources.forEach(source => {\n      if (source._internal_destroy) {\n        source._internal_destroy();\n      }\n    });\n    this._private__destroyed._internal_fire();\n  }\n  _internal_stretchFactor() {\n    return this._private__stretchFactor;\n  }\n  _internal_setStretchFactor(factor) {\n    this._private__stretchFactor = factor;\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n  _internal_width() {\n    return this._private__width;\n  }\n  _internal_height() {\n    return this._private__height;\n  }\n  _internal_setWidth(width) {\n    this._private__width = width;\n    this._internal_updateAllSources();\n  }\n  _internal_setHeight(height) {\n    this._private__height = height;\n    this._private__leftPriceScale._internal_setHeight(height);\n    this._private__rightPriceScale._internal_setHeight(height);\n    // process overlays\n    this._private__dataSources.forEach(ds => {\n      if (this._internal_isOverlay(ds)) {\n        const priceScale = ds._internal_priceScale();\n        if (priceScale !== null) {\n          priceScale._internal_setHeight(height);\n        }\n      }\n    });\n    this._internal_updateAllSources();\n  }\n  _internal_dataSources() {\n    return this._private__dataSources;\n  }\n  _internal_isOverlay(source) {\n    const priceScale = source._internal_priceScale();\n    if (priceScale === null) {\n      return true;\n    }\n    return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n  }\n  _internal_addDataSource(source, targetScaleId, zOrder) {\n    const targetZOrder = zOrder !== undefined ? zOrder : this._private__getZOrderMinMax()._internal_maxZOrder + 1;\n    this._private__insertDataSource(source, targetScaleId, targetZOrder);\n  }\n  _internal_removeDataSource(source) {\n    const index = this._private__dataSources.indexOf(source);\n    assert(index !== -1, 'removeDataSource: invalid data source');\n    this._private__dataSources.splice(index, 1);\n    const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n    if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n      const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n      const overlayIndex = overlaySources.indexOf(source);\n      if (overlayIndex !== -1) {\n        overlaySources.splice(overlayIndex, 1);\n        if (overlaySources.length === 0) {\n          this._private__overlaySourcesByScaleId.delete(priceScaleId);\n        }\n      }\n    }\n    const priceScale = source._internal_priceScale();\n    // if source has owner, it returns owner's price scale\n    // and it does not have source in their list\n    if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n      priceScale._internal_removeDataSource(source);\n    }\n    if (priceScale !== null) {\n      priceScale._internal_invalidateSourcesCache();\n      this._internal_recalculatePriceScale(priceScale);\n    }\n    this._private__cachedOrderedSources = null;\n  }\n  _internal_priceScalePosition(priceScale) {\n    if (priceScale === this._private__leftPriceScale) {\n      return 'left';\n    }\n    if (priceScale === this._private__rightPriceScale) {\n      return 'right';\n    }\n    return 'overlay';\n  }\n  _internal_leftPriceScale() {\n    return this._private__leftPriceScale;\n  }\n  _internal_rightPriceScale() {\n    return this._private__rightPriceScale;\n  }\n  _internal_startScalePrice(priceScale, x) {\n    priceScale._internal_startScale(x);\n  }\n  _internal_scalePriceTo(priceScale, x) {\n    priceScale._internal_scaleTo(x);\n    // TODO: be more smart and update only affected views\n    this._internal_updateAllSources();\n  }\n  _internal_endScalePrice(priceScale) {\n    priceScale._internal_endScale();\n  }\n  _internal_startScrollPrice(priceScale, x) {\n    priceScale._internal_startScroll(x);\n  }\n  _internal_scrollPriceTo(priceScale, x) {\n    priceScale._internal_scrollTo(x);\n    this._internal_updateAllSources();\n  }\n  _internal_endScrollPrice(priceScale) {\n    priceScale._internal_endScroll();\n  }\n  _internal_updateAllSources() {\n    this._private__dataSources.forEach(source => {\n      source._internal_updateAllViews();\n    });\n  }\n  _internal_defaultPriceScale() {\n    let priceScale = null;\n    if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n      priceScale = this._private__rightPriceScale;\n    } else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n      priceScale = this._private__leftPriceScale;\n    } else if (this._private__dataSources.length !== 0) {\n      priceScale = this._private__dataSources[0]._internal_priceScale();\n    }\n    if (priceScale === null) {\n      priceScale = this._private__rightPriceScale;\n    }\n    return priceScale;\n  }\n  _internal_defaultVisiblePriceScale() {\n    let priceScale = null;\n    if (this._private__model._internal_options().rightPriceScale.visible) {\n      priceScale = this._private__rightPriceScale;\n    } else if (this._private__model._internal_options().leftPriceScale.visible) {\n      priceScale = this._private__leftPriceScale;\n    }\n    return priceScale;\n  }\n  _internal_recalculatePriceScale(priceScale) {\n    if (priceScale === null || !priceScale._internal_isAutoScale()) {\n      return;\n    }\n    this._private__recalculatePriceScaleImpl(priceScale);\n  }\n  _internal_resetPriceScale(priceScale) {\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    priceScale._internal_setMode({\n      _internal_autoScale: true\n    });\n    if (visibleBars !== null) {\n      priceScale._internal_recalculatePriceRange(visibleBars);\n    }\n    this._internal_updateAllSources();\n  }\n  _internal_momentaryAutoScale() {\n    this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n    this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n  }\n  _internal_recalculate() {\n    this._internal_recalculatePriceScale(this._private__leftPriceScale);\n    this._internal_recalculatePriceScale(this._private__rightPriceScale);\n    this._private__dataSources.forEach(ds => {\n      if (this._internal_isOverlay(ds)) {\n        this._internal_recalculatePriceScale(ds._internal_priceScale());\n      }\n    });\n    this._internal_updateAllSources();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_orderedSources() {\n    if (this._private__cachedOrderedSources === null) {\n      this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n    }\n    return this._private__cachedOrderedSources;\n  }\n  _internal_onDestroyed() {\n    return this._private__destroyed;\n  }\n  _internal_grid() {\n    return this._private__grid;\n  }\n  _private__recalculatePriceScaleImpl(priceScale) {\n    // TODO: can use this checks\n    const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n    if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n      const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n      if (visibleBars !== null) {\n        priceScale._internal_recalculatePriceRange(visibleBars);\n      }\n    }\n    priceScale._internal_updateAllViews();\n  }\n  _private__getZOrderMinMax() {\n    const sources = this._internal_orderedSources();\n    if (sources.length === 0) {\n      return {\n        _internal_minZOrder: 0,\n        _internal_maxZOrder: 0\n      };\n    }\n    let minZOrder = 0;\n    let maxZOrder = 0;\n    for (let j = 0; j < sources.length; j++) {\n      const ds = sources[j];\n      const zOrder = ds._internal_zorder();\n      if (zOrder !== null) {\n        if (zOrder < minZOrder) {\n          minZOrder = zOrder;\n        }\n        if (zOrder > maxZOrder) {\n          maxZOrder = zOrder;\n        }\n      }\n    }\n    return {\n      _internal_minZOrder: minZOrder,\n      _internal_maxZOrder: maxZOrder\n    };\n  }\n  _private__insertDataSource(source, priceScaleId, zOrder) {\n    let priceScale = this._internal_priceScaleById(priceScaleId);\n    if (priceScale === null) {\n      priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n    }\n    this._private__dataSources.push(source);\n    if (!isDefaultPriceScale(priceScaleId)) {\n      const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n      overlaySources.push(source);\n      this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n    }\n    priceScale._internal_addDataSource(source);\n    source._internal_setPriceScale(priceScale);\n    source._internal_setZorder(zOrder);\n    this._internal_recalculatePriceScale(priceScale);\n    this._private__cachedOrderedSources = null;\n  }\n  _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n    if (oldMode._internal_mode === newMode._internal_mode) {\n      return;\n    }\n    // momentary auto scale if we toggle percentage/indexedTo100 mode\n    this._private__recalculatePriceScaleImpl(priceScale);\n  }\n  _private__createPriceScale(id, options) {\n    const actualOptions = Object.assign({\n      visible: true,\n      autoScale: true\n    }, clone(options));\n    const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options().layout, this._private__model._internal_options().localization);\n    priceScale._internal_setHeight(this._internal_height());\n    return priceScale;\n  }\n}\nclass FormattedLabelsCache {\n  constructor(format, horzScaleBehavior, size = 50) {\n    this._private__actualSize = 0;\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__cache = new Map();\n    this._private__tick2Labels = new Map();\n    this._private__format = format;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__maxSize = size;\n  }\n  _internal_format(tickMark) {\n    const time = tickMark.time;\n    const cacheKey = this._private__horzScaleBehavior.cacheKey(time);\n    const tick = this._private__cache.get(cacheKey);\n    if (tick !== undefined) {\n      return tick._internal_string;\n    }\n    if (this._private__actualSize === this._private__maxSize) {\n      const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n      this._private__tick2Labels.delete(this._private__oldestTick);\n      this._private__cache.delete(ensureDefined(oldestValue));\n      this._private__oldestTick++;\n      this._private__actualSize--;\n    }\n    const str = this._private__format(tickMark);\n    this._private__cache.set(cacheKey, {\n      _internal_string: str,\n      _internal_tick: this._private__usageTick\n    });\n    this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n    this._private__actualSize++;\n    this._private__usageTick++;\n    return str;\n  }\n}\nclass RangeImpl {\n  constructor(left, right) {\n    assert(left <= right, 'right should be >= left');\n    this._private__left = left;\n    this._private__right = right;\n  }\n  _internal_left() {\n    return this._private__left;\n  }\n  _internal_right() {\n    return this._private__right;\n  }\n  _internal_count() {\n    return this._private__right - this._private__left + 1;\n  }\n  _internal_contains(index) {\n    return this._private__left <= index && index <= this._private__right;\n  }\n  _internal_equals(other) {\n    return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n  }\n}\nfunction areRangesEqual(first, second) {\n  if (first === null || second === null) {\n    return first === second;\n  }\n  return first._internal_equals(second);\n}\nclass TickMarks {\n  constructor() {\n    this._private__marksByWeight = new Map();\n    this._private__cache = null;\n    this._private__uniformDistribution = false;\n  }\n  _internal_setUniformDistribution(val) {\n    this._private__uniformDistribution = val;\n    this._private__cache = null;\n  }\n  _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n    this._private__removeMarksSinceIndex(firstChangedPointIndex);\n    this._private__cache = null;\n    for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n      const point = newPoints[index];\n      let marksForWeight = this._private__marksByWeight.get(point.timeWeight);\n      if (marksForWeight === undefined) {\n        marksForWeight = [];\n        this._private__marksByWeight.set(point.timeWeight, marksForWeight);\n      }\n      marksForWeight.push({\n        index: index,\n        time: point.time,\n        weight: point.timeWeight,\n        originalTime: point.originalTime\n      });\n    }\n  }\n  _internal_build(spacing, maxWidth) {\n    const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n    if (this._private__cache === null || this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark) {\n      this._private__cache = {\n        _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark),\n        _internal_maxIndexesPerMark: maxIndexesPerMark\n      };\n    }\n    return this._private__cache._internal_marks;\n  }\n  _private__removeMarksSinceIndex(sinceIndex) {\n    if (sinceIndex === 0) {\n      this._private__marksByWeight.clear();\n      return;\n    }\n    const weightsToClear = [];\n    this._private__marksByWeight.forEach((marks, timeWeight) => {\n      if (sinceIndex <= marks[0].index) {\n        weightsToClear.push(timeWeight);\n      } else {\n        marks.splice(lowerBound(marks, sinceIndex, tm => tm.index < sinceIndex), Infinity);\n      }\n    });\n    for (const weight of weightsToClear) {\n      this._private__marksByWeight.delete(weight);\n    }\n  }\n  _private__buildMarksImpl(maxIndexesPerMark) {\n    let marks = [];\n    for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n      if (!this._private__marksByWeight.get(weight)) {\n        continue;\n      }\n      // Built tickMarks are now prevMarks, and marks it as new array\n      const prevMarks = marks;\n      marks = [];\n      const prevMarksLength = prevMarks.length;\n      let prevMarksPointer = 0;\n      const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n      const currentWeightLength = currentWeight.length;\n      let rightIndex = Infinity;\n      let leftIndex = -Infinity;\n      for (let i = 0; i < currentWeightLength; i++) {\n        const mark = currentWeight[i];\n        const currentIndex = mark.index;\n        // Determine indexes with which current index will be compared\n        // All marks to the right is moved to new array\n        while (prevMarksPointer < prevMarksLength) {\n          const lastMark = prevMarks[prevMarksPointer];\n          const lastIndex = lastMark.index;\n          if (lastIndex < currentIndex) {\n            prevMarksPointer++;\n            marks.push(lastMark);\n            leftIndex = lastIndex;\n            rightIndex = Infinity;\n          } else {\n            rightIndex = lastIndex;\n            break;\n          }\n        }\n        if (rightIndex - currentIndex >= maxIndexesPerMark && currentIndex - leftIndex >= maxIndexesPerMark) {\n          // TickMark fits. Place it into new array\n          marks.push(mark);\n          leftIndex = currentIndex;\n        } else {\n          if (this._private__uniformDistribution) {\n            return prevMarks;\n          }\n        }\n      }\n      // Place all unused tickMarks into new array;\n      for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n        marks.push(prevMarks[prevMarksPointer]);\n      }\n    }\n    return marks;\n  }\n}\nclass TimeScaleVisibleRange {\n  constructor(logicalRange) {\n    this._private__logicalRange = logicalRange;\n  }\n  _internal_strictRange() {\n    if (this._private__logicalRange === null) {\n      return null;\n    }\n    return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n  }\n  _internal_logicalRange() {\n    return this._private__logicalRange;\n  }\n  static _internal_invalid() {\n    return new TimeScaleVisibleRange(null);\n  }\n}\nconst defaultTickMarkMaxCharacterLength = 8;\nfunction markWithGreaterWeight(a, b) {\n  return a.weight > b.weight ? a : b;\n}\nclass TimeScale {\n  constructor(model, options, localizationOptions, horzScaleBehavior) {\n    this._private__width = 0;\n    this._private__baseIndexOrNull = null;\n    this._private__points = [];\n    this._private__scrollStartPoint = null;\n    this._private__scaleStartPoint = null;\n    this._private__tickMarks = new TickMarks();\n    this._private__formattedByWeight = new Map();\n    this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n    this._private__visibleRangeInvalidated = true;\n    this._private__visibleBarsChanged = new Delegate();\n    this._private__logicalRangeChanged = new Delegate();\n    this._private__optionsApplied = new Delegate();\n    this._private__commonTransitionStartState = null;\n    this._private__timeMarksCache = null;\n    this._private__labels = [];\n    this._private__options = options;\n    this._private__localizationOptions = localizationOptions;\n    this._private__rightOffset = options.rightOffset;\n    this._private__barSpacing = options.barSpacing;\n    this._private__model = model;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__updateDateTimeFormatter();\n    this._private__tickMarks._internal_setUniformDistribution(options.uniformDistribution);\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyLocalizationOptions(localizationOptions) {\n    merge(this._private__localizationOptions, localizationOptions);\n    this._private__invalidateTickMarks();\n    this._private__updateDateTimeFormatter();\n  }\n  _internal_applyOptions(options, localizationOptions) {\n    var _a;\n    merge(this._private__options, options);\n    if (this._private__options.fixLeftEdge) {\n      this._private__doFixLeftEdge();\n    }\n    if (this._private__options.fixRightEdge) {\n      this._private__doFixRightEdge();\n    }\n    // note that bar spacing should be applied before right offset\n    // because right offset depends on bar spacing\n    if (options.barSpacing !== undefined) {\n      this._private__model._internal_setBarSpacing(options.barSpacing);\n    }\n    if (options.rightOffset !== undefined) {\n      this._private__model._internal_setRightOffset(options.rightOffset);\n    }\n    if (options.minBarSpacing !== undefined) {\n      // yes, if we apply min bar spacing then we need to correct bar spacing\n      // the easiest way is to apply it once again\n      this._private__model._internal_setBarSpacing((_a = options.barSpacing) !== null && _a !== void 0 ? _a : this._private__barSpacing);\n    }\n    this._private__invalidateTickMarks();\n    this._private__updateDateTimeFormatter();\n    this._private__optionsApplied._internal_fire();\n  }\n  _internal_indexToTime(index) {\n    var _a, _b;\n    return (_b = (_a = this._private__points[index]) === null || _a === void 0 ? void 0 : _a.time) !== null && _b !== void 0 ? _b : null;\n  }\n  _internal_indexToTimeScalePoint(index) {\n    var _a;\n    return (_a = this._private__points[index]) !== null && _a !== void 0 ? _a : null;\n  }\n  _internal_timeToIndex(time, findNearest) {\n    if (this._private__points.length < 1) {\n      // no time points available\n      return null;\n    }\n    if (this._private__horzScaleBehavior.key(time) > this._private__horzScaleBehavior.key(this._private__points[this._private__points.length - 1].time)) {\n      // special case\n      return findNearest ? this._private__points.length - 1 : null;\n    }\n    const index = lowerBound(this._private__points, this._private__horzScaleBehavior.key(time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n    if (this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(this._private__points[index].time)) {\n      return findNearest ? index : null;\n    }\n    return index;\n  }\n  _internal_isEmpty() {\n    return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n  }\n  _internal_hasPoints() {\n    return this._private__points.length > 0;\n  }\n  // strict range: integer indices of the bars in the visible range rounded in more wide direction\n  _internal_visibleStrictRange() {\n    this._private__updateVisibleRange();\n    return this._private__visibleRange._internal_strictRange();\n  }\n  _internal_visibleLogicalRange() {\n    this._private__updateVisibleRange();\n    return this._private__visibleRange._internal_logicalRange();\n  }\n  _internal_visibleTimeRange() {\n    const visibleBars = this._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return null;\n    }\n    const range = {\n      from: visibleBars._internal_left(),\n      to: visibleBars._internal_right()\n    };\n    return this._internal_timeRangeForLogicalRange(range);\n  }\n  _internal_timeRangeForLogicalRange(range) {\n    const from = Math.round(range.from);\n    const to = Math.round(range.to);\n    const firstIndex = ensureNotNull(this._private__firstIndex());\n    const lastIndex = ensureNotNull(this._private__lastIndex());\n    return {\n      from: ensureNotNull(this._internal_indexToTimeScalePoint(Math.max(firstIndex, from))),\n      to: ensureNotNull(this._internal_indexToTimeScalePoint(Math.min(lastIndex, to)))\n    };\n  }\n  _internal_logicalRangeForTimeRange(range) {\n    return {\n      from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n      to: ensureNotNull(this._internal_timeToIndex(range.to, true))\n    };\n  }\n  _internal_width() {\n    return this._private__width;\n  }\n  _internal_setWidth(newWidth) {\n    if (!isFinite(newWidth) || newWidth <= 0) {\n      return;\n    }\n    if (this._private__width === newWidth) {\n      return;\n    }\n    // when we change the width and we need to correct visible range because of fixing left edge\n    // we need to check the previous visible range rather than the new one\n    // because it might be updated by changing width, bar spacing, etc\n    // but we need to try to keep the same range\n    const previousVisibleRange = this._internal_visibleLogicalRange();\n    const oldWidth = this._private__width;\n    this._private__width = newWidth;\n    this._private__visibleRangeInvalidated = true;\n    if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n      // recalculate bar spacing\n      const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n      this._private__barSpacing = newBarSpacing;\n    }\n    // if time scale is scrolled to the end of data and we have fixed right edge\n    // keep left edge instead of right\n    // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n    if (this._private__options.fixLeftEdge) {\n      // note that logical left range means not the middle of a bar (it's the left border)\n      if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n        const delta = oldWidth - newWidth;\n        // reduce  _rightOffset means move right\n        // we could move more than required - this will be fixed by _correctOffset()\n        this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n        this._private__visibleRangeInvalidated = true;\n      }\n    }\n    // updating bar spacing should be first because right offset depends on it\n    this._private__correctBarSpacing();\n    this._private__correctOffset();\n  }\n  _internal_indexToCoordinate(index) {\n    if (this._internal_isEmpty() || !isInteger(index)) {\n      return 0;\n    }\n    const baseIndex = this._internal_baseIndex();\n    const deltaFromRight = baseIndex + this._private__rightOffset - index;\n    const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n    return coordinate;\n  }\n  _internal_indexesToCoordinates(points, visibleRange) {\n    const baseIndex = this._internal_baseIndex();\n    const indexFrom = visibleRange === undefined ? 0 : visibleRange.from;\n    const indexTo = visibleRange === undefined ? points.length : visibleRange.to;\n    for (let i = indexFrom; i < indexTo; i++) {\n      const index = points[i]._internal_time;\n      const deltaFromRight = baseIndex + this._private__rightOffset - index;\n      const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n      points[i]._internal_x = coordinate;\n    }\n  }\n  _internal_coordinateToIndex(x) {\n    return Math.ceil(this._private__coordinateToFloatIndex(x));\n  }\n  _internal_setRightOffset(offset) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__rightOffset = offset;\n    this._private__correctOffset();\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_barSpacing() {\n    return this._private__barSpacing;\n  }\n  _internal_setBarSpacing(newBarSpacing) {\n    this._private__setBarSpacing(newBarSpacing);\n    // do not allow scroll out of visible bars\n    this._private__correctOffset();\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_rightOffset() {\n    return this._private__rightOffset;\n  }\n  // eslint-disable-next-line complexity\n  _internal_marks() {\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    if (this._private__timeMarksCache !== null) {\n      return this._private__timeMarksCache;\n    }\n    const spacing = this._private__barSpacing;\n    const fontSize = this._private__model._internal_options().layout.fontSize;\n    const pixelsPer8Characters = (fontSize + 4) * 5;\n    const pixelsPerCharacter = pixelsPer8Characters / defaultTickMarkMaxCharacterLength;\n    const maxLabelWidth = pixelsPerCharacter * (this._private__options.tickMarkMaxCharacterLength || defaultTickMarkMaxCharacterLength);\n    const indexPerLabel = Math.round(maxLabelWidth / spacing);\n    const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n    const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n    const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n    const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth);\n    // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n    const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n    // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n    const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n    const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n    const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n    const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n    let targetIndex = 0;\n    for (const tm of items) {\n      if (!(firstBar <= tm.index && tm.index <= lastBar)) {\n        continue;\n      }\n      let label;\n      if (targetIndex < this._private__labels.length) {\n        label = this._private__labels[targetIndex];\n        label.coord = this._internal_indexToCoordinate(tm.index);\n        label.label = this._private__formatLabel(tm);\n        label.weight = tm.weight;\n      } else {\n        label = {\n          needAlignCoordinate: false,\n          coord: this._internal_indexToCoordinate(tm.index),\n          label: this._private__formatLabel(tm),\n          weight: tm.weight\n        };\n        this._private__labels.push(label);\n      }\n      if (this._private__barSpacing > maxLabelWidth / 2 && !isAllScalingAndScrollingDisabled) {\n        // if there is enough space then let's show all tick marks as usual\n        label.needAlignCoordinate = false;\n      } else {\n        // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n        // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n        label.needAlignCoordinate = isLeftEdgeFixed && tm.index <= earliestIndexOfSecondLabel || isRightEdgeFixed && tm.index >= indexOfSecondLastLabel;\n      }\n      targetIndex++;\n    }\n    this._private__labels.length = targetIndex;\n    this._private__timeMarksCache = this._private__labels;\n    return this._private__labels;\n  }\n  _internal_restoreDefault() {\n    this._private__visibleRangeInvalidated = true;\n    this._internal_setBarSpacing(this._private__options.barSpacing);\n    this._internal_setRightOffset(this._private__options.rightOffset);\n  }\n  _internal_setBaseIndex(baseIndex) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__baseIndexOrNull = baseIndex;\n    this._private__correctOffset();\n    this._private__doFixLeftEdge();\n  }\n  /**\n   * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n   *\n   * @param zoomPoint - X coordinate of the point to apply the zoom.\n   * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n   * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n   * Negative value means zoom out, positive - zoom in.\n   */\n  _internal_zoom(zoomPoint, scale) {\n    const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n    const barSpacing = this._internal_barSpacing();\n    const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n    // zoom in/out bar spacing\n    this._internal_setBarSpacing(newBarSpacing);\n    if (!this._private__options.rightBarStaysOnScroll) {\n      // and then correct right offset to move index under zoomPoint back to its coordinate\n      this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n    }\n  }\n  _internal_startScale(x) {\n    if (this._private__scrollStartPoint) {\n      this._internal_endScroll();\n    }\n    if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scaleStartPoint = x;\n    this._private__saveCommonTransitionsStartState();\n  }\n  _internal_scaleTo(x) {\n    if (this._private__commonTransitionStartState === null) {\n      return;\n    }\n    const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n    const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n    if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n      return;\n    }\n    this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n  }\n  _internal_endScale() {\n    if (this._private__scaleStartPoint === null) {\n      return;\n    }\n    this._private__scaleStartPoint = null;\n    this._private__clearCommonTransitionsStartState();\n  }\n  _internal_startScroll(x) {\n    if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scrollStartPoint = x;\n    this._private__saveCommonTransitionsStartState();\n  }\n  _internal_scrollTo(x) {\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n    this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n    this._private__visibleRangeInvalidated = true;\n    // do not allow scroll out of visible bars\n    this._private__correctOffset();\n  }\n  _internal_endScroll() {\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    this._private__scrollStartPoint = null;\n    this._private__clearCommonTransitionsStartState();\n  }\n  _internal_scrollToRealTime() {\n    this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n  }\n  _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n    if (!isFinite(offset)) {\n      throw new RangeError('offset is required and must be finite number');\n    }\n    if (!isFinite(animationDuration) || animationDuration <= 0) {\n      throw new RangeError('animationDuration (optional) must be finite positive number');\n    }\n    const source = this._private__rightOffset;\n    const animationStart = performance.now();\n    this._private__model._internal_setTimeScaleAnimation({\n      _internal_finished: time => (time - animationStart) / animationDuration >= 1,\n      _internal_getPosition: time => {\n        const animationProgress = (time - animationStart) / animationDuration;\n        const finishAnimation = animationProgress >= 1;\n        return finishAnimation ? offset : source + (offset - source) * animationProgress;\n      }\n    });\n  }\n  _internal_update(newPoints, firstChangedPointIndex) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__points = newPoints;\n    this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n    this._private__correctOffset();\n  }\n  _internal_visibleBarsChanged() {\n    return this._private__visibleBarsChanged;\n  }\n  _internal_logicalRangeChanged() {\n    return this._private__logicalRangeChanged;\n  }\n  _internal_optionsApplied() {\n    return this._private__optionsApplied;\n  }\n  _internal_baseIndex() {\n    // null is used to known that baseIndex is not set yet\n    // so in methods which should known whether it is set or not\n    // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n    // see minRightOffset for example\n    return this._private__baseIndexOrNull || 0;\n  }\n  _internal_setVisibleRange(range) {\n    const length = range._internal_count();\n    this._private__setBarSpacing(this._private__width / length);\n    this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n    this._private__correctOffset();\n    this._private__visibleRangeInvalidated = true;\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_fitContent() {\n    const first = this._private__firstIndex();\n    const last = this._private__lastIndex();\n    if (first === null || last === null) {\n      return;\n    }\n    this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n  }\n  _internal_setLogicalRange(range) {\n    const barRange = new RangeImpl(range.from, range.to);\n    this._internal_setVisibleRange(barRange);\n  }\n  _internal_formatDateTime(timeScalePoint) {\n    if (this._private__localizationOptions.timeFormatter !== undefined) {\n      return this._private__localizationOptions.timeFormatter(timeScalePoint.originalTime);\n    }\n    return this._private__horzScaleBehavior.formatHorzItem(timeScalePoint.time);\n  }\n  _private__isAllScalingAndScrollingDisabled() {\n    const {\n      handleScroll,\n      handleScale\n    } = this._private__model._internal_options();\n    return !handleScroll.horzTouchDrag && !handleScroll.mouseWheel && !handleScroll.pressedMouseMove && !handleScroll.vertTouchDrag && !handleScale.axisDoubleClickReset.time && !handleScale.axisPressedMouseMove.time && !handleScale.mouseWheel && !handleScale.pinch;\n  }\n  _private__firstIndex() {\n    return this._private__points.length === 0 ? null : 0;\n  }\n  _private__lastIndex() {\n    return this._private__points.length === 0 ? null : this._private__points.length - 1;\n  }\n  _private__rightOffsetForCoordinate(x) {\n    return (this._private__width - 1 - x) / this._private__barSpacing;\n  }\n  _private__coordinateToFloatIndex(x) {\n    const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n    const baseIndex = this._internal_baseIndex();\n    const index = baseIndex + this._private__rightOffset - deltaFromRight;\n    // JavaScript uses very strange rounding\n    // we need rounding to avoid problems with calculation errors\n    return Math.round(index * 1000000) / 1000000;\n  }\n  _private__setBarSpacing(newBarSpacing) {\n    const oldBarSpacing = this._private__barSpacing;\n    this._private__barSpacing = newBarSpacing;\n    this._private__correctBarSpacing();\n    // this._barSpacing might be changed in _correctBarSpacing\n    if (oldBarSpacing !== this._private__barSpacing) {\n      this._private__visibleRangeInvalidated = true;\n      this._private__resetTimeMarksCache();\n    }\n  }\n  _private__updateVisibleRange() {\n    if (!this._private__visibleRangeInvalidated) {\n      return;\n    }\n    this._private__visibleRangeInvalidated = false;\n    if (this._internal_isEmpty()) {\n      this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n      return;\n    }\n    const baseIndex = this._internal_baseIndex();\n    const newBarsLength = this._private__width / this._private__barSpacing;\n    const rightBorder = this._private__rightOffset + baseIndex;\n    const leftBorder = rightBorder - newBarsLength + 1;\n    const logicalRange = new RangeImpl(leftBorder, rightBorder);\n    this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n  }\n  _private__correctBarSpacing() {\n    const minBarSpacing = this._private__minBarSpacing();\n    if (this._private__barSpacing < minBarSpacing) {\n      this._private__barSpacing = minBarSpacing;\n      this._private__visibleRangeInvalidated = true;\n    }\n    if (this._private__width !== 0) {\n      // make sure that this (1 / Constants.MinVisibleBarsCount) >= coeff in max bar spacing (it's 0.5 here)\n      const maxBarSpacing = this._private__width * 0.5;\n      if (this._private__barSpacing > maxBarSpacing) {\n        this._private__barSpacing = maxBarSpacing;\n        this._private__visibleRangeInvalidated = true;\n      }\n    }\n  }\n  _private__minBarSpacing() {\n    // if both options are enabled then limit bar spacing so that zooming-out is not possible\n    // if it would cause either the first or last points to move too far from an edge\n    if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n      return this._private__width / this._private__points.length;\n    }\n    return this._private__options.minBarSpacing;\n  }\n  _private__correctOffset() {\n    // block scrolling of to future\n    const maxRightOffset = this._private__maxRightOffset();\n    if (this._private__rightOffset > maxRightOffset) {\n      this._private__rightOffset = maxRightOffset;\n      this._private__visibleRangeInvalidated = true;\n    }\n    // block scrolling of to past\n    const minRightOffset = this._private__minRightOffset();\n    if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n      this._private__rightOffset = minRightOffset;\n      this._private__visibleRangeInvalidated = true;\n    }\n  }\n  _private__minRightOffset() {\n    const firstIndex = this._private__firstIndex();\n    const baseIndex = this._private__baseIndexOrNull;\n    if (firstIndex === null || baseIndex === null) {\n      return null;\n    }\n    const barsEstimation = this._private__options.fixLeftEdge ? this._private__width / this._private__barSpacing : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    return firstIndex - baseIndex - 1 + barsEstimation;\n  }\n  _private__maxRightOffset() {\n    return this._private__options.fixRightEdge ? 0 : this._private__width / this._private__barSpacing - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n  }\n  _private__saveCommonTransitionsStartState() {\n    this._private__commonTransitionStartState = {\n      _internal_barSpacing: this._internal_barSpacing(),\n      _internal_rightOffset: this._internal_rightOffset()\n    };\n  }\n  _private__clearCommonTransitionsStartState() {\n    this._private__commonTransitionStartState = null;\n  }\n  _private__formatLabel(tickMark) {\n    let formatter = this._private__formattedByWeight.get(tickMark.weight);\n    if (formatter === undefined) {\n      formatter = new FormattedLabelsCache(mark => {\n        return this._private__formatLabelImpl(mark);\n      }, this._private__horzScaleBehavior);\n      this._private__formattedByWeight.set(tickMark.weight, formatter);\n    }\n    return formatter._internal_format(tickMark);\n  }\n  _private__formatLabelImpl(tickMark) {\n    return this._private__horzScaleBehavior.formatTickmark(tickMark, this._private__localizationOptions);\n  }\n  _private__setVisibleRange(newVisibleRange) {\n    const oldVisibleRange = this._private__visibleRange;\n    this._private__visibleRange = newVisibleRange;\n    if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n      this._private__visibleBarsChanged._internal_fire();\n    }\n    if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n      this._private__logicalRangeChanged._internal_fire();\n    }\n    // TODO: reset only coords in case when this._visibleBars has not been changed\n    this._private__resetTimeMarksCache();\n  }\n  _private__resetTimeMarksCache() {\n    this._private__timeMarksCache = null;\n  }\n  _private__invalidateTickMarks() {\n    this._private__resetTimeMarksCache();\n    this._private__formattedByWeight.clear();\n  }\n  _private__updateDateTimeFormatter() {\n    this._private__horzScaleBehavior.updateFormatter(this._private__localizationOptions);\n  }\n  _private__doFixLeftEdge() {\n    if (!this._private__options.fixLeftEdge) {\n      return;\n    }\n    const firstIndex = this._private__firstIndex();\n    if (firstIndex === null) {\n      return;\n    }\n    const visibleRange = this._internal_visibleStrictRange();\n    if (visibleRange === null) {\n      return;\n    }\n    const delta = visibleRange._internal_left() - firstIndex;\n    if (delta < 0) {\n      const leftEdgeOffset = this._private__rightOffset - delta - 1;\n      this._internal_setRightOffset(leftEdgeOffset);\n    }\n    this._private__correctBarSpacing();\n  }\n  _private__doFixRightEdge() {\n    this._private__correctOffset();\n    this._private__correctBarSpacing();\n  }\n}\nclass WatermarkRenderer extends MediaCoordinatesPaneRenderer {\n  constructor(data) {\n    super();\n    this._private__metricsCache = new Map();\n    this._private__data = data;\n  }\n  _internal__drawImpl(renderingScope) {}\n  _internal__drawBackgroundImpl(renderingScope) {\n    if (!this._private__data._internal_visible) {\n      return;\n    }\n    const {\n      context: ctx,\n      mediaSize\n    } = renderingScope;\n    let textHeight = 0;\n    for (const line of this._private__data._internal_lines) {\n      if (line._internal_text.length === 0) {\n        continue;\n      }\n      ctx.font = line._internal_font;\n      const textWidth = this._private__metrics(ctx, line._internal_text);\n      if (textWidth > mediaSize.width) {\n        line._internal_zoom = mediaSize.width / textWidth;\n      } else {\n        line._internal_zoom = 1;\n      }\n      textHeight += line._internal_lineHeight * line._internal_zoom;\n    }\n    let vertOffset = 0;\n    switch (this._private__data._internal_vertAlign) {\n      case 'top':\n        vertOffset = 0;\n        break;\n      case 'center':\n        vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n        break;\n      case 'bottom':\n        vertOffset = Math.max(mediaSize.height - textHeight, 0);\n        break;\n    }\n    ctx.fillStyle = this._private__data._internal_color;\n    for (const line of this._private__data._internal_lines) {\n      ctx.save();\n      let horzOffset = 0;\n      switch (this._private__data._internal_horzAlign) {\n        case 'left':\n          ctx.textAlign = 'left';\n          horzOffset = line._internal_lineHeight / 2;\n          break;\n        case 'center':\n          ctx.textAlign = 'center';\n          horzOffset = mediaSize.width / 2;\n          break;\n        case 'right':\n          ctx.textAlign = 'right';\n          horzOffset = mediaSize.width - 1 - line._internal_lineHeight / 2;\n          break;\n      }\n      ctx.translate(horzOffset, vertOffset);\n      ctx.textBaseline = 'top';\n      ctx.font = line._internal_font;\n      ctx.scale(line._internal_zoom, line._internal_zoom);\n      ctx.fillText(line._internal_text, 0, line._internal_vertOffset);\n      ctx.restore();\n      vertOffset += line._internal_lineHeight * line._internal_zoom;\n    }\n  }\n  _private__metrics(ctx, text) {\n    const fontCache = this._private__fontCache(ctx.font);\n    let result = fontCache.get(text);\n    if (result === undefined) {\n      result = ctx.measureText(text).width;\n      fontCache.set(text, result);\n    }\n    return result;\n  }\n  _private__fontCache(font) {\n    let fontCache = this._private__metricsCache.get(font);\n    if (fontCache === undefined) {\n      fontCache = new Map();\n      this._private__metricsCache.set(font, fontCache);\n    }\n    return fontCache;\n  }\n}\nclass WatermarkPaneView {\n  constructor(source) {\n    this._private__invalidated = true;\n    this._private__rendererData = {\n      _internal_visible: false,\n      _internal_color: '',\n      _internal_lines: [],\n      _internal_vertAlign: 'center',\n      _internal_horzAlign: 'center'\n    };\n    this._private__renderer = new WatermarkRenderer(this._private__rendererData);\n    this._private__source = source;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const options = this._private__source._internal_options();\n    const data = this._private__rendererData;\n    data._internal_visible = options.visible;\n    if (!data._internal_visible) {\n      return;\n    }\n    data._internal_color = options.color;\n    data._internal_horzAlign = options.horzAlign;\n    data._internal_vertAlign = options.vertAlign;\n    data._internal_lines = [{\n      _internal_text: options.text,\n      _internal_font: makeFont(options.fontSize, options.fontFamily, options.fontStyle),\n      _internal_lineHeight: options.fontSize * 1.2,\n      _internal_vertOffset: 0,\n      _internal_zoom: 0\n    }];\n  }\n}\nclass Watermark extends DataSource {\n  constructor(model, options) {\n    super();\n    this._private__options = options;\n    this._private__paneView = new WatermarkPaneView(this);\n  }\n  _internal_priceAxisViews() {\n    return [];\n  }\n  _internal_paneViews() {\n    return [this._private__paneView];\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_updateAllViews() {\n    this._private__paneView._internal_update();\n  }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n  /**\n   * Tracking Mode will be deactivated on touch end event.\n   */\n  TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n  /**\n   * Tracking Mode will be deactivated on the next tap event.\n   */\n  TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nclass ChartModel {\n  constructor(invalidateHandler, options, horzScaleBehavior) {\n    this._private__panes = [];\n    this._private__serieses = [];\n    this._private__width = 0;\n    this._private__hoveredSource = null;\n    this._private__priceScalesOptionsChanged = new Delegate();\n    this._private__crosshairMoved = new Delegate();\n    this._private__gradientColorsCache = null;\n    this._private__invalidateHandler = invalidateHandler;\n    this._private__options = options;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n    this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization, horzScaleBehavior);\n    this._private__crosshair = new Crosshair(this, options.crosshair);\n    this._private__magnet = new Magnet(options.crosshair);\n    this._private__watermark = new Watermark(this, options.watermark);\n    this._internal_createPane();\n    this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n    this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n    this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n  }\n  _internal_fullUpdate() {\n    this._private__invalidate(InvalidateMask._internal_full());\n  }\n  _internal_lightUpdate() {\n    this._private__invalidate(InvalidateMask._internal_light());\n  }\n  _internal_cursorUpdate() {\n    this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n  }\n  _internal_updateSource(source) {\n    const inv = this._private__invalidationMaskForSource(source);\n    this._private__invalidate(inv);\n  }\n  _internal_hoveredSource() {\n    return this._private__hoveredSource;\n  }\n  _internal_setHoveredSource(source) {\n    const prevSource = this._private__hoveredSource;\n    this._private__hoveredSource = source;\n    if (prevSource !== null) {\n      this._internal_updateSource(prevSource._internal_source);\n    }\n    if (source !== null) {\n      this._internal_updateSource(source._internal_source);\n    }\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._private__panes.forEach(p => p._internal_applyScaleOptions(options));\n    if (options.timeScale !== undefined) {\n      this._private__timeScale._internal_applyOptions(options.timeScale);\n    }\n    if (options.localization !== undefined) {\n      this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n    }\n    if (options.leftPriceScale || options.rightPriceScale) {\n      this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n    this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    this._internal_fullUpdate();\n  }\n  _internal_applyPriceScaleOptions(priceScaleId, options) {\n    if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n      this._internal_applyOptions({\n        leftPriceScale: options\n      });\n      return;\n    } else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n      this._internal_applyOptions({\n        rightPriceScale: options\n      });\n      return;\n    }\n    const res = this._internal_findPriceScale(priceScaleId);\n    if (res === null) {\n      {\n        throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n      }\n    }\n    res._internal_priceScale._internal_applyOptions(options);\n    this._private__priceScalesOptionsChanged._internal_fire();\n  }\n  _internal_findPriceScale(priceScaleId) {\n    for (const pane of this._private__panes) {\n      const priceScale = pane._internal_priceScaleById(priceScaleId);\n      if (priceScale !== null) {\n        return {\n          _internal_pane: pane,\n          _internal_priceScale: priceScale\n        };\n      }\n    }\n    return null;\n  }\n  _internal_timeScale() {\n    return this._private__timeScale;\n  }\n  _internal_panes() {\n    return this._private__panes;\n  }\n  _internal_watermarkSource() {\n    return this._private__watermark;\n  }\n  _internal_crosshairSource() {\n    return this._private__crosshair;\n  }\n  _internal_crosshairMoved() {\n    return this._private__crosshairMoved;\n  }\n  _internal_setPaneHeight(pane, height) {\n    pane._internal_setHeight(height);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_setWidth(width) {\n    this._private__width = width;\n    this._private__timeScale._internal_setWidth(this._private__width);\n    this._private__panes.forEach(pane => pane._internal_setWidth(width));\n    this._internal_recalculateAllPanes();\n  }\n  _internal_createPane(index) {\n    const pane = new Pane(this._private__timeScale, this);\n    if (index !== undefined) {\n      this._private__panes.splice(index, 0, pane);\n    } else {\n      // adding to the end - common case\n      this._private__panes.push(pane);\n    }\n    const actualIndex = index === undefined ? this._private__panes.length - 1 : index;\n    // we always do autoscaling on the creation\n    // if autoscale option is true, it is ok, just recalculate by invalidation mask\n    // if autoscale option is false, autoscale anyway on the first draw\n    // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n    const mask = InvalidateMask._internal_full();\n    mask._internal_invalidatePane(actualIndex, {\n      _internal_level: 0 /* InvalidationLevel.None */,\n      _internal_autoScale: true\n    });\n    this._private__invalidate(mask);\n    return pane;\n  }\n  _internal_startScalePrice(pane, priceScale, x) {\n    pane._internal_startScalePrice(priceScale, x);\n  }\n  _internal_scalePriceTo(pane, priceScale, x) {\n    pane._internal_scalePriceTo(priceScale, x);\n    this._internal_updateCrosshair();\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_endScalePrice(pane, priceScale) {\n    pane._internal_endScalePrice(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_startScrollPrice(pane, priceScale, x) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_startScrollPrice(priceScale, x);\n  }\n  _internal_scrollPriceTo(pane, priceScale, x) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_scrollPriceTo(priceScale, x);\n    this._internal_updateCrosshair();\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_endScrollPrice(pane, priceScale) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_endScrollPrice(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_resetPriceScale(pane, priceScale) {\n    pane._internal_resetPriceScale(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_startScaleTime(position) {\n    this._private__timeScale._internal_startScale(position);\n  }\n  /**\n   * Zoom in/out the chart (depends on scale value).\n   *\n   * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n   * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n   */\n  _internal_zoomTime(pointX, scale) {\n    const timeScale = this._internal_timeScale();\n    if (timeScale._internal_isEmpty() || scale === 0) {\n      return;\n    }\n    const timeScaleWidth = timeScale._internal_width();\n    pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n    timeScale._internal_zoom(pointX, scale);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_scrollChart(x) {\n    this._internal_startScrollTime(0);\n    this._internal_scrollTimeTo(x);\n    this._internal_endScrollTime();\n  }\n  _internal_scaleTimeTo(x) {\n    this._private__timeScale._internal_scaleTo(x);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_endScaleTime() {\n    this._private__timeScale._internal_endScale();\n    this._internal_lightUpdate();\n  }\n  _internal_startScrollTime(x) {\n    this._private__timeScale._internal_startScroll(x);\n  }\n  _internal_scrollTimeTo(x) {\n    this._private__timeScale._internal_scrollTo(x);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_endScrollTime() {\n    this._private__timeScale._internal_endScroll();\n    this._internal_lightUpdate();\n  }\n  _internal_serieses() {\n    return this._private__serieses;\n  }\n  _internal_setAndSaveCurrentPosition(x, y, event, pane, skipEvent) {\n    this._private__crosshair._internal_saveOriginCoord(x, y);\n    let price = NaN;\n    let index = this._private__timeScale._internal_coordinateToIndex(x);\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    if (visibleBars !== null) {\n      index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n    }\n    const priceScale = pane._internal_defaultPriceScale();\n    const firstValue = priceScale._internal_firstValue();\n    if (firstValue !== null) {\n      price = priceScale._internal_coordinateToPrice(y, firstValue);\n    }\n    price = this._private__magnet._internal_align(price, index, pane);\n    this._private__crosshair._internal_setPosition(index, price, pane);\n    this._internal_cursorUpdate();\n    if (!skipEvent) {\n      this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), {\n        x,\n        y\n      }, event);\n    }\n  }\n  // A position provided external (not from an internal event listener)\n  _internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane) {\n    const priceScale = pane._internal_defaultPriceScale();\n    const firstValue = priceScale._internal_firstValue();\n    const y = priceScale._internal_priceToCoordinate(price, ensureNotNull(firstValue));\n    const index = this._private__timeScale._internal_timeToIndex(horizontalPosition, true);\n    const x = this._private__timeScale._internal_indexToCoordinate(ensureNotNull(index));\n    this._internal_setAndSaveCurrentPosition(x, y, null, pane, true);\n  }\n  _internal_clearCurrentPosition(skipEvent) {\n    const crosshair = this._internal_crosshairSource();\n    crosshair._internal_clearPosition();\n    this._internal_cursorUpdate();\n    if (!skipEvent) {\n      this._private__crosshairMoved._internal_fire(null, null, null);\n    }\n  }\n  _internal_updateCrosshair() {\n    // apply magnet\n    const pane = this._private__crosshair._internal_pane();\n    if (pane !== null) {\n      const x = this._private__crosshair._internal_originCoordX();\n      const y = this._private__crosshair._internal_originCoordY();\n      this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n    }\n    this._private__crosshair._internal_updateAllViews();\n  }\n  _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n    const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n    if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n      this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n    }\n    const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n    const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n    // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n    // (and actually we cannot)\n    if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n      const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n      const isLeftBarShiftToLeft = this._private__horzScaleBehavior.key(oldFirstTime) > this._private__horzScaleBehavior.key(newFirstTime);\n      const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n      const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n      const allowShiftWhenReplacingWhitespace = this._private__timeScale._internal_options().allowShiftVisibleRangeOnWhitespaceReplacement;\n      const replacedExistingWhitespace = firstChangedPointIndex === undefined;\n      const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && (!replacedExistingWhitespace || allowShiftWhenReplacingWhitespace) && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n      if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n        const compensationShift = newBaseIndex - currentBaseIndex;\n        this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n      }\n    }\n    this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n  }\n  _internal_recalculatePane(pane) {\n    if (pane !== null) {\n      pane._internal_recalculate();\n    }\n  }\n  _internal_paneForSource(source) {\n    const pane = this._private__panes.find(p => p._internal_orderedSources().includes(source));\n    return pane === undefined ? null : pane;\n  }\n  _internal_recalculateAllPanes() {\n    this._private__watermark._internal_updateAllViews();\n    this._private__panes.forEach(p => p._internal_recalculate());\n    this._internal_updateCrosshair();\n  }\n  _internal_destroy() {\n    this._private__panes.forEach(p => p._internal_destroy());\n    this._private__panes.length = 0;\n    // to avoid memleaks\n    this._private__options.localization.priceFormatter = undefined;\n    this._private__options.localization.percentageFormatter = undefined;\n    this._private__options.localization.timeFormatter = undefined;\n  }\n  _internal_rendererOptionsProvider() {\n    return this._private__rendererOptionsProvider;\n  }\n  _internal_priceAxisRendererOptions() {\n    return this._private__rendererOptionsProvider._internal_options();\n  }\n  _internal_priceScalesOptionsChanged() {\n    return this._private__priceScalesOptionsChanged;\n  }\n  _internal_createSeries(seriesType, options, customPaneView) {\n    const pane = this._private__panes[0];\n    const series = this._private__createSeries(options, seriesType, pane, customPaneView);\n    this._private__serieses.push(series);\n    if (this._private__serieses.length === 1) {\n      // call fullUpdate to recalculate chart's parts geometry\n      this._internal_fullUpdate();\n    } else {\n      this._internal_lightUpdate();\n    }\n    return series;\n  }\n  _internal_removeSeries(series) {\n    const pane = this._internal_paneForSource(series);\n    const seriesIndex = this._private__serieses.indexOf(series);\n    assert(seriesIndex !== -1, 'Series not found');\n    this._private__serieses.splice(seriesIndex, 1);\n    ensureNotNull(pane)._internal_removeDataSource(series);\n    if (series._internal_destroy) {\n      series._internal_destroy();\n    }\n  }\n  _internal_moveSeriesToScale(series, targetScaleId) {\n    const pane = ensureNotNull(this._internal_paneForSource(series));\n    pane._internal_removeDataSource(series);\n    // check if targetScaleId exists\n    const target = this._internal_findPriceScale(targetScaleId);\n    if (target === null) {\n      // new scale on the same pane\n      const zOrder = series._internal_zorder();\n      pane._internal_addDataSource(series, targetScaleId, zOrder);\n    } else {\n      // if move to the new scale of the same pane, keep zorder\n      // if move to new pane\n      const zOrder = target._internal_pane === pane ? series._internal_zorder() : undefined;\n      target._internal_pane._internal_addDataSource(series, targetScaleId, zOrder);\n    }\n  }\n  _internal_fitContent() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setFitContent();\n    this._private__invalidate(mask);\n  }\n  _internal_setTargetLogicalRange(range) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_applyRange(range);\n    this._private__invalidate(mask);\n  }\n  _internal_resetTimeScale() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_resetTimeScale();\n    this._private__invalidate(mask);\n  }\n  _internal_setBarSpacing(spacing) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setBarSpacing(spacing);\n    this._private__invalidate(mask);\n  }\n  _internal_setRightOffset(offset) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setRightOffset(offset);\n    this._private__invalidate(mask);\n  }\n  _internal_setTimeScaleAnimation(animation) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setTimeScaleAnimation(animation);\n    this._private__invalidate(mask);\n  }\n  _internal_stopTimeScaleAnimation() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_stopTimeScaleAnimation();\n    this._private__invalidate(mask);\n  }\n  _internal_defaultVisiblePriceScaleId() {\n    return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n  }\n  _internal_backgroundBottomColor() {\n    return this._private__backgroundBottomColor;\n  }\n  _internal_backgroundTopColor() {\n    return this._private__backgroundTopColor;\n  }\n  _internal_backgroundColorAtYPercentFromTop(percent) {\n    const bottomColor = this._private__backgroundBottomColor;\n    const topColor = this._private__backgroundTopColor;\n    if (bottomColor === topColor) {\n      // solid background\n      return bottomColor;\n    }\n    // gradient background\n    // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n    percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n    if (this._private__gradientColorsCache === null || this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n      this._private__gradientColorsCache = {\n        _internal_topColor: topColor,\n        _internal_bottomColor: bottomColor,\n        _internal_colors: new Map()\n      };\n    } else {\n      const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n      if (cachedValue !== undefined) {\n        return cachedValue;\n      }\n    }\n    const result = gradientColorAtPercent(topColor, bottomColor, percent / 100);\n    this._private__gradientColorsCache._internal_colors.set(percent, result);\n    return result;\n  }\n  _private__paneInvalidationMask(pane, level) {\n    const inv = new InvalidateMask(level);\n    if (pane !== null) {\n      const index = this._private__panes.indexOf(pane);\n      inv._internal_invalidatePane(index, {\n        _internal_level: level\n      });\n    }\n    return inv;\n  }\n  _private__invalidationMaskForSource(source, invalidateType) {\n    if (invalidateType === undefined) {\n      invalidateType = 2 /* InvalidationLevel.Light */;\n    }\n    return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n  }\n  _private__invalidate(mask) {\n    if (this._private__invalidateHandler) {\n      this._private__invalidateHandler(mask);\n    }\n    this._private__panes.forEach(pane => pane._internal_grid()._internal_paneView()._internal_update());\n  }\n  _private__createSeries(options, seriesType, pane, customPaneView) {\n    const series = new Series(this, options, seriesType, pane, customPaneView);\n    const targetScaleId = options.priceScaleId !== undefined ? options.priceScaleId : this._internal_defaultVisiblePriceScaleId();\n    pane._internal_addDataSource(series, targetScaleId);\n    if (!isDefaultPriceScale(targetScaleId)) {\n      // let's apply that options again to apply margins\n      series._internal_applyOptions(options);\n    }\n    return series;\n  }\n  _private__getBackgroundColor(side) {\n    const layoutOptions = this._private__options.layout;\n    if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n      return side === 0 /* BackgroundColorSide.Top */ ? layoutOptions.background.topColor : layoutOptions.background.bottomColor;\n    }\n    return layoutOptions.background.color;\n  }\n}\nfunction fillUpDownCandlesticksColors(options) {\n  if (options.borderColor !== undefined) {\n    options.borderUpColor = options.borderColor;\n    options.borderDownColor = options.borderColor;\n  }\n  if (options.wickColor !== undefined) {\n    options.wickUpColor = options.wickColor;\n    options.wickDownColor = options.wickColor;\n  }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n  /**\n   * Animation is always disabled\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n  /**\n   * Animation is always enabled.\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n  /**\n   * Animation is active after new data.\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n  if (minMove >= 1) {\n    return 0;\n  }\n  let i = 0;\n  for (; i < 8; i++) {\n    const intPart = Math.round(minMove);\n    const fractPart = Math.abs(intPart - minMove);\n    if (fractPart < 1e-8) {\n      return i;\n    }\n    minMove = minMove * 10;\n  }\n  return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n  /**\n   * Use the last bar data.\n   */\n  PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n  /**\n   * Use the last visible data of the chart viewport.\n   */\n  PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n  /** Solid color */\n  ColorType[\"Solid\"] = \"solid\";\n  /** Vertical gradient color */\n  ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n  return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n  return isNumber(time);\n}\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n  /**\n   * The start of the year (e.g. it's the first tick mark in a year).\n   */\n  TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n  /**\n   * The start of the month (e.g. it's the first tick mark in a month).\n   */\n  TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n  /**\n   * A day of the month.\n   */\n  TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n  /**\n   * A time without seconds.\n   */\n  TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n  /**\n   * A time with seconds.\n   */\n  TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\nconst getMonth = date => date.getUTCMonth() + 1;\nconst getDay = date => date.getUTCDate();\nconst getYear = date => date.getUTCFullYear();\nconst dd = date => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1).toLocaleString(locale, {\n  month: 'long'\n});\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1).toLocaleString(locale, {\n  month: 'short'\n});\nconst MM = date => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = date => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = date => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n  return format.replace(/yyyy/g, yyyy(date)).replace(/yy/g, yy(date)).replace(/MMMM/g, MMMM(date, locale)).replace(/MMM/g, MMM(date, locale)).replace(/MM/g, MM(date)).replace(/dd/g, dd(date));\n}\nclass DateFormatter {\n  constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n    this._private__dateFormat = dateFormat;\n    this._private__locale = locale;\n  }\n  _internal_format(date) {\n    return formatDate(date, this._private__dateFormat, this._private__locale);\n  }\n}\nclass TimeFormatter {\n  constructor(format) {\n    this._private__formatStr = format || '%h:%m:%s';\n  }\n  _internal_format(date) {\n    return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n  }\n}\nconst defaultParams = {\n  _internal_dateFormat: 'yyyy-MM-dd',\n  _internal_timeFormat: '%h:%m:%s',\n  _internal_dateTimeSeparator: ' ',\n  _internal_locale: 'default'\n};\nclass DateTimeFormatter {\n  constructor(params = {}) {\n    const formatterParams = Object.assign(Object.assign({}, defaultParams), params);\n    this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n    this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n    this._private__separator = formatterParams._internal_dateTimeSeparator;\n  }\n  _internal_format(dateTime) {\n    return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n  }\n}\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n  const formatOptions = {};\n  switch (tickMarkType) {\n    case 0 /* TickMarkType.Year */:\n      formatOptions.year = 'numeric';\n      break;\n    case 1 /* TickMarkType.Month */:\n      formatOptions.month = 'short';\n      break;\n    case 2 /* TickMarkType.DayOfMonth */:\n      formatOptions.day = 'numeric';\n      break;\n    case 3 /* TickMarkType.Time */:\n      formatOptions.hour12 = false;\n      formatOptions.hour = '2-digit';\n      formatOptions.minute = '2-digit';\n      break;\n    case 4 /* TickMarkType.TimeWithSeconds */:\n      formatOptions.hour12 = false;\n      formatOptions.hour = '2-digit';\n      formatOptions.minute = '2-digit';\n      formatOptions.second = '2-digit';\n      break;\n  }\n  const date = timePoint._internal_businessDay === undefined ? new Date(timePoint._internal_timestamp * 1000) : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n  // from given date we should use only as UTC date or timestamp\n  // but to format as locale date we can convert UTC date to local date\n  const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\nfunction hours(count) {\n  return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n  return count * 60 * 1000;\n}\nfunction seconds(count) {\n  return count * 1000;\n}\nconst intradayWeightDivisors = [{\n  _internal_divisor: seconds(1),\n  _internal_weight: 10 /* TickMarkWeight.Second */\n}, {\n  _internal_divisor: minutes(1),\n  _internal_weight: 20 /* TickMarkWeight.Minute1 */\n}, {\n  _internal_divisor: minutes(5),\n  _internal_weight: 21 /* TickMarkWeight.Minute5 */\n}, {\n  _internal_divisor: minutes(30),\n  _internal_weight: 22 /* TickMarkWeight.Minute30 */\n}, {\n  _internal_divisor: hours(1),\n  _internal_weight: 30 /* TickMarkWeight.Hour1 */\n}, {\n  _internal_divisor: hours(3),\n  _internal_weight: 31 /* TickMarkWeight.Hour3 */\n}, {\n  _internal_divisor: hours(6),\n  _internal_weight: 32 /* TickMarkWeight.Hour6 */\n}, {\n  _internal_divisor: hours(12),\n  _internal_weight: 33 /* TickMarkWeight.Hour12 */\n}];\nfunction weightByTime(currentDate, prevDate) {\n  if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n    return 70 /* TickMarkWeight.Year */;\n  } else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n    return 60 /* TickMarkWeight.Month */;\n  } else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n    return 50 /* TickMarkWeight.Day */;\n  }\n  for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n    if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n      return intradayWeightDivisors[i]._internal_weight;\n    }\n  }\n  return 0 /* TickMarkWeight.LessThanSecond */;\n}\nfunction cast(t) {\n  return t;\n}\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n  if (sortedTimePoints.length === 0) {\n    return;\n  }\n  let prevTime = startIndex === 0 ? null : cast(sortedTimePoints[startIndex - 1].time)._internal_timestamp;\n  let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n  let totalTimeDiff = 0;\n  for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n    const currentPoint = sortedTimePoints[index];\n    const currentDate = new Date(cast(currentPoint.time)._internal_timestamp * 1000);\n    if (prevDate !== null) {\n      currentPoint.timeWeight = weightByTime(currentDate, prevDate);\n    }\n    totalTimeDiff += cast(currentPoint.time)._internal_timestamp - (prevTime || cast(currentPoint.time)._internal_timestamp);\n    prevTime = cast(currentPoint.time)._internal_timestamp;\n    prevDate = currentDate;\n  }\n  if (startIndex === 0 && sortedTimePoints.length > 1) {\n    // let's guess a weight for the first point\n    // let's say the previous point was average time back in the history\n    const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n    const approxPrevDate = new Date((cast(sortedTimePoints[0].time)._internal_timestamp - averageTimeDiff) * 1000);\n    sortedTimePoints[0].timeWeight = weightByTime(new Date(cast(sortedTimePoints[0].time)._internal_timestamp * 1000), approxPrevDate);\n  }\n}\nfunction businessDayConverter(time) {\n  let businessDay = time;\n  if (isString(time)) {\n    businessDay = stringToBusinessDay(time);\n  }\n  if (!isBusinessDay(businessDay)) {\n    throw new Error('time must be of type BusinessDay');\n  }\n  const date = new Date(Date.UTC(businessDay.year, businessDay.month - 1, businessDay.day, 0, 0, 0, 0));\n  return {\n    _internal_timestamp: Math.round(date.getTime() / 1000),\n    _internal_businessDay: businessDay\n  };\n}\nfunction timestampConverter(time) {\n  if (!isUTCTimestamp(time)) {\n    throw new Error('time must be of type isUTCTimestamp');\n  }\n  return {\n    _internal_timestamp: time\n  };\n}\nfunction selectTimeConverter(data) {\n  if (data.length === 0) {\n    return null;\n  }\n  if (isBusinessDay(data[0].time) || isString(data[0].time)) {\n    return businessDayConverter;\n  }\n  return timestampConverter;\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction convertTime(time) {\n  if (isUTCTimestamp(time)) {\n    return timestampConverter(time);\n  }\n  if (!isBusinessDay(time)) {\n    return businessDayConverter(stringToBusinessDay(time));\n  }\n  return businessDayConverter(time);\n}\nfunction stringToBusinessDay(value) {\n  {\n    // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n    // but parses them in 'implementation specific' way\n    // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are 'valid' date strings)\n    // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n    // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n    // but let's do this in development build only because of perf\n    if (!validDateRegex.test(value)) {\n      throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n  }\n  const d = new Date(value);\n  if (isNaN(d.getTime())) {\n    throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n  }\n  return {\n    day: d.getUTCDate(),\n    month: d.getUTCMonth() + 1,\n    year: d.getUTCFullYear()\n  };\n}\nfunction convertStringToBusinessDay(value) {\n  if (isString(value.time)) {\n    value.time = stringToBusinessDay(value.time);\n  }\n}\nfunction convertStringsToBusinessDays(data) {\n  return data.forEach(convertStringToBusinessDay);\n}\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n  switch (weight) {\n    case 0 /* TickMarkWeight.LessThanSecond */:\n    case 10 /* TickMarkWeight.Second */:\n      return timeVisible ? secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n    case 20 /* TickMarkWeight.Minute1 */:\n    case 21 /* TickMarkWeight.Minute5 */:\n    case 22 /* TickMarkWeight.Minute30 */:\n    case 30 /* TickMarkWeight.Hour1 */:\n    case 31 /* TickMarkWeight.Hour3 */:\n    case 32 /* TickMarkWeight.Hour6 */:\n    case 33 /* TickMarkWeight.Hour12 */:\n      return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n    case 50 /* TickMarkWeight.Day */:\n      return 2 /* TickMarkType.DayOfMonth */;\n    case 60 /* TickMarkWeight.Month */:\n      return 1 /* TickMarkType.Month */;\n    case 70 /* TickMarkWeight.Year */:\n      return 0 /* TickMarkType.Year */;\n  }\n}\nclass HorzScaleBehaviorTime {\n  options() {\n    return this._private__options;\n  }\n  setOptions(options) {\n    this._private__options = options;\n    this.updateFormatter(options.localization);\n  }\n  preprocessData(data) {\n    if (Array.isArray(data)) {\n      convertStringsToBusinessDays(data);\n    } else {\n      convertStringToBusinessDay(data);\n    }\n  }\n  createConverterToInternalObj(data) {\n    return ensureNotNull(selectTimeConverter(data));\n  }\n  key(item) {\n    // eslint-disable-next-line no-restricted-syntax\n    if (typeof item === 'object' && \"_internal_timestamp\" in item) {\n      return item._internal_timestamp;\n    } else {\n      return this.key(this.convertHorzItemToInternal(item));\n    }\n  }\n  cacheKey(item) {\n    const time = item;\n    return time._internal_businessDay === undefined ? new Date(time._internal_timestamp * 1000).getTime() : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n  }\n  convertHorzItemToInternal(item) {\n    return convertTime(item);\n  }\n  updateFormatter(options) {\n    if (!this._private__options) {\n      return;\n    }\n    const dateFormat = options.dateFormat;\n    if (this._private__options.timeScale.timeVisible) {\n      this._private__dateTimeFormatter = new DateTimeFormatter({\n        _internal_dateFormat: dateFormat,\n        _internal_timeFormat: this._private__options.timeScale.secondsVisible ? '%h:%m:%s' : '%h:%m',\n        _internal_dateTimeSeparator: '   ',\n        _internal_locale: options.locale\n      });\n    } else {\n      this._private__dateTimeFormatter = new DateFormatter(dateFormat, options.locale);\n    }\n  }\n  formatHorzItem(item) {\n    const tp = item;\n    return this._private__dateTimeFormatter._internal_format(new Date(tp._internal_timestamp * 1000));\n  }\n  formatTickmark(tickMark, localizationOptions) {\n    const tickMarkType = weightToTickMarkType(tickMark.weight, this._private__options.timeScale.timeVisible, this._private__options.timeScale.secondsVisible);\n    const options = this._private__options.timeScale;\n    if (options.tickMarkFormatter !== undefined) {\n      const tickMarkString = options.tickMarkFormatter(tickMark.originalTime, tickMarkType, localizationOptions.locale);\n      if (tickMarkString !== null) {\n        return tickMarkString;\n      }\n    }\n    return defaultTickMarkFormatter(tickMark.time, tickMarkType, localizationOptions.locale);\n  }\n  maxTickMarkWeight(tickMarks) {\n    let maxWeight = tickMarks.reduce(markWithGreaterWeight, tickMarks[0]).weight;\n    // special case: it looks strange if 15:00 is bold but 14:00 is not\n    // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n    if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n      maxWeight = 30 /* TickMarkWeight.Hour1 */;\n    }\n    return maxWeight;\n  }\n  fillWeightsForPoints(sortedTimePoints, startIndex) {\n    fillWeightsForPoints(sortedTimePoints, startIndex);\n  }\n  static _internal_applyDefaults(options) {\n    return merge({\n      localization: {\n        dateFormat: 'dd MMM \\'yy'\n      }\n    }, options !== null && options !== void 0 ? options : {});\n  }\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\nfunction isFF() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  // eslint-disable-next-line deprecation/deprecation\n  return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n  var _a;\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  // more accurate if available\n  if ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.userAgentData) === null || _a === void 0 ? void 0 : _a.platform) {\n    return navigator.userAgentData.platform === 'Windows';\n  }\n  return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  if (!navigator.userAgentData) {\n    return false;\n  }\n  return navigator.userAgentData.brands.some(brand => {\n    return brand.brand.includes('Chromium');\n  });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n  {\n    // eslint-disable-next-line no-console\n    console.warn(msg);\n  }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n  const integerWidth = Math.floor(originalSize.width);\n  const integerHeight = Math.floor(originalSize.height);\n  const width = integerWidth - integerWidth % 2;\n  const height = integerHeight - integerHeight % 2;\n  return size$1({\n    width,\n    height\n  });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n  return originalHeight + originalHeight % 2;\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n  return originalWidth + originalWidth % 2;\n}\nfunction distanceBetweenPoints(pos1, pos2) {\n  return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n  const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n  return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n  const lnDumpingCoeff = Math.log(dumpingCoeff);\n  return Math.log(1 /* Constants.EpsilonDistance */ * lnDumpingCoeff / -speed) / lnDumpingCoeff;\n}\nclass KineticAnimation {\n  constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n    this._private__position1 = null;\n    this._private__position2 = null;\n    this._private__position3 = null;\n    this._private__position4 = null;\n    this._private__animationStartPosition = null;\n    this._private__durationMsecs = 0;\n    this._private__speedPxPerMsec = 0;\n    this._private__minSpeed = minSpeed;\n    this._private__maxSpeed = maxSpeed;\n    this._private__dumpingCoeff = dumpingCoeff;\n    this._private__minMove = minMove;\n  }\n  _internal_addPosition(position, time) {\n    if (this._private__position1 !== null) {\n      if (this._private__position1._internal_time === time) {\n        this._private__position1._internal_position = position;\n        return;\n      }\n      if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n        return;\n      }\n    }\n    this._private__position4 = this._private__position3;\n    this._private__position3 = this._private__position2;\n    this._private__position2 = this._private__position1;\n    this._private__position1 = {\n      _internal_time: time,\n      _internal_position: position\n    };\n  }\n  _internal_start(position, time) {\n    if (this._private__position1 === null || this._private__position2 === null) {\n      return;\n    }\n    if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n      return;\n    }\n    // To calculate all the rest parameters we should calculate the speed af first\n    let totalDistance = 0;\n    const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n    const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n    // We're calculating weighted average speed\n    // Than more distance for a segment, than more its weight\n    const speedItems = [speed1];\n    const distanceItems = [distance1];\n    totalDistance += distance1;\n    if (this._private__position3 !== null) {\n      const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n      // stop at this moment if direction of the segment is opposite\n      if (Math.sign(speed2) === Math.sign(speed1)) {\n        const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n        speedItems.push(speed2);\n        distanceItems.push(distance2);\n        totalDistance += distance2;\n        if (this._private__position4 !== null) {\n          const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n          if (Math.sign(speed3) === Math.sign(speed1)) {\n            const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n            speedItems.push(speed3);\n            distanceItems.push(distance3);\n            totalDistance += distance3;\n          }\n        }\n      }\n    }\n    let resultSpeed = 0;\n    for (let i = 0; i < speedItems.length; ++i) {\n      resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n    }\n    if (Math.abs(resultSpeed) < this._private__minSpeed) {\n      return;\n    }\n    this._private__animationStartPosition = {\n      _internal_position: position,\n      _internal_time: time\n    };\n    this._private__speedPxPerMsec = resultSpeed;\n    this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n  }\n  _internal_getPosition(time) {\n    const startPosition = ensureNotNull(this._private__animationStartPosition);\n    const durationMsecs = time - startPosition._internal_time;\n    return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / Math.log(this._private__dumpingCoeff);\n  }\n  _internal_finished(time) {\n    return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n  }\n  _private__progressDuration(time) {\n    const startPosition = ensureNotNull(this._private__animationStartPosition);\n    const progress = time - startPosition._internal_time;\n    return Math.min(progress, this._private__durationMsecs);\n  }\n}\nfunction createBoundCanvas(parentElement, size) {\n  const doc = ensureNotNull(parentElement.ownerDocument);\n  const canvas = doc.createElement('canvas');\n  parentElement.appendChild(canvas);\n  const binding = bindCanvasElementBitmapSizeTo(canvas, {\n    type: 'device-pixel-content-box',\n    options: {\n      allowResizeObserver: false\n    },\n    transform: (bitmapSize, canvasElementClientSize) => ({\n      width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n      height: Math.max(bitmapSize.height, canvasElementClientSize.height)\n    })\n  });\n  binding.resizeCanvasElement(size);\n  return binding;\n}\nfunction releaseCanvas(canvas) {\n  var _a;\n  // This function fixes the iOS Safari error \"Total canvas memory use exceeds the maximum limit\".\n  // Seems that iOS Safari stores canvas elements for some additional time internally.\n  // So if we create/destroy a lot of canvas elements in a short period of time we can get this error.\n  // We resize the canvas to 1x1 pixels to force it to release memmory resources.\n  canvas.width = 1;\n  canvas.height = 1;\n  (_a = canvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.clearRect(0, 0, 1, 1);\n}\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n  if (renderer._internal_drawBackground) {\n    renderer._internal_drawBackground(target, isHovered, hitTestData);\n  }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n  renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, pane) {\n  const paneViews = paneViewsGetter(source, pane);\n  for (const paneView of paneViews) {\n    const renderer = paneView._internal_renderer();\n    if (renderer !== null) {\n      drawRendererFn(renderer);\n    }\n  }\n}\nfunction preventScrollByWheelClick(el) {\n  if (!isChrome()) {\n    return;\n  }\n  el.addEventListener('mousedown', e => {\n    if (e.button === 1 /* MouseEventButton.Middle */) {\n      // prevent incorrect scrolling event\n      e.preventDefault();\n      return false;\n    }\n    return undefined;\n  });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n  constructor(target, handler, options) {\n    this._private__clickCount = 0;\n    this._private__clickTimeoutId = null;\n    this._private__clickPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n    this._private__tapCount = 0;\n    this._private__tapTimeoutId = null;\n    this._private__tapPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n    this._private__longTapTimeoutId = null;\n    this._private__longTapActive = false;\n    this._private__mouseMoveStartPosition = null;\n    this._private__touchMoveStartPosition = null;\n    this._private__touchMoveExceededManhattanDistance = false;\n    this._private__cancelClick = false;\n    this._private__cancelTap = false;\n    this._private__unsubscribeOutsideMouseEvents = null;\n    this._private__unsubscribeOutsideTouchEvents = null;\n    this._private__unsubscribeMobileSafariEvents = null;\n    this._private__unsubscribeMousemove = null;\n    this._private__unsubscribeRootMouseEvents = null;\n    this._private__unsubscribeRootTouchEvents = null;\n    this._private__startPinchMiddlePoint = null;\n    this._private__startPinchDistance = 0;\n    this._private__pinchPrevented = false;\n    this._private__preventTouchDragProcess = false;\n    this._private__mousePressed = false;\n    this._private__lastTouchEventTimeStamp = 0;\n    // for touchstart/touchmove/touchend events we handle only first touch\n    // i.e. we don't support several active touches at the same time (except pinch event)\n    this._private__activeTouchId = null;\n    // accept all mouse leave events if it's not an iOS device\n    // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n    this._private__acceptMouseLeave = !isIOS();\n    /**\n     * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n     * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n     * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n     */\n    this._private__onFirefoxOutsideMouseUp = mouseUpEvent => {\n      this._private__mouseUpHandler(mouseUpEvent);\n    };\n    /**\n     * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n     * There are two possible solutions:\n     * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n     * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n     * https://developer.apple.com/forums/thread/125073\n     */\n    this._private__onMobileSafariDoubleClick = dblClickEvent => {\n      if (this._private__firesTouchEvents(dblClickEvent)) {\n        const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n          const {\n            _internal_manhattanDistance: manhattanDistance\n          } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n          if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n          }\n          this._private__resetTapTimeout();\n        }\n      } else {\n        const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n          const {\n            _internal_manhattanDistance: manhattanDistance\n          } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n          if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n          }\n          this._private__resetClickTimeout();\n        }\n      }\n    };\n    this._private__target = target;\n    this._private__handler = handler;\n    this._private__options = options;\n    this._private__init();\n  }\n  _internal_destroy() {\n    if (this._private__unsubscribeOutsideMouseEvents !== null) {\n      this._private__unsubscribeOutsideMouseEvents();\n      this._private__unsubscribeOutsideMouseEvents = null;\n    }\n    if (this._private__unsubscribeOutsideTouchEvents !== null) {\n      this._private__unsubscribeOutsideTouchEvents();\n      this._private__unsubscribeOutsideTouchEvents = null;\n    }\n    if (this._private__unsubscribeMousemove !== null) {\n      this._private__unsubscribeMousemove();\n      this._private__unsubscribeMousemove = null;\n    }\n    if (this._private__unsubscribeRootMouseEvents !== null) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    if (this._private__unsubscribeRootTouchEvents !== null) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    if (this._private__unsubscribeMobileSafariEvents !== null) {\n      this._private__unsubscribeMobileSafariEvents();\n      this._private__unsubscribeMobileSafariEvents = null;\n    }\n    this._private__clearLongTapTimeout();\n    this._private__resetClickTimeout();\n  }\n  _private__mouseEnterHandler(enterEvent) {\n    if (this._private__unsubscribeMousemove) {\n      this._private__unsubscribeMousemove();\n    }\n    const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n    this._private__unsubscribeMousemove = () => {\n      this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n    };\n    this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n    if (this._private__firesTouchEvents(enterEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(enterEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n    this._private__acceptMouseLeave = true;\n  }\n  _private__resetClickTimeout() {\n    if (this._private__clickTimeoutId !== null) {\n      clearTimeout(this._private__clickTimeoutId);\n    }\n    this._private__clickCount = 0;\n    this._private__clickTimeoutId = null;\n    this._private__clickPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n  }\n  _private__resetTapTimeout() {\n    if (this._private__tapTimeoutId !== null) {\n      clearTimeout(this._private__tapTimeoutId);\n    }\n    this._private__tapCount = 0;\n    this._private__tapTimeoutId = null;\n    this._private__tapPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n  }\n  _private__mouseMoveHandler(moveEvent) {\n    if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n      return;\n    }\n    if (this._private__firesTouchEvents(moveEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(moveEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n    this._private__acceptMouseLeave = true;\n  }\n  _private__touchMoveHandler(moveEvent) {\n    const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null) {\n      return;\n    }\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n    if (this._private__startPinchMiddlePoint !== null) {\n      return;\n    }\n    if (this._private__preventTouchDragProcess) {\n      return;\n    }\n    // prevent pinch if move event comes faster than the second touch\n    this._private__pinchPrevented = true;\n    const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n    const {\n      _internal_xOffset: xOffset,\n      _internal_yOffset: yOffset,\n      _internal_manhattanDistance: manhattanDistance\n    } = moveInfo;\n    if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n      return;\n    }\n    if (!this._private__touchMoveExceededManhattanDistance) {\n      // first time when current position exceeded manhattan distance\n      // vertical drag is more important than horizontal drag\n      // because we scroll the page vertically often than horizontally\n      const correctedXOffset = xOffset * 0.5;\n      // a drag can be only if touch page scroll isn't allowed\n      const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n      const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n      // if drag event happened then we should revert preventDefault state to original one\n      // and try to process the drag event\n      // else we shouldn't prevent default of the event and ignore processing the drag event\n      if (!isVertDrag && !isHorzDrag) {\n        this._private__preventTouchDragProcess = true;\n      }\n      this._private__touchMoveExceededManhattanDistance = true;\n      // if manhattan distance is more that 5 - we should cancel tap event\n      this._private__cancelTap = true;\n      this._private__clearLongTapTimeout();\n      this._private__resetTapTimeout();\n    }\n    if (!this._private__preventTouchDragProcess) {\n      const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n      this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n      // we should prevent default in case of touch only\n      // to prevent scroll of the page\n      preventDefault(moveEvent);\n    }\n  }\n  _private__mouseMoveWithDownHandler(moveEvent) {\n    if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n    const {\n      _internal_manhattanDistance: manhattanDistance\n    } = moveInfo;\n    if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n      // if manhattan distance is more that 5 - we should cancel click event\n      this._private__cancelClick = true;\n      this._private__resetClickTimeout();\n    }\n    if (this._private__cancelClick) {\n      // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n      const compatEvent = this._private__makeCompatEvent(moveEvent);\n      this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n    }\n  }\n  _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n    const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n    const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n    const manhattanDistance = xOffset + yOffset;\n    return {\n      _internal_xOffset: xOffset,\n      _internal_yOffset: yOffset,\n      _internal_manhattanDistance: manhattanDistance\n    };\n  }\n  // eslint-disable-next-line complexity\n  _private__touchEndHandler(touchEndEvent) {\n    let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null && touchEndEvent.touches.length === 0) {\n      // something went wrong, somehow we missed the required touchend event\n      // probably the browser has not sent this event\n      touch = touchEndEvent.changedTouches[0];\n    }\n    if (touch === null) {\n      return;\n    }\n    this._private__activeTouchId = null;\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n    this._private__clearLongTapTimeout();\n    this._private__touchMoveStartPosition = null;\n    if (this._private__unsubscribeRootTouchEvents) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n    ++this._private__tapCount;\n    if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n      // check that both clicks are near enough\n      const {\n        _internal_manhattanDistance: manhattanDistance\n      } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n      if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n      }\n      this._private__resetTapTimeout();\n    } else {\n      if (!this._private__cancelTap) {\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n        // do not fire mouse events if tap handler was executed\n        // prevent click event on new dom element (who appeared after tap)\n        if (this._private__handler._internal_tapEvent) {\n          preventDefault(touchEndEvent);\n        }\n      }\n    }\n    // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n    // we handle mouseDoubleClickEvent here ourselves\n    if (this._private__tapCount === 0) {\n      preventDefault(touchEndEvent);\n    }\n    if (touchEndEvent.touches.length === 0) {\n      if (this._private__longTapActive) {\n        this._private__longTapActive = false;\n        // prevent native click event\n        preventDefault(touchEndEvent);\n      }\n    }\n  }\n  _private__mouseUpHandler(mouseUpEvent) {\n    if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n    this._private__mouseMoveStartPosition = null;\n    this._private__mousePressed = false;\n    if (this._private__unsubscribeRootMouseEvents) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    if (isFF()) {\n      const rootElement = this._private__target.ownerDocument.documentElement;\n      rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n    }\n    if (this._private__firesTouchEvents(mouseUpEvent)) {\n      return;\n    }\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n    ++this._private__clickCount;\n    if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n      // check that both clicks are near enough\n      const {\n        _internal_manhattanDistance: manhattanDistance\n      } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n      if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n      }\n      this._private__resetClickTimeout();\n    } else {\n      if (!this._private__cancelClick) {\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n      }\n    }\n  }\n  _private__clearLongTapTimeout() {\n    if (this._private__longTapTimeoutId === null) {\n      return;\n    }\n    clearTimeout(this._private__longTapTimeoutId);\n    this._private__longTapTimeoutId = null;\n  }\n  _private__touchStartHandler(downEvent) {\n    if (this._private__activeTouchId !== null) {\n      return;\n    }\n    const touch = downEvent.changedTouches[0];\n    this._private__activeTouchId = touch.identifier;\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n    const rootElement = this._private__target.ownerDocument.documentElement;\n    this._private__cancelTap = false;\n    this._private__touchMoveExceededManhattanDistance = false;\n    this._private__preventTouchDragProcess = false;\n    this._private__touchMoveStartPosition = getPosition(touch);\n    if (this._private__unsubscribeRootTouchEvents) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    {\n      const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n      const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n      this._private__unsubscribeRootTouchEvents = () => {\n        rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n        rootElement.removeEventListener('touchend', boundTouchEndHandler);\n      };\n      rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, {\n        passive: false\n      });\n      rootElement.addEventListener('touchend', boundTouchEndHandler, {\n        passive: false\n      });\n      this._private__clearLongTapTimeout();\n      this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n    }\n    const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n    if (!this._private__tapTimeoutId) {\n      this._private__tapCount = 0;\n      this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n      this._private__tapPosition = getPosition(touch);\n    }\n  }\n  _private__mouseDownHandler(downEvent) {\n    if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const rootElement = this._private__target.ownerDocument.documentElement;\n    if (isFF()) {\n      rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n    }\n    this._private__cancelClick = false;\n    this._private__mouseMoveStartPosition = getPosition(downEvent);\n    if (this._private__unsubscribeRootMouseEvents) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    {\n      const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n      const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n      this._private__unsubscribeRootMouseEvents = () => {\n        rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n        rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n      };\n      rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n      rootElement.addEventListener('mouseup', boundMouseUpHandler);\n    }\n    this._private__mousePressed = true;\n    if (this._private__firesTouchEvents(downEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(downEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n    if (!this._private__clickTimeoutId) {\n      this._private__clickCount = 0;\n      this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n      this._private__clickPosition = getPosition(downEvent);\n    }\n  }\n  _private__init() {\n    this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n    // Do not show context menu when something went wrong\n    this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n    {\n      const doc = this._private__target.ownerDocument;\n      const outsideHandler = event => {\n        if (!this._private__handler._internal_mouseDownOutsideEvent) {\n          return;\n        }\n        if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n          return;\n        }\n        if (event.target && this._private__target.contains(event.target)) {\n          return;\n        }\n        this._private__handler._internal_mouseDownOutsideEvent();\n      };\n      this._private__unsubscribeOutsideTouchEvents = () => {\n        doc.removeEventListener('touchstart', outsideHandler);\n      };\n      this._private__unsubscribeOutsideMouseEvents = () => {\n        doc.removeEventListener('mousedown', outsideHandler);\n      };\n      doc.addEventListener('mousedown', outsideHandler);\n      doc.addEventListener('touchstart', outsideHandler, {\n        passive: true\n      });\n    }\n    if (isIOS()) {\n      this._private__unsubscribeMobileSafariEvents = () => {\n        this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n      };\n      this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n    }\n    this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n    this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), {\n      passive: true\n    });\n    preventScrollByWheelClick(this._private__target);\n    this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n    this._private__initPinch();\n    // Hey mobile Safari, what's up?\n    // If mobile Safari doesn't have any touchmove handler with passive=false\n    // it treats a touchstart and the following touchmove events as cancelable=false,\n    // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n    // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n    this._private__target.addEventListener('touchmove', () => {}, {\n      passive: false\n    });\n  }\n  _private__initPinch() {\n    if (this._private__handler._internal_pinchStartEvent === undefined && this._private__handler._internal_pinchEvent === undefined && this._private__handler._internal_pinchEndEvent === undefined) {\n      return;\n    }\n    this._private__target.addEventListener('touchstart', event => this._private__checkPinchState(event.touches), {\n      passive: true\n    });\n    this._private__target.addEventListener('touchmove', event => {\n      if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n        return;\n      }\n      if (this._private__handler._internal_pinchEvent !== undefined) {\n        const currentDistance = getDistance(event.touches[0], event.touches[1]);\n        const scale = currentDistance / this._private__startPinchDistance;\n        this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n        preventDefault(event);\n      }\n    }, {\n      passive: false\n    });\n    this._private__target.addEventListener('touchend', event => {\n      this._private__checkPinchState(event.touches);\n    });\n  }\n  _private__checkPinchState(touches) {\n    if (touches.length === 1) {\n      this._private__pinchPrevented = false;\n    }\n    if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n      this._private__stopPinch();\n    } else {\n      this._private__startPinch(touches);\n    }\n  }\n  _private__startPinch(touches) {\n    const box = getBoundingClientRect(this._private__target);\n    this._private__startPinchMiddlePoint = {\n      _internal_x: (touches[0].clientX - box.left + (touches[1].clientX - box.left)) / 2,\n      _internal_y: (touches[0].clientY - box.top + (touches[1].clientY - box.top)) / 2\n    };\n    this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n    if (this._private__handler._internal_pinchStartEvent !== undefined) {\n      this._private__handler._internal_pinchStartEvent();\n    }\n    this._private__clearLongTapTimeout();\n  }\n  _private__stopPinch() {\n    if (this._private__startPinchMiddlePoint === null) {\n      return;\n    }\n    this._private__startPinchMiddlePoint = null;\n    if (this._private__handler._internal_pinchEndEvent !== undefined) {\n      this._private__handler._internal_pinchEndEvent();\n    }\n  }\n  _private__mouseLeaveHandler(event) {\n    if (this._private__unsubscribeMousemove) {\n      this._private__unsubscribeMousemove();\n    }\n    if (this._private__firesTouchEvents(event)) {\n      return;\n    }\n    if (!this._private__acceptMouseLeave) {\n      // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n      // just ignore this event if there was no mouse move or mouse enter events\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(event);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n    // accept all mouse leave events if it's not an iOS device\n    this._private__acceptMouseLeave = !isIOS();\n  }\n  _private__longTapHandler(event) {\n    const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(event, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n    this._private__cancelTap = true;\n    // long tap is active until touchend event with 0 touches occurred\n    this._private__longTapActive = true;\n  }\n  _private__firesTouchEvents(e) {\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n      return e.sourceCapabilities.firesTouchEvents;\n    }\n    return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n  }\n  _private__processTouchEvent(event, callback) {\n    if (callback) {\n      callback.call(this._private__handler, event);\n    }\n  }\n  _private__processMouseEvent(event, callback) {\n    if (!callback) {\n      return;\n    }\n    callback.call(this._private__handler, event);\n  }\n  _private__makeCompatEvent(event, touch) {\n    // TouchEvent has no clientX/Y coordinates:\n    // We have to use the last Touch instead\n    const eventLike = touch || event;\n    const box = this._private__target.getBoundingClientRect() || {\n      left: 0,\n      top: 0\n    };\n    return {\n      clientX: eventLike.clientX,\n      clientY: eventLike.clientY,\n      pageX: eventLike.pageX,\n      pageY: eventLike.pageY,\n      screenX: eventLike.screenX,\n      screenY: eventLike.screenY,\n      localX: eventLike.clientX - box.left,\n      localY: eventLike.clientY - box.top,\n      ctrlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey,\n      metaKey: event.metaKey,\n      _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n      _internal_srcType: event.type,\n      _internal_target: eventLike.target,\n      _internal_view: event.view,\n      _internal_preventDefault: () => {\n        if (event.type !== 'touchstart') {\n          // touchstart is passive and cannot be prevented\n          preventDefault(event);\n        }\n      }\n    };\n  }\n}\nfunction getBoundingClientRect(element) {\n  return element.getBoundingClientRect() || {\n    left: 0,\n    top: 0\n  };\n}\nfunction getDistance(p1, p2) {\n  const xDiff = p1.clientX - p2.clientX;\n  const yDiff = p1.clientY - p2.clientY;\n  return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction getPosition(eventLike) {\n  return {\n    _internal_x: eventLike.pageX,\n    _internal_y: eventLike.pageY\n  };\n}\nfunction eventTimeStamp(e) {\n  // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n  return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n  for (let i = 0; i < touches.length; ++i) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n  return null;\n}\n\n// returns true if item is above reference\nfunction comparePrimitiveZOrder(item, reference) {\n  return !reference || item === 'top' && reference !== 'top' || item === 'normal' && reference === 'bottom';\n}\nfunction findBestPrimitiveHitTest(sources, x, y) {\n  var _a, _b;\n  let bestPrimitiveHit;\n  let bestHitSource;\n  for (const source of sources) {\n    const primitiveHitResults = (_b = (_a = source._internal_primitiveHitTest) === null || _a === void 0 ? void 0 : _a.call(source, x, y)) !== null && _b !== void 0 ? _b : [];\n    for (const hitResult of primitiveHitResults) {\n      if (comparePrimitiveZOrder(hitResult.zOrder, bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit.zOrder)) {\n        bestPrimitiveHit = hitResult;\n        bestHitSource = source;\n      }\n    }\n  }\n  if (!bestPrimitiveHit || !bestHitSource) {\n    return null;\n  }\n  return {\n    _internal_hit: bestPrimitiveHit,\n    _internal_source: bestHitSource\n  };\n}\nfunction convertPrimitiveHitResult(primitiveHit) {\n  return {\n    _internal_source: primitiveHit._internal_source,\n    _internal_object: {\n      _internal_externalId: primitiveHit._internal_hit.externalId\n    },\n    _internal_cursorStyle: primitiveHit._internal_hit.cursorStyle\n  };\n}\n/**\n * Performs a hit test on a collection of pane views to determine which view and object\n * is located at a given coordinate (x, y) and returns the matching pane view and\n * hit-tested result object, or null if no match is found.\n */\nfunction hitTestPaneView(paneViews, x, y) {\n  for (const paneView of paneViews) {\n    const renderer = paneView._internal_renderer();\n    if (renderer !== null && renderer._internal_hitTest) {\n      const result = renderer._internal_hitTest(x, y);\n      if (result !== null) {\n        return {\n          _internal_view: paneView,\n          _internal_object: result\n        };\n      }\n    }\n  }\n  return null;\n}\nfunction hitTestPane(pane, x, y) {\n  const sources = pane._internal_orderedSources();\n  const bestPrimitiveHit = findBestPrimitiveHitTest(sources, x, y);\n  if ((bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit.zOrder) === 'top') {\n    // a primitive hit on the 'top' layer will always beat the built-in hit tests\n    // (on normal layer) so we can return early here.\n    return convertPrimitiveHitResult(bestPrimitiveHit);\n  }\n  for (const source of sources) {\n    if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && !bestPrimitiveHit._internal_hit.isBackground) {\n      // a primitive will be drawn above a built-in item like a series marker\n      // therefore it takes precedence here.\n      return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    const sourceResult = hitTestPaneView(source._internal_paneViews(pane), x, y);\n    if (sourceResult !== null) {\n      return {\n        _internal_source: source,\n        _internal_view: sourceResult._internal_view,\n        _internal_object: sourceResult._internal_object\n      };\n    }\n    if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && bestPrimitiveHit._internal_hit.isBackground) {\n      return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n  }\n  if (bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit) {\n    // return primitive hits for the 'bottom' layer\n    return convertPrimitiveHitResult(bestPrimitiveHit);\n  }\n  return null;\n}\nfunction buildPriceAxisViewsGetter(zOrder, priceScaleId) {\n  return source => {\n    var _a, _b, _c, _d;\n    const psId = (_b = (_a = source._internal_priceScale()) === null || _a === void 0 ? void 0 : _a._internal_id()) !== null && _b !== void 0 ? _b : '';\n    if (psId !== priceScaleId) {\n      // exclude if source is using a different price scale.\n      return [];\n    }\n    return (_d = (_c = source._internal_pricePaneViews) === null || _c === void 0 ? void 0 : _c.call(source, zOrder)) !== null && _d !== void 0 ? _d : [];\n  };\n}\nclass PriceAxisWidget {\n  constructor(pane, options, rendererOptionsProvider, side) {\n    this._private__priceScale = null;\n    this._private__size = null;\n    this._private__mousedown = false;\n    this._private__widthCache = new TextWidthCache(200);\n    this._private__font = null;\n    this._private__prevOptimalWidth = 0;\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize) {\n        return;\n      }\n      this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize) {\n        return;\n      }\n      this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n    };\n    this._private__pane = pane;\n    this._private__options = options;\n    this._private__layoutOptions = options.layout;\n    this._private__rendererOptionsProvider = rendererOptionsProvider;\n    this._private__isLeft = side === 'left';\n    this._private__sourcePaneViews = buildPriceAxisViewsGetter('normal', side);\n    this._private__sourceTopPaneViews = buildPriceAxisViewsGetter('top', side);\n    this._private__sourceBottomPaneViews = buildPriceAxisViewsGetter('bottom', side);\n    this._private__cell = document.createElement('div');\n    this._private__cell.style.height = '100%';\n    this._private__cell.style.overflow = 'hidden';\n    this._private__cell.style.width = '25px';\n    this._private__cell.style.left = '0';\n    this._private__cell.style.position = 'relative';\n    this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    const handler = {\n      _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n      _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n      _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n      _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n      _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n      _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n      _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n      _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n      _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this)\n    };\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n      _internal_treatVertTouchDragAsPageScroll: () => !this._private__options.handleScroll.vertTouchDrag,\n      _internal_treatHorzTouchDragAsPageScroll: () => true\n    });\n  }\n  _internal_destroy() {\n    this._private__mouseEventHandler._internal_destroy();\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__topCanvasBinding.canvasElement);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n    if (this._private__priceScale !== null) {\n      this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n    }\n    this._private__priceScale = null;\n  }\n  _internal_getElement() {\n    return this._private__cell;\n  }\n  _internal_fontSize() {\n    return this._private__layoutOptions.fontSize;\n  }\n  _internal_rendererOptions() {\n    const options = this._private__rendererOptionsProvider._internal_options();\n    const isFontChanged = this._private__font !== options._internal_font;\n    if (isFontChanged) {\n      this._private__widthCache._internal_reset();\n      this._private__font = options._internal_font;\n    }\n    return options;\n  }\n  _internal_optimalWidth() {\n    if (this._private__priceScale === null) {\n      return 0;\n    }\n    let tickMarkMaxWidth = 0;\n    const rendererOptions = this._internal_rendererOptions();\n    const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d'));\n    ctx.save();\n    const tickMarks = this._private__priceScale._internal_marks();\n    ctx.font = this._private__baseFont();\n    if (tickMarks.length > 0) {\n      tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n    }\n    const views = this._private__backLabels();\n    for (let j = views.length; j--;) {\n      const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n      if (width > tickMarkMaxWidth) {\n        tickMarkMaxWidth = width;\n      }\n    }\n    const firstValue = this._private__priceScale._internal_firstValue();\n    if (firstValue !== null && this._private__size !== null) {\n      const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n      const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n      tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n    }\n    ctx.restore();\n    const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n    const res = Math.ceil(rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner + rendererOptions._internal_paddingOuter + 5 /* Constants.LabelOffset */ + resultTickMarksMaxWidth);\n    // make it even, remove this after migration to perfect fancy canvas\n    return suggestPriceScaleWidth(res);\n  }\n  _internal_setSize(newSize) {\n    if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n      this._private__size = newSize;\n      this._private__isSettingSize = true;\n      this._private__canvasBinding.resizeCanvasElement(newSize);\n      this._private__topCanvasBinding.resizeCanvasElement(newSize);\n      this._private__isSettingSize = false;\n      this._private__cell.style.width = `${newSize.width}px`;\n      this._private__cell.style.height = `${newSize.height}px`;\n    }\n  }\n  _internal_getWidth() {\n    return ensureNotNull(this._private__size).width;\n  }\n  _internal_setPriceScale(priceScale) {\n    if (this._private__priceScale === priceScale) {\n      return;\n    }\n    if (this._private__priceScale !== null) {\n      this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n    }\n    this._private__priceScale = priceScale;\n    priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n  }\n  _internal_priceScale() {\n    return this._private__priceScale;\n  }\n  _internal_reset() {\n    const pane = this._private__pane._internal_state();\n    const model = this._private__pane._internal_chart()._internal_model();\n    model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n  }\n  _internal_paint(type) {\n    if (this._private__size === null) {\n      return;\n    }\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__alignLabels();\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n          this._private__drawBorder(scope);\n        });\n        this._private__pane._internal_drawAdditionalSources(target, this._private__sourceBottomPaneViews);\n        this._private__drawTickMarks(target);\n        this._private__pane._internal_drawAdditionalSources(target, this._private__sourcePaneViews);\n        this._private__drawBackLabels(target);\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawCrosshairLabel(topTarget);\n      this._private__pane._internal_drawAdditionalSources(topTarget, this._private__sourceTopPaneViews);\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_update() {\n    var _a;\n    // this call has side-effect - it regenerates marks on the price scale\n    (_a = this._private__priceScale) === null || _a === void 0 ? void 0 : _a._internal_marks();\n  }\n  _private__mouseDownEvent(e) {\n    if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    this._private__mousedown = true;\n    model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n  }\n  _private__pressedMouseMoveEvent(e) {\n    if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    const priceScale = this._private__priceScale;\n    model._internal_scalePriceTo(pane, priceScale, e.localY);\n  }\n  _private__mouseDownOutsideEvent() {\n    if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    const priceScale = this._private__priceScale;\n    if (this._private__mousedown) {\n      this._private__mousedown = false;\n      model._internal_endScalePrice(pane, priceScale);\n    }\n  }\n  _private__mouseUpEvent(e) {\n    if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    this._private__mousedown = false;\n    model._internal_endScalePrice(pane, this._private__priceScale);\n  }\n  _private__mouseDoubleClickEvent(e) {\n    if (this._private__options.handleScale.axisDoubleClickReset.price) {\n      this._internal_reset();\n    }\n  }\n  _private__mouseEnterEvent(e) {\n    if (this._private__priceScale === null) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    if (model._internal_options().handleScale.axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n      this._private__setCursor(1 /* CursorType.NsResize */);\n    }\n  }\n  _private__mouseLeaveEvent(e) {\n    this._private__setCursor(0 /* CursorType.Default */);\n  }\n  _private__backLabels() {\n    const res = [];\n    const priceScale = this._private__priceScale === null ? undefined : this._private__priceScale;\n    const addViewsForSources = sources => {\n      for (let i = 0; i < sources.length; ++i) {\n        const source = sources[i];\n        const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n        for (let j = 0; j < views.length; j++) {\n          res.push(views[j]);\n        }\n      }\n    };\n    // calculate max and min coordinates for views on selection\n    // crosshair individually\n    addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n    return res;\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    const {\n      width,\n      height\n    } = bitmapSize;\n    const model = this._private__pane._internal_state()._internal_model();\n    const topColor = model._internal_backgroundTopColor();\n    const bottomColor = model._internal_backgroundBottomColor();\n    if (topColor === bottomColor) {\n      clearRect(ctx, 0, 0, width, height, topColor);\n    } else {\n      clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n    }\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio\n  }) {\n    if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n      return;\n    }\n    ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n    const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n    let left;\n    if (this._private__isLeft) {\n      left = bitmapSize.width - borderSize;\n    } else {\n      left = 0;\n    }\n    ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n  }\n  _private__drawTickMarks(target) {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    const tickMarks = this._private__priceScale._internal_marks();\n    const priceScaleOptions = this._private__priceScale._internal_options();\n    const rendererOptions = this._internal_rendererOptions();\n    const tickMarkLeftX = this._private__isLeft ? this._private__size.width - rendererOptions._internal_tickLength : 0;\n    if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n      target.useBitmapCoordinateSpace(({\n        context: ctx,\n        horizontalPixelRatio,\n        verticalPixelRatio\n      }) => {\n        ctx.fillStyle = priceScaleOptions.borderColor;\n        const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n        const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n        const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n        ctx.beginPath();\n        for (const tickMark of tickMarks) {\n          ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n        }\n        ctx.fill();\n      });\n    }\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      var _a;\n      ctx.font = this._private__baseFont();\n      ctx.fillStyle = (_a = priceScaleOptions.textColor) !== null && _a !== void 0 ? _a : this._private__layoutOptions.textColor;\n      ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n      ctx.textBaseline = 'middle';\n      const textLeftX = this._private__isLeft ? Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) : Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n      const yMidCorrections = tickMarks.map(mark => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n      for (let i = tickMarks.length; i--;) {\n        const tickMark = tickMarks[i];\n        ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n      }\n    });\n  }\n  _private__alignLabels() {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    let center = this._private__size.height / 2;\n    const views = [];\n    const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n    const pane = this._private__pane;\n    const paneState = pane._internal_state();\n    const rendererOptions = this._internal_rendererOptions();\n    // if we are default price scale, append labels from no-scale\n    const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n    if (isDefault) {\n      this._private__pane._internal_state()._internal_orderedSources().forEach(source => {\n        if (paneState._internal_isOverlay(source)) {\n          orderedSources.push(source);\n        }\n      });\n    }\n    // we can use any, but let's use the first source as \"center\" one\n    const centerSource = this._private__priceScale._internal_dataSources()[0];\n    const priceScale = this._private__priceScale;\n    const updateForSources = sources => {\n      sources.forEach(source => {\n        const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n        // never align selected sources\n        sourceViews.forEach(view => {\n          view._internal_setFixedCoordinate(null);\n          if (view._internal_isVisible()) {\n            views.push(view);\n          }\n        });\n        if (centerSource === source && sourceViews.length > 0) {\n          center = sourceViews[0]._internal_coordinate();\n        }\n      });\n    };\n    // crosshair individually\n    updateForSources(orderedSources);\n    views.forEach(view => view._internal_setFixedCoordinate(view._internal_coordinate()));\n    const options = this._private__priceScale._internal_options();\n    if (!options.alignLabels) {\n      return;\n    }\n    this._private__fixLabelOverlap(views, rendererOptions, center);\n  }\n  _private__fixLabelOverlap(views, rendererOptions, center) {\n    if (this._private__size === null) {\n      return;\n    }\n    // split into two parts\n    const top = views.filter(view => view._internal_coordinate() <= center);\n    const bottom = views.filter(view => view._internal_coordinate() > center);\n    // sort top from center to top\n    top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n    // share center label\n    if (top.length && bottom.length) {\n      bottom.push(top[0]);\n    }\n    bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n    for (const view of views) {\n      const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n      const coordinate = view._internal_coordinate();\n      if (coordinate > -halfHeight && coordinate < halfHeight) {\n        view._internal_setFixedCoordinate(halfHeight);\n      }\n      if (coordinate > this._private__size.height - halfHeight && coordinate < this._private__size.height + halfHeight) {\n        view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n      }\n    }\n    for (let i = 1; i < top.length; i++) {\n      const view = top[i];\n      const prev = top[i - 1];\n      const height = prev._internal_height(rendererOptions, false);\n      const coordinate = view._internal_coordinate();\n      const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n      if (coordinate > prevFixedCoordinate - height) {\n        view._internal_setFixedCoordinate(prevFixedCoordinate - height);\n      }\n    }\n    for (let j = 1; j < bottom.length; j++) {\n      const view = bottom[j];\n      const prev = bottom[j - 1];\n      const height = prev._internal_height(rendererOptions, true);\n      const coordinate = view._internal_coordinate();\n      const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n      if (coordinate < prevFixedCoordinate + height) {\n        view._internal_setFixedCoordinate(prevFixedCoordinate + height);\n      }\n    }\n  }\n  _private__drawBackLabels(target) {\n    if (this._private__size === null) {\n      return;\n    }\n    const views = this._private__backLabels();\n    const rendererOptions = this._internal_rendererOptions();\n    const align = this._private__isLeft ? 'right' : 'left';\n    views.forEach(view => {\n      if (view._internal_isAxisLabelVisible()) {\n        const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n        renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n      }\n    });\n  }\n  _private__drawCrosshairLabel(target) {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const views = []; // array of arrays\n    const pane = this._private__pane._internal_state();\n    const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n    if (v.length) {\n      views.push(v);\n    }\n    const ro = this._internal_rendererOptions();\n    const align = this._private__isLeft ? 'right' : 'left';\n    views.forEach(arr => {\n      arr.forEach(view => {\n        view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n      });\n    });\n  }\n  _private__setCursor(type) {\n    this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n  }\n  _private__onMarksChanged() {\n    const width = this._internal_optimalWidth();\n    // avoid price scale is shrunk\n    // using < instead !== to avoid infinite changes\n    if (this._private__prevOptimalWidth < width) {\n      this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n    }\n    this._private__prevOptimalWidth = width;\n  }\n  _private__baseFont() {\n    return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n  }\n}\nfunction sourceBottomPaneViews$1(source, pane) {\n  var _a, _b;\n  return (_b = (_a = source._internal_bottomPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourcePaneViews$1(source, pane) {\n  var _a, _b;\n  return (_b = (_a = source._internal_paneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceLabelPaneViews(source, pane) {\n  var _a, _b;\n  return (_b = (_a = source._internal_labelPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceTopPaneViews$1(source, pane) {\n  var _a, _b;\n  return (_b = (_a = source._internal_topPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nclass PaneWidget {\n  constructor(chart, state) {\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__leftPriceAxisWidget = null;\n    this._private__rightPriceAxisWidget = null;\n    this._private__startScrollingPos = null;\n    this._private__isScrolling = false;\n    this._private__clicked = new Delegate();\n    this._private__dblClicked = new Delegate();\n    this._private__prevPinchScale = 0;\n    this._private__longTap = false;\n    this._private__startTrackPoint = null;\n    this._private__exitTrackingModeOnNextTry = false;\n    this._private__initCrosshairPosition = null;\n    this._private__scrollXAnimation = null;\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize || this._private__state === null) {\n        return;\n      }\n      this._private__model()._internal_lightUpdate();\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize || this._private__state === null) {\n        return;\n      }\n      this._private__model()._internal_lightUpdate();\n    };\n    this._private__chart = chart;\n    this._private__state = state;\n    this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n    this._private__paneCell = document.createElement('td');\n    this._private__paneCell.style.padding = '0';\n    this._private__paneCell.style.position = 'relative';\n    const paneWrapper = document.createElement('div');\n    paneWrapper.style.width = '100%';\n    paneWrapper.style.height = '100%';\n    paneWrapper.style.position = 'relative';\n    paneWrapper.style.overflow = 'hidden';\n    this._private__leftAxisCell = document.createElement('td');\n    this._private__leftAxisCell.style.padding = '0';\n    this._private__rightAxisCell = document.createElement('td');\n    this._private__rightAxisCell.style.padding = '0';\n    this._private__paneCell.appendChild(paneWrapper);\n    this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    this._private__rowElement = document.createElement('tr');\n    this._private__rowElement.appendChild(this._private__leftAxisCell);\n    this._private__rowElement.appendChild(this._private__paneCell);\n    this._private__rowElement.appendChild(this._private__rightAxisCell);\n    this._internal_updatePriceAxisWidgetsStates();\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n      _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.vertTouchDrag,\n      _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.horzTouchDrag\n    });\n  }\n  _internal_destroy() {\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_destroy();\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_destroy();\n    }\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__topCanvasBinding.canvasElement);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__mouseEventHandler._internal_destroy();\n  }\n  _internal_state() {\n    return ensureNotNull(this._private__state);\n  }\n  _internal_setState(pane) {\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__state = pane;\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n    }\n    this._internal_updatePriceAxisWidgetsStates();\n  }\n  _internal_chart() {\n    return this._private__chart;\n  }\n  _internal_getElement() {\n    return this._private__rowElement;\n  }\n  _internal_updatePriceAxisWidgetsStates() {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__recreatePriceAxisWidgets();\n    if (this._private__model()._internal_serieses().length === 0) {\n      return;\n    }\n    if (this._private__leftPriceAxisWidget !== null) {\n      const leftPriceScale = this._private__state._internal_leftPriceScale();\n      this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      const rightPriceScale = this._private__state._internal_rightPriceScale();\n      this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n    }\n  }\n  _internal_updatePriceAxisWidgets() {\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_update();\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_update();\n    }\n  }\n  _internal_stretchFactor() {\n    return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n  }\n  _internal_setStretchFactor(stretchFactor) {\n    if (this._private__state) {\n      this._private__state._internal_setStretchFactor(stretchFactor);\n    }\n  }\n  _internal_mouseEnterEvent(event) {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__onMouseEvent();\n    const x = event.localX;\n    const y = event.localY;\n    this._private__setCrosshairPosition(x, y, event);\n  }\n  _internal_mouseDownEvent(event) {\n    this._private__onMouseEvent();\n    this._private__mouseTouchDownEvent();\n    this._private__setCrosshairPosition(event.localX, event.localY, event);\n  }\n  _internal_mouseMoveEvent(event) {\n    var _a;\n    if (!this._private__state) {\n      return;\n    }\n    this._private__onMouseEvent();\n    const x = event.localX;\n    const y = event.localY;\n    this._private__setCrosshairPosition(x, y, event);\n    const hitTest = this._internal_hitTest(x, y);\n    this._private__chart._internal_setCursorStyle((_a = hitTest === null || hitTest === void 0 ? void 0 : hitTest._internal_cursorStyle) !== null && _a !== void 0 ? _a : null);\n    this._private__model()._internal_setHoveredSource(hitTest && {\n      _internal_source: hitTest._internal_source,\n      _internal_object: hitTest._internal_object\n    });\n  }\n  _internal_mouseClickEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__fireClickedDelegate(event);\n  }\n  _internal_mouseDoubleClickEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__fireMouseClickDelegate(this._private__dblClicked, event);\n  }\n  _internal_doubleTapEvent(event) {\n    this._internal_mouseDoubleClickEvent(event);\n  }\n  _internal_pressedMouseMoveEvent(event) {\n    this._private__onMouseEvent();\n    this._private__pressedMouseTouchMoveEvent(event);\n    this._private__setCrosshairPosition(event.localX, event.localY, event);\n  }\n  _internal_mouseUpEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__longTap = false;\n    this._private__endScroll(event);\n  }\n  _internal_tapEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__fireClickedDelegate(event);\n  }\n  _internal_longTapEvent(event) {\n    this._private__longTap = true;\n    if (this._private__startTrackPoint === null) {\n      const point = {\n        x: event.localX,\n        y: event.localY\n      };\n      this._private__startTrackingMode(point, point, event);\n    }\n  }\n  _internal_mouseLeaveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__state._internal_model()._internal_setHoveredSource(null);\n    this._private__clearCrosshairPosition();\n  }\n  _internal_clicked() {\n    return this._private__clicked;\n  }\n  _internal_dblClicked() {\n    return this._private__dblClicked;\n  }\n  _internal_pinchStartEvent() {\n    this._private__prevPinchScale = 1;\n    this._private__model()._internal_stopTimeScaleAnimation();\n  }\n  _internal_pinchEvent(middlePoint, scale) {\n    if (!this._private__chart._internal_options().handleScale.pinch) {\n      return;\n    }\n    const zoomScale = (scale - this._private__prevPinchScale) * 5;\n    this._private__prevPinchScale = scale;\n    this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n  }\n  _internal_touchStartEvent(event) {\n    this._private__longTap = false;\n    this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n    this._private__mouseTouchDownEvent();\n    const crosshair = this._private__model()._internal_crosshairSource();\n    if (this._private__startTrackPoint !== null && crosshair._internal_visible()) {\n      this._private__initCrosshairPosition = {\n        x: crosshair._internal_appliedX(),\n        y: crosshair._internal_appliedY()\n      };\n      this._private__startTrackPoint = {\n        x: event.localX,\n        y: event.localY\n      };\n    }\n  }\n  _internal_touchMoveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    const x = event.localX;\n    const y = event.localY;\n    if (this._private__startTrackPoint !== null) {\n      // tracking mode: move crosshair\n      this._private__exitTrackingModeOnNextTry = false;\n      const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n      const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n      const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n      this._private__setCrosshairPosition(newX, newY, event);\n      return;\n    }\n    this._private__pressedMouseTouchMoveEvent(event);\n  }\n  _internal_touchEndEvent(event) {\n    if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n      this._private__exitTrackingModeOnNextTry = true;\n    }\n    this._private__tryExitTrackingMode();\n    this._private__endScroll(event);\n  }\n  _internal_hitTest(x, y) {\n    const state = this._private__state;\n    if (state === null) {\n      return null;\n    }\n    return hitTestPane(state, x, y);\n  }\n  _internal_setPriceAxisSize(width, position) {\n    const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n    ensureNotNull(priceAxisWidget)._internal_setSize(size$1({\n      width,\n      height: this._private__size.height\n    }));\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_setSize(newSize) {\n    if (equalSizes(this._private__size, newSize)) {\n      return;\n    }\n    this._private__size = newSize;\n    this._private__isSettingSize = true;\n    this._private__canvasBinding.resizeCanvasElement(newSize);\n    this._private__topCanvasBinding.resizeCanvasElement(newSize);\n    this._private__isSettingSize = false;\n    this._private__paneCell.style.width = newSize.width + 'px';\n    this._private__paneCell.style.height = newSize.height + 'px';\n  }\n  _internal_recalculatePriceScales() {\n    const pane = ensureNotNull(this._private__state);\n    pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n    pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n    for (const source of pane._internal_dataSources()) {\n      if (pane._internal_isOverlay(source)) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale !== null) {\n          pane._internal_recalculatePriceScale(priceScale);\n        }\n        // for overlay drawings price scale is owner's price scale\n        // however owner's price scale could not contain ds\n        source._internal_updateAllViews();\n      }\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_paint(type) {\n    if (type === 0 /* InvalidationLevel.None */) {\n      return;\n    }\n    if (this._private__state === null) {\n      return;\n    }\n    if (type > 1 /* InvalidationLevel.Cursor */) {\n      this._internal_recalculatePriceScales();\n    }\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_paint(type);\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_paint(type);\n    }\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n        });\n        if (this._private__state) {\n          this._private__drawSources(target, sourceBottomPaneViews$1);\n          this._private__drawGrid(target);\n          this._private__drawWatermark(target);\n          this._private__drawSources(target, sourcePaneViews$1);\n          this._private__drawSources(target, sourceLabelPaneViews);\n        }\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawCrosshair(topTarget);\n      this._private__drawSources(topTarget, sourceTopPaneViews$1);\n    }\n  }\n  _internal_leftPriceAxisWidget() {\n    return this._private__leftPriceAxisWidget;\n  }\n  _internal_rightPriceAxisWidget() {\n    return this._private__rightPriceAxisWidget;\n  }\n  _internal_drawAdditionalSources(target, paneViewsGetter) {\n    this._private__drawSources(target, paneViewsGetter);\n  }\n  _private__onStateDestroyed() {\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__state = null;\n  }\n  _private__fireClickedDelegate(event) {\n    this._private__fireMouseClickDelegate(this._private__clicked, event);\n  }\n  _private__fireMouseClickDelegate(delegate, event) {\n    const x = event.localX;\n    const y = event.localY;\n    if (delegate._internal_hasListeners()) {\n      delegate._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), {\n        x,\n        y\n      }, event);\n    }\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    const {\n      width,\n      height\n    } = bitmapSize;\n    const model = this._private__model();\n    const topColor = model._internal_backgroundTopColor();\n    const bottomColor = model._internal_backgroundBottomColor();\n    if (topColor === bottomColor) {\n      clearRect(ctx, 0, 0, width, height, bottomColor);\n    } else {\n      clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n    }\n  }\n  _private__drawGrid(target) {\n    const state = ensureNotNull(this._private__state);\n    const paneView = state._internal_grid()._internal_paneView();\n    const renderer = paneView._internal_renderer();\n    if (renderer !== null) {\n      renderer._internal_draw(target, false);\n    }\n  }\n  _private__drawWatermark(target) {\n    const source = this._private__model()._internal_watermarkSource();\n    this._private__drawSourceImpl(target, sourcePaneViews$1, drawBackground, source);\n    this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, source);\n  }\n  _private__drawCrosshair(target) {\n    this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, this._private__model()._internal_crosshairSource());\n  }\n  _private__drawSources(target, paneViewsGetter) {\n    const state = ensureNotNull(this._private__state);\n    const sources = state._internal_orderedSources();\n    for (const source of sources) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n    }\n    for (const source of sources) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n    }\n  }\n  _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n    const state = ensureNotNull(this._private__state);\n    const hoveredSource = state._internal_model()._internal_hoveredSource();\n    const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n    const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined ? hoveredSource._internal_object._internal_hitTestData : undefined;\n    const drawRendererFn = renderer => drawFn(renderer, target, isHovered, objecId);\n    drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, state);\n  }\n  _private__recreatePriceAxisWidgets() {\n    if (this._private__state === null) {\n      return;\n    }\n    const chart = this._private__chart;\n    const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n    const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n    if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n      this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n      this._private__leftPriceAxisWidget._internal_destroy();\n      this._private__leftPriceAxisWidget = null;\n    }\n    if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n      this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n      this._private__rightPriceAxisWidget._internal_destroy();\n      this._private__rightPriceAxisWidget = null;\n    }\n    const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n    if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n      this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n      this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n    }\n    if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n      this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n      this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n    }\n  }\n  _private__preventScroll(event) {\n    return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n  }\n  _private__correctXCoord(x) {\n    return Math.max(0, Math.min(x, this._private__size.width - 1));\n  }\n  _private__correctYCoord(y) {\n    return Math.max(0, Math.min(y, this._private__size.height - 1));\n  }\n  _private__setCrosshairPosition(x, y, event) {\n    this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n  }\n  _private__clearCrosshairPosition() {\n    this._private__model()._internal_clearCurrentPosition();\n  }\n  _private__tryExitTrackingMode() {\n    if (this._private__exitTrackingModeOnNextTry) {\n      this._private__startTrackPoint = null;\n      this._private__clearCrosshairPosition();\n    }\n  }\n  _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n    this._private__startTrackPoint = startTrackPoint;\n    this._private__exitTrackingModeOnNextTry = false;\n    this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n    const crosshair = this._private__model()._internal_crosshairSource();\n    this._private__initCrosshairPosition = {\n      x: crosshair._internal_appliedX(),\n      y: crosshair._internal_appliedY()\n    };\n  }\n  _private__model() {\n    return this._private__chart._internal_model();\n  }\n  _private__endScroll(event) {\n    if (!this._private__isScrolling) {\n      return;\n    }\n    const model = this._private__model();\n    const state = this._internal_state();\n    model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n    this._private__startScrollingPos = null;\n    this._private__isScrolling = false;\n    model._internal_endScrollTime();\n    if (this._private__scrollXAnimation !== null) {\n      const startAnimationTime = performance.now();\n      const timeScale = model._internal_timeScale();\n      this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n      if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n        model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n      }\n    }\n  }\n  _private__onMouseEvent() {\n    this._private__startTrackPoint = null;\n  }\n  _private__mouseTouchDownEvent() {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__model()._internal_stopTimeScaleAnimation();\n    if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n      // If any focusable element except the page itself is focused, remove the focus\n      ensureNotNull(document.activeElement).blur();\n    } else {\n      // Clear selection\n      const selection = document.getSelection();\n      if (selection !== null) {\n        selection.removeAllRanges();\n      }\n    }\n    const priceScale = this._private__state._internal_defaultPriceScale();\n    if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n      return;\n    }\n  }\n  // eslint-disable-next-line complexity\n  _private__pressedMouseTouchMoveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    const model = this._private__model();\n    const timeScale = model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return;\n    }\n    const chartOptions = this._private__chart._internal_options();\n    const scrollOptions = chartOptions.handleScroll;\n    const kineticScrollOptions = chartOptions.kineticScroll;\n    if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) && (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n      return;\n    }\n    const priceScale = this._private__state._internal_defaultPriceScale();\n    const now = performance.now();\n    if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n      this._private__startScrollingPos = {\n        x: event.clientX,\n        y: event.clientY,\n        _internal_timestamp: now,\n        _internal_localX: event.localX,\n        _internal_localY: event.localY\n      };\n    }\n    if (this._private__startScrollingPos !== null && !this._private__isScrolling && (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n      if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n        const barSpacing = timeScale._internal_barSpacing();\n        this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n        this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n      } else {\n        this._private__scrollXAnimation = null;\n      }\n      if (!priceScale._internal_isEmpty()) {\n        model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n      }\n      model._internal_startScrollTime(event.localX);\n      this._private__isScrolling = true;\n    }\n    if (this._private__isScrolling) {\n      // this allows scrolling not default price scales\n      if (!priceScale._internal_isEmpty()) {\n        model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n      }\n      model._internal_scrollTimeTo(event.localX);\n      if (this._private__scrollXAnimation !== null) {\n        this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n      }\n    }\n  }\n}\nclass PriceAxisStub {\n  constructor(side, options, params, borderVisible, bottomColor) {\n    this._private__invalidated = true;\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n    this._private__isLeft = side === 'left';\n    this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n    this._private__options = options;\n    this._private__borderVisible = borderVisible;\n    this._private__bottomColor = bottomColor;\n    this._private__cell = document.createElement('div');\n    this._private__cell.style.width = '25px';\n    this._private__cell.style.height = '100%';\n    this._private__cell.style.overflow = 'hidden';\n    this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n  }\n  _internal_destroy() {\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n  }\n  _internal_getElement() {\n    return this._private__cell;\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_setSize(newSize) {\n    if (!equalSizes(this._private__size, newSize)) {\n      this._private__size = newSize;\n      this._private__canvasBinding.resizeCanvasElement(newSize);\n      this._private__cell.style.width = `${newSize.width}px`;\n      this._private__cell.style.height = `${newSize.height}px`;\n      this._private__invalidated = true;\n    }\n  }\n  _internal_paint(type) {\n    if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n      return;\n    }\n    if (this._private__size.width === 0 || this._private__size.height === 0) {\n      return;\n    }\n    this._private__invalidated = false;\n    this._private__canvasBinding.applySuggestedBitmapSize();\n    const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n    if (target !== null) {\n      target.useBitmapCoordinateSpace(scope => {\n        this._private__drawBackground(scope);\n        this._private__drawBorder(scope);\n      });\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (!this._private__borderVisible()) {\n      return;\n    }\n    ctx.fillStyle = this._private__options.timeScale.borderColor;\n    const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n    const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n    const left = this._private__isLeft ? bitmapSize.width - horzBorderSize : 0;\n    ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n  }\n}\nfunction buildTimeAxisViewsGetter(zOrder) {\n  return source => {\n    var _a, _b;\n    return (_b = (_a = source._internal_timePaneViews) === null || _a === void 0 ? void 0 : _a.call(source, zOrder)) !== null && _b !== void 0 ? _b : [];\n  };\n}\nconst sourcePaneViews = buildTimeAxisViewsGetter('normal');\nconst sourceTopPaneViews = buildTimeAxisViewsGetter('top');\nconst sourceBottomPaneViews = buildTimeAxisViewsGetter('bottom');\nclass TimeAxisWidget {\n  constructor(chartWidget, horzScaleBehavior) {\n    this._private__leftStub = null;\n    this._private__rightStub = null;\n    this._private__rendererOptions = null;\n    this._private__mouseDown = false;\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__sizeChanged = new Delegate();\n    this._private__widthCache = new TextWidthCache(5);\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (!this._private__isSettingSize) {\n        this._private__chart._internal_model()._internal_lightUpdate();\n      }\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (!this._private__isSettingSize) {\n        this._private__chart._internal_model()._internal_lightUpdate();\n      }\n    };\n    this._private__chart = chartWidget;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__options = chartWidget._internal_options().layout;\n    this._private__element = document.createElement('tr');\n    this._private__leftStubCell = document.createElement('td');\n    this._private__leftStubCell.style.padding = '0';\n    this._private__rightStubCell = document.createElement('td');\n    this._private__rightStubCell.style.padding = '0';\n    this._private__cell = document.createElement('td');\n    this._private__cell.style.height = '25px';\n    this._private__cell.style.padding = '0';\n    this._private__dv = document.createElement('div');\n    this._private__dv.style.width = '100%';\n    this._private__dv.style.height = '100%';\n    this._private__dv.style.position = 'relative';\n    this._private__dv.style.overflow = 'hidden';\n    this._private__cell.appendChild(this._private__dv);\n    this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    this._private__element.appendChild(this._private__leftStubCell);\n    this._private__element.appendChild(this._private__cell);\n    this._private__element.appendChild(this._private__rightStubCell);\n    this._private__recreateStubs();\n    this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n      _internal_treatVertTouchDragAsPageScroll: () => true,\n      _internal_treatHorzTouchDragAsPageScroll: () => !this._private__chart._internal_options().handleScroll.horzTouchDrag\n    });\n  }\n  _internal_destroy() {\n    this._private__mouseEventHandler._internal_destroy();\n    if (this._private__leftStub !== null) {\n      this._private__leftStub._internal_destroy();\n    }\n    if (this._private__rightStub !== null) {\n      this._private__rightStub._internal_destroy();\n    }\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__topCanvasBinding.canvasElement);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n  }\n  _internal_getElement() {\n    return this._private__element;\n  }\n  _internal_leftStub() {\n    return this._private__leftStub;\n  }\n  _internal_rightStub() {\n    return this._private__rightStub;\n  }\n  _internal_mouseDownEvent(event) {\n    if (this._private__mouseDown) {\n      return;\n    }\n    this._private__mouseDown = true;\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_startScaleTime(event.localX);\n  }\n  _internal_touchStartEvent(event) {\n    this._internal_mouseDownEvent(event);\n  }\n  _internal_mouseDownOutsideEvent() {\n    const model = this._private__chart._internal_model();\n    if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n      this._private__mouseDown = false;\n      if (this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n        model._internal_endScaleTime();\n      }\n    }\n  }\n  _internal_pressedMouseMoveEvent(event) {\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_scaleTimeTo(event.localX);\n  }\n  _internal_touchMoveEvent(event) {\n    this._internal_pressedMouseMoveEvent(event);\n  }\n  _internal_mouseUpEvent() {\n    this._private__mouseDown = false;\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_endScaleTime();\n  }\n  _internal_touchEndEvent() {\n    this._internal_mouseUpEvent();\n  }\n  _internal_mouseDoubleClickEvent() {\n    if (this._private__chart._internal_options().handleScale.axisDoubleClickReset.time) {\n      this._private__chart._internal_model()._internal_resetTimeScale();\n    }\n  }\n  _internal_doubleTapEvent() {\n    this._internal_mouseDoubleClickEvent();\n  }\n  _internal_mouseEnterEvent() {\n    if (this._private__chart._internal_model()._internal_options().handleScale.axisPressedMouseMove.time) {\n      this._private__setCursor(1 /* CursorType.EwResize */);\n    }\n  }\n  _internal_mouseLeaveEvent() {\n    this._private__setCursor(0 /* CursorType.Default */);\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_sizeChanged() {\n    return this._private__sizeChanged;\n  }\n  _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n    if (!equalSizes(this._private__size, timeAxisSize)) {\n      this._private__size = timeAxisSize;\n      this._private__isSettingSize = true;\n      this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n      this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n      this._private__isSettingSize = false;\n      this._private__cell.style.width = `${timeAxisSize.width}px`;\n      this._private__cell.style.height = `${timeAxisSize.height}px`;\n      this._private__sizeChanged._internal_fire(timeAxisSize);\n    }\n    if (this._private__leftStub !== null) {\n      this._private__leftStub._internal_setSize(size$1({\n        width: leftStubWidth,\n        height: timeAxisSize.height\n      }));\n    }\n    if (this._private__rightStub !== null) {\n      this._private__rightStub._internal_setSize(size$1({\n        width: rightStubWidth,\n        height: timeAxisSize.height\n      }));\n    }\n  }\n  _internal_optimalHeight() {\n    const rendererOptions = this._private__getRendererOptions();\n    return Math.ceil(\n    // rendererOptions.offsetSize +\n    rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom + rendererOptions._internal_labelBottomOffset);\n  }\n  _internal_update() {\n    // this call has side-effect - it regenerates marks on the time scale\n    this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_paint(type) {\n    if (type === 0 /* InvalidationLevel.None */) {\n      return;\n    }\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n          this._private__drawBorder(scope);\n          this._private__drawAdditionalSources(target, sourceBottomPaneViews);\n        });\n        this._private__drawTickMarks(target);\n        this._private__drawAdditionalSources(target, sourcePaneViews);\n        // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n        // so let's don't call this code at all for now\n        // this._drawLabels(this._chart.model().dataSources(), target);\n      }\n      if (this._private__leftStub !== null) {\n        this._private__leftStub._internal_paint(type);\n      }\n      if (this._private__rightStub !== null) {\n        this._private__rightStub._internal_paint(type);\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawLabels([...this._private__chart._internal_model()._internal_serieses(), this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n      this._private__drawAdditionalSources(topTarget, sourceTopPaneViews);\n    }\n  }\n  _private__drawAdditionalSources(target, axisViewsGetter) {\n    const sources = this._private__chart._internal_model()._internal_serieses();\n    for (const source of sources) {\n      drawSourcePaneViews(axisViewsGetter, renderer => drawBackground(renderer, target, false, undefined), source, undefined);\n    }\n    for (const source of sources) {\n      drawSourcePaneViews(axisViewsGetter, renderer => drawForeground(renderer, target, false, undefined), source, undefined);\n    }\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    verticalPixelRatio\n  }) {\n    if (this._private__chart._internal_options().timeScale.borderVisible) {\n      ctx.fillStyle = this._private__lineColor();\n      const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n      ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n    }\n  }\n  _private__drawTickMarks(target) {\n    const timeScale = this._private__chart._internal_model()._internal_timeScale();\n    const tickMarks = timeScale._internal_marks();\n    if (!tickMarks || tickMarks.length === 0) {\n      return;\n    }\n    const maxWeight = this._private__horzScaleBehavior.maxTickMarkWeight(tickMarks);\n    const rendererOptions = this._private__getRendererOptions();\n    const options = timeScale._internal_options();\n    if (options.borderVisible && options.ticksVisible) {\n      target.useBitmapCoordinateSpace(({\n        context: ctx,\n        horizontalPixelRatio,\n        verticalPixelRatio\n      }) => {\n        ctx.strokeStyle = this._private__lineColor();\n        ctx.fillStyle = this._private__lineColor();\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n        ctx.beginPath();\n        const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n        for (let index = tickMarks.length; index--;) {\n          const x = Math.round(tickMarks[index].coord * horizontalPixelRatio);\n          ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n        }\n        ctx.fill();\n      });\n    }\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const yText = rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize / 2;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = this._private__textColor();\n      // draw base marks\n      ctx.font = this._private__baseFont();\n      for (const tickMark of tickMarks) {\n        if (tickMark.weight < maxWeight) {\n          const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n          ctx.fillText(tickMark.label, coordinate, yText);\n        }\n      }\n      ctx.font = this._private__baseBoldFont();\n      for (const tickMark of tickMarks) {\n        if (tickMark.weight >= maxWeight) {\n          const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n          ctx.fillText(tickMark.label, coordinate, yText);\n        }\n      }\n    });\n  }\n  _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n    const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n    const labelWidthHalf = labelWidth / 2;\n    const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    if (leftTextCoordinate < 0) {\n      coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n    } else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n      coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n    }\n    return coordinate;\n  }\n  _private__drawLabels(sources, target) {\n    const rendererOptions = this._private__getRendererOptions();\n    for (const source of sources) {\n      for (const view of source._internal_timeAxisViews()) {\n        view._internal_renderer()._internal_draw(target, rendererOptions);\n      }\n    }\n  }\n  _private__lineColor() {\n    return this._private__chart._internal_options().timeScale.borderColor;\n  }\n  _private__textColor() {\n    return this._private__options.textColor;\n  }\n  _private__fontSize() {\n    return this._private__options.fontSize;\n  }\n  _private__baseFont() {\n    return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n  }\n  _private__baseBoldFont() {\n    return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n  }\n  _private__getRendererOptions() {\n    if (this._private__rendererOptions === null) {\n      this._private__rendererOptions = {\n        _internal_borderSize: 1 /* Constants.BorderSize */,\n        _internal_baselineOffset: NaN,\n        _internal_paddingTop: NaN,\n        _internal_paddingBottom: NaN,\n        _internal_paddingHorizontal: NaN,\n        _internal_tickLength: 5 /* Constants.TickLength */,\n        _internal_fontSize: NaN,\n        _internal_font: '',\n        _internal_widthCache: new TextWidthCache(),\n        _internal_labelBottomOffset: 0\n      };\n    }\n    const rendererOptions = this._private__rendererOptions;\n    const newFont = this._private__baseFont();\n    if (rendererOptions._internal_font !== newFont) {\n      const fontSize = this._private__fontSize();\n      rendererOptions._internal_fontSize = fontSize;\n      rendererOptions._internal_font = newFont;\n      rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n      rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n      rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n      rendererOptions._internal_baselineOffset = 0;\n      rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n      rendererOptions._internal_widthCache._internal_reset();\n    }\n    return this._private__rendererOptions;\n  }\n  _private__setCursor(type) {\n    this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n  }\n  _private__recreateStubs() {\n    const model = this._private__chart._internal_model();\n    const options = model._internal_options();\n    if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n      this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n      this._private__leftStub._internal_destroy();\n      this._private__leftStub = null;\n    }\n    if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n      this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n      this._private__rightStub._internal_destroy();\n      this._private__rightStub = null;\n    }\n    const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n    const params = {\n      _internal_rendererOptionsProvider: rendererOptionsProvider\n    };\n    const borderVisibleGetter = () => {\n      return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n    };\n    const bottomColorGetter = () => model._internal_backgroundBottomColor();\n    if (options.leftPriceScale.visible && this._private__leftStub === null) {\n      this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n      this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n    }\n    if (options.rightPriceScale.visible && this._private__rightStub === null) {\n      this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n      this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n    }\n  }\n}\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n  constructor(container, options, horzScaleBehavior) {\n    this._private__paneWidgets = [];\n    this._private__drawRafId = 0;\n    this._private__height = 0;\n    this._private__width = 0;\n    this._private__leftPriceAxisWidth = 0;\n    this._private__rightPriceAxisWidth = 0;\n    this._private__invalidateMask = null;\n    this._private__drawPlanned = false;\n    this._private__clicked = new Delegate();\n    this._private__dblClicked = new Delegate();\n    this._private__crosshairMoved = new Delegate();\n    this._private__observer = null;\n    this._private__cursorStyleOverride = null;\n    this._private__container = container;\n    this._private__options = options;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__element = document.createElement('div');\n    this._private__element.classList.add('tv-lightweight-charts');\n    this._private__element.style.overflow = 'hidden';\n    this._private__element.style.direction = 'ltr';\n    this._private__element.style.width = '100%';\n    this._private__element.style.height = '100%';\n    disableSelection(this._private__element);\n    this._private__tableElement = document.createElement('table');\n    this._private__tableElement.setAttribute('cellspacing', '0');\n    this._private__element.appendChild(this._private__tableElement);\n    this._private__onWheelBound = this._private__onMousewheel.bind(this);\n    if (shouldSubscribeMouseWheel(this._private__options)) {\n      this._private__setMouseWheelEventListener(true);\n    }\n    this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options, horzScaleBehavior);\n    this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n    this._private__timeAxisWidget = new TimeAxisWidget(this, this._private__horzScaleBehavior);\n    this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n    const usedObserver = options.autoSize && this._private__installObserver();\n    // observer could not fire event immediately for some cases\n    // so we have to set initial size manually\n    let width = this._private__options.width;\n    let height = this._private__options.height;\n    // ignore width/height options if observer has actually been used\n    // however respect options if installing resize observer failed\n    if (usedObserver || width === 0 || height === 0) {\n      const containerRect = container.getBoundingClientRect();\n      width = width || containerRect.width;\n      height = height || containerRect.height;\n    }\n    // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n    // or after but with adjustSize to properly update time scale\n    this._internal_resize(width, height);\n    this._private__syncGuiWithModel();\n    container.appendChild(this._private__element);\n    this._private__updateTimeAxisVisibility();\n    this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_paneWidgets() {\n    return this._private__paneWidgets;\n  }\n  _internal_timeAxisWidget() {\n    return this._private__timeAxisWidget;\n  }\n  _internal_destroy() {\n    this._private__setMouseWheelEventListener(false);\n    if (this._private__drawRafId !== 0) {\n      window.cancelAnimationFrame(this._private__drawRafId);\n    }\n    this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n    this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n    this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n    this._private__model._internal_destroy();\n    for (const paneWidget of this._private__paneWidgets) {\n      this._private__tableElement.removeChild(paneWidget._internal_getElement());\n      paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_destroy();\n    }\n    this._private__paneWidgets = [];\n    // for (const paneSeparator of this._paneSeparators) {\n    // \tthis._destroySeparator(paneSeparator);\n    // }\n    // this._paneSeparators = [];\n    ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n    if (this._private__element.parentElement !== null) {\n      this._private__element.parentElement.removeChild(this._private__element);\n    }\n    this._private__crosshairMoved._internal_destroy();\n    this._private__clicked._internal_destroy();\n    this._private__dblClicked._internal_destroy();\n    this._private__uninstallObserver();\n  }\n  _internal_resize(width, height, forceRepaint = false) {\n    if (this._private__height === height && this._private__width === width) {\n      return;\n    }\n    const sizeHint = suggestChartSize(size$1({\n      width,\n      height\n    }));\n    this._private__height = sizeHint.height;\n    this._private__width = sizeHint.width;\n    const heightStr = this._private__height + 'px';\n    const widthStr = this._private__width + 'px';\n    ensureNotNull(this._private__element).style.height = heightStr;\n    ensureNotNull(this._private__element).style.width = widthStr;\n    this._private__tableElement.style.height = heightStr;\n    this._private__tableElement.style.width = widthStr;\n    if (forceRepaint) {\n      this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n    } else {\n      this._private__model._internal_fullUpdate();\n    }\n  }\n  _internal_paint(invalidateMask) {\n    if (invalidateMask === undefined) {\n      invalidateMask = InvalidateMask._internal_full();\n    }\n    for (let i = 0; i < this._private__paneWidgets.length; i++) {\n      this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n    }\n    if (this._private__options.timeScale.visible) {\n      this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n    }\n  }\n  _internal_applyOptions(options) {\n    const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n    // we don't need to merge options here because it's done in chart model\n    // and since both model and widget share the same object it will be done automatically for widget as well\n    // not ideal solution for sure, but it work's for now Â¯\\_(ãƒ„)_/Â¯\n    this._private__model._internal_applyOptions(options);\n    const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n    if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n      this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n    }\n    this._private__updateTimeAxisVisibility();\n    this._private__applyAutoSizeOptions(options);\n  }\n  _internal_clicked() {\n    return this._private__clicked;\n  }\n  _internal_dblClicked() {\n    return this._private__dblClicked;\n  }\n  _internal_crosshairMoved() {\n    return this._private__crosshairMoved;\n  }\n  _internal_takeScreenshot() {\n    if (this._private__invalidateMask !== null) {\n      this._private__drawImpl(this._private__invalidateMask, performance.now());\n      this._private__invalidateMask = null;\n    }\n    const screeshotBitmapSize = this._private__traverseLayout(null);\n    const screenshotCanvas = document.createElement('canvas');\n    screenshotCanvas.width = screeshotBitmapSize.width;\n    screenshotCanvas.height = screeshotBitmapSize.height;\n    const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n    this._private__traverseLayout(ctx);\n    return screenshotCanvas;\n  }\n  _internal_getPriceAxisWidth(position) {\n    if (position === 'left' && !this._private__isLeftAxisVisible()) {\n      return 0;\n    }\n    if (position === 'right' && !this._private__isRightAxisVisible()) {\n      return 0;\n    }\n    if (this._private__paneWidgets.length === 0) {\n      return 0;\n    }\n    // we don't need to worry about exactly pane widget here\n    // because all pane widgets have the same width of price axis widget\n    // see _adjustSizeImpl\n    const priceAxisWidget = position === 'left' ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget() : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n    return ensureNotNull(priceAxisWidget)._internal_getWidth();\n  }\n  _internal_autoSizeActive() {\n    return this._private__options.autoSize && this._private__observer !== null;\n  }\n  _internal_element() {\n    return this._private__element;\n  }\n  _internal_setCursorStyle(style) {\n    this._private__cursorStyleOverride = style;\n    if (this._private__cursorStyleOverride) {\n      this._internal_element().style.setProperty('cursor', style);\n    } else {\n      this._internal_element().style.removeProperty('cursor');\n    }\n  }\n  _internal_getCursorOverrideStyle() {\n    return this._private__cursorStyleOverride;\n  }\n  _internal_paneSize() {\n    // we currently only support a single pane.\n    return ensureDefined(this._private__paneWidgets[0])._internal_getSize();\n  }\n  // eslint-disable-next-line complexity\n  _private__applyAutoSizeOptions(options) {\n    if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n      warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n      return;\n    }\n    if (options.autoSize && !this._private__observer) {\n      // installing observer will override resize if successful\n      this._private__installObserver();\n    }\n    if (options.autoSize === false && this._private__observer !== null) {\n      this._private__uninstallObserver();\n    }\n    if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n      this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n    }\n  }\n  /**\n   * Traverses the widget's layout (pane and axis child widgets),\n   * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n   *\n   * @param ctx - if passed, used to draw the screenshot of widget\n   * @returns screenshot bitmap size\n   */\n  _private__traverseLayout(ctx) {\n    let totalWidth = 0;\n    let totalHeight = 0;\n    const firstPane = this._private__paneWidgets[0];\n    const drawPriceAxises = (position, targetX) => {\n      let targetY = 0;\n      for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n        const paneWidget = this._private__paneWidgets[paneIndex];\n        const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n        const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n        if (ctx !== null) {\n          priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n        }\n        targetY += bitmapSize.height;\n        // if (paneIndex < this._paneWidgets.length - 1) {\n        // \tconst separator = this._paneSeparators[paneIndex];\n        // \tconst separatorBitmapSize = separator.getBitmapSize();\n        // \tif (ctx !== null) {\n        // \t\tseparator.drawBitmap(ctx, targetX, targetY);\n        // \t}\n        // \ttargetY += separatorBitmapSize.height;\n        // }\n      }\n    };\n    // draw left price scale if exists\n    if (this._private__isLeftAxisVisible()) {\n      drawPriceAxises('left', 0);\n      const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n      totalWidth += leftAxisBitmapWidth;\n    }\n    for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n      const paneWidget = this._private__paneWidgets[paneIndex];\n      const bitmapSize = paneWidget._internal_getBitmapSize();\n      if (ctx !== null) {\n        paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n      }\n      totalHeight += bitmapSize.height;\n      // if (paneIndex < this._paneWidgets.length - 1) {\n      // \tconst separator = this._paneSeparators[paneIndex];\n      // \tconst separatorBitmapSize = separator.getBitmapSize();\n      // \tif (ctx !== null) {\n      // \t\tseparator.drawBitmap(ctx, totalWidth, totalHeight);\n      // \t}\n      // \ttotalHeight += separatorBitmapSize.height;\n      // }\n    }\n    const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n    totalWidth += firstPaneBitmapWidth;\n    // draw right price scale if exists\n    if (this._private__isRightAxisVisible()) {\n      drawPriceAxises('right', totalWidth);\n      const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n      totalWidth += rightAxisBitmapWidth;\n    }\n    const drawStub = (position, targetX, targetY) => {\n      const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n      stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n    };\n    // draw time scale and stubs\n    if (this._private__options.timeScale.visible) {\n      const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n      if (ctx !== null) {\n        let targetX = 0;\n        if (this._private__isLeftAxisVisible()) {\n          drawStub('left', targetX, totalHeight);\n          targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n        }\n        this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n        targetX += timeAxisBitmapSize.width;\n        if (this._private__isRightAxisVisible()) {\n          drawStub('right', targetX, totalHeight);\n        }\n      }\n      totalHeight += timeAxisBitmapSize.height;\n    }\n    return size$1({\n      width: totalWidth,\n      height: totalHeight\n    });\n  }\n  // eslint-disable-next-line complexity\n  _private__adjustSizeImpl() {\n    let totalStretch = 0;\n    let leftPriceAxisWidth = 0;\n    let rightPriceAxisWidth = 0;\n    for (const paneWidget of this._private__paneWidgets) {\n      if (this._private__isLeftAxisVisible()) {\n        leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth(), this._private__options.leftPriceScale.minimumWidth);\n      }\n      if (this._private__isRightAxisVisible()) {\n        rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth(), this._private__options.rightPriceScale.minimumWidth);\n      }\n      totalStretch += paneWidget._internal_stretchFactor();\n    }\n    leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n    rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n    const width = this._private__width;\n    const height = this._private__height;\n    const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n    // const separatorCount = this._paneSeparators.length;\n    // const separatorHeight = SEPARATOR_HEIGHT;\n    const separatorsHeight = 0; // separatorHeight * separatorCount;\n    const timeAxisVisible = this._private__options.timeScale.visible;\n    let timeAxisHeight = timeAxisVisible ? Math.max(this._private__timeAxisWidget._internal_optimalHeight(), this._private__options.timeScale.minimumHeight) : 0;\n    timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n    const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n    const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n    const stretchPixels = totalPaneHeight / totalStretch;\n    let accumulatedHeight = 0;\n    for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n      const paneWidget = this._private__paneWidgets[paneIndex];\n      paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n      let paneHeight = 0;\n      let calculatePaneHeight = 0;\n      if (paneIndex === this._private__paneWidgets.length - 1) {\n        calculatePaneHeight = totalPaneHeight - accumulatedHeight;\n      } else {\n        calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels);\n      }\n      paneHeight = Math.max(calculatePaneHeight, 2);\n      accumulatedHeight += paneHeight;\n      paneWidget._internal_setSize(size$1({\n        width: paneWidth,\n        height: paneHeight\n      }));\n      if (this._private__isLeftAxisVisible()) {\n        paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n      }\n      if (this._private__isRightAxisVisible()) {\n        paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n      }\n      if (paneWidget._internal_state()) {\n        this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n      }\n    }\n    this._private__timeAxisWidget._internal_setSizes(size$1({\n      width: timeAxisVisible ? paneWidth : 0,\n      height: timeAxisHeight\n    }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n    this._private__model._internal_setWidth(paneWidth);\n    if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n      this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n    }\n    if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n      this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n    }\n  }\n  _private__setMouseWheelEventListener(add) {\n    if (add) {\n      this._private__element.addEventListener('wheel', this._private__onWheelBound, {\n        passive: false\n      });\n      return;\n    }\n    this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n  }\n  _private__determineWheelSpeedAdjustment(event) {\n    switch (event.deltaMode) {\n      case event.DOM_DELTA_PAGE:\n        // one screen at time scroll mode\n        return 120;\n      case event.DOM_DELTA_LINE:\n        // one line at time scroll mode\n        return 32;\n    }\n    if (!windowsChrome) {\n      return 1;\n    }\n    // Chromium on Windows has a bug where the scroll speed isn't correctly\n    // adjusted for high density displays. We need to correct for this so that\n    // scroll speed is consistent between browsers.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n    return 1 / window.devicePixelRatio;\n  }\n  _private__onMousewheel(event) {\n    if ((event.deltaX === 0 || !this._private__options.handleScroll.mouseWheel) && (event.deltaY === 0 || !this._private__options.handleScale.mouseWheel)) {\n      return;\n    }\n    const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n    const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n    const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    if (deltaY !== 0 && this._private__options.handleScale.mouseWheel) {\n      const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n      const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n      this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n    }\n    if (deltaX !== 0 && this._private__options.handleScroll.mouseWheel) {\n      this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n    }\n  }\n  _private__drawImpl(invalidateMask, time) {\n    var _a;\n    const invalidationType = invalidateMask._internal_fullInvalidation();\n    // actions for full invalidation ONLY (not shared with light)\n    if (invalidationType === 3 /* InvalidationLevel.Full */) {\n      this._private__updateGui();\n    }\n    // light or full invalidate actions\n    if (invalidationType === 3 /* InvalidationLevel.Full */ || invalidationType === 2 /* InvalidationLevel.Light */) {\n      this._private__applyMomentaryAutoScale(invalidateMask);\n      this._private__applyTimeScaleInvalidations(invalidateMask, time);\n      this._private__timeAxisWidget._internal_update();\n      this._private__paneWidgets.forEach(pane => {\n        pane._internal_updatePriceAxisWidgets();\n      });\n      // In the case a full invalidation has been postponed during the draw, reapply\n      // the timescale invalidations. A full invalidation would mean there is a change\n      // in the timescale width (caused by price scale changes) that needs to be drawn\n      // right away to avoid flickering.\n      if (((_a = this._private__invalidateMask) === null || _a === void 0 ? void 0 : _a._internal_fullInvalidation()) === 3 /* InvalidationLevel.Full */) {\n        this._private__invalidateMask._internal_merge(invalidateMask);\n        this._private__updateGui();\n        this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n        this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n        invalidateMask = this._private__invalidateMask;\n        this._private__invalidateMask = null;\n      }\n    }\n    this._internal_paint(invalidateMask);\n  }\n  _private__applyTimeScaleInvalidations(invalidateMask, time) {\n    for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n      this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n    }\n  }\n  _private__applyMomentaryAutoScale(invalidateMask) {\n    const panes = this._private__model._internal_panes();\n    for (let i = 0; i < panes.length; i++) {\n      if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n        panes[i]._internal_momentaryAutoScale();\n      }\n    }\n  }\n  _private__applyTimeScaleInvalidation(invalidation, time) {\n    const timeScale = this._private__model._internal_timeScale();\n    switch (invalidation._internal_type) {\n      case 0 /* TimeScaleInvalidationType.FitContent */:\n        timeScale._internal_fitContent();\n        break;\n      case 1 /* TimeScaleInvalidationType.ApplyRange */:\n        timeScale._internal_setLogicalRange(invalidation._internal_value);\n        break;\n      case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n        timeScale._internal_setBarSpacing(invalidation._internal_value);\n        break;\n      case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n        timeScale._internal_setRightOffset(invalidation._internal_value);\n        break;\n      case 4 /* TimeScaleInvalidationType.Reset */:\n        timeScale._internal_restoreDefault();\n        break;\n      case 5 /* TimeScaleInvalidationType.Animation */:\n        if (!invalidation._internal_value._internal_finished(time)) {\n          timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n        }\n        break;\n    }\n  }\n  _private__invalidateHandler(invalidateMask) {\n    if (this._private__invalidateMask !== null) {\n      this._private__invalidateMask._internal_merge(invalidateMask);\n    } else {\n      this._private__invalidateMask = invalidateMask;\n    }\n    if (!this._private__drawPlanned) {\n      this._private__drawPlanned = true;\n      this._private__drawRafId = window.requestAnimationFrame(time => {\n        this._private__drawPlanned = false;\n        this._private__drawRafId = 0;\n        if (this._private__invalidateMask !== null) {\n          const mask = this._private__invalidateMask;\n          this._private__invalidateMask = null;\n          this._private__drawImpl(mask, time);\n          for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n            if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n              this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n  _private__updateGui() {\n    this._private__syncGuiWithModel();\n  }\n  // private _destroySeparator(separator: PaneSeparator): void {\n  // \tthis._tableElement.removeChild(separator.getElement());\n  // \tseparator.destroy();\n  // }\n  _private__syncGuiWithModel() {\n    const panes = this._private__model._internal_panes();\n    const targetPaneWidgetsCount = panes.length;\n    const actualPaneWidgetsCount = this._private__paneWidgets.length;\n    // Remove (if needed) pane widgets and separators\n    for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n      const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n      this._private__tableElement.removeChild(paneWidget._internal_getElement());\n      paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_destroy();\n      // const paneSeparator = this._paneSeparators.pop();\n      // if (paneSeparator !== undefined) {\n      // \tthis._destroySeparator(paneSeparator);\n      // }\n    }\n    // Create (if needed) new pane widgets and separators\n    for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n      const paneWidget = new PaneWidget(this, panes[i]);\n      paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this), this);\n      paneWidget._internal_dblClicked()._internal_subscribe(this._private__onPaneWidgetDblClicked.bind(this), this);\n      this._private__paneWidgets.push(paneWidget);\n      // create and insert separator\n      // if (i > 1) {\n      // \tconst paneSeparator = new PaneSeparator(this, i - 1, i, true);\n      // \tthis._paneSeparators.push(paneSeparator);\n      // \tthis._tableElement.insertBefore(paneSeparator.getElement(), this._timeAxisWidget.getElement());\n      // }\n      // insert paneWidget\n      this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n    }\n    for (let i = 0; i < targetPaneWidgetsCount; i++) {\n      const state = panes[i];\n      const paneWidget = this._private__paneWidgets[i];\n      if (paneWidget._internal_state() !== state) {\n        paneWidget._internal_setState(state);\n      } else {\n        paneWidget._internal_updatePriceAxisWidgetsStates();\n      }\n    }\n    this._private__updateTimeAxisVisibility();\n    this._private__adjustSizeImpl();\n  }\n  _private__getMouseEventParamsImpl(index, point, event) {\n    var _a;\n    const seriesData = new Map();\n    if (index !== null) {\n      const serieses = this._private__model._internal_serieses();\n      serieses.forEach(s => {\n        // TODO: replace with search left\n        const data = s._internal_bars()._internal_search(index);\n        if (data !== null) {\n          seriesData.set(s, data);\n        }\n      });\n    }\n    let clientTime;\n    if (index !== null) {\n      const timePoint = (_a = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)) === null || _a === void 0 ? void 0 : _a.originalTime;\n      if (timePoint !== undefined) {\n        clientTime = timePoint;\n      }\n    }\n    const hoveredSource = this._internal_model()._internal_hoveredSource();\n    const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series ? hoveredSource._internal_source : undefined;\n    const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined ? hoveredSource._internal_object._internal_externalId : undefined;\n    return {\n      _internal_originalTime: clientTime,\n      _internal_index: index !== null && index !== void 0 ? index : undefined,\n      _internal_point: point !== null && point !== void 0 ? point : undefined,\n      _internal_hoveredSeries: hoveredSeries,\n      _internal_seriesData: seriesData,\n      _internal_hoveredObject: hoveredObject,\n      _internal_touchMouseEventData: event !== null && event !== void 0 ? event : undefined\n    };\n  }\n  _private__onPaneWidgetClicked(time, point, event) {\n    this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n  }\n  _private__onPaneWidgetDblClicked(time, point, event) {\n    this._private__dblClicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n  }\n  _private__onPaneWidgetCrosshairMoved(time, point, event) {\n    this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n  }\n  _private__updateTimeAxisVisibility() {\n    const display = this._private__options.timeScale.visible ? '' : 'none';\n    this._private__timeAxisWidget._internal_getElement().style.display = display;\n  }\n  _private__isLeftAxisVisible() {\n    return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n  }\n  _private__isRightAxisVisible() {\n    return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n  }\n  _private__installObserver() {\n    // eslint-disable-next-line no-restricted-syntax\n    if (!('ResizeObserver' in window)) {\n      warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n      return false;\n    } else {\n      this._private__observer = new ResizeObserver(entries => {\n        const containerEntry = entries.find(entry => entry.target === this._private__container);\n        if (!containerEntry) {\n          return;\n        }\n        this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n      });\n      this._private__observer.observe(this._private__container, {\n        box: 'border-box'\n      });\n      return true;\n    }\n  }\n  _private__uninstallObserver() {\n    if (this._private__observer !== null) {\n      this._private__observer.disconnect();\n    }\n    this._private__observer = null;\n  }\n}\nfunction disableSelection(element) {\n  element.style.userSelect = 'none';\n  // eslint-disable-next-line deprecation/deprecation\n  element.style.webkitUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.msUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.MozUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n  return Boolean(options.handleScroll.mouseWheel || options.handleScale.mouseWheel);\n}\nfunction isWhitespaceData(data) {\n  return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n  return data.open !== undefined || data.value !== undefined;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.lineColor !== undefined) {\n    res._internal_lineColor = item.lineColor;\n  }\n  if (item.topColor !== undefined) {\n    res._internal_topColor = item.topColor;\n  }\n  if (item.bottomColor !== undefined) {\n    res._internal_bottomColor = item.bottomColor;\n  }\n  return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.topLineColor !== undefined) {\n    res._internal_topLineColor = item.topLineColor;\n  }\n  if (item.bottomLineColor !== undefined) {\n    res._internal_bottomLineColor = item.bottomLineColor;\n  }\n  if (item.topFillColor1 !== undefined) {\n    res._internal_topFillColor1 = item.topFillColor1;\n  }\n  if (item.topFillColor2 !== undefined) {\n    res._internal_topFillColor2 = item.topFillColor2;\n  }\n  if (item.bottomFillColor1 !== undefined) {\n    res._internal_bottomFillColor1 = item.bottomFillColor1;\n  }\n  if (item.bottomFillColor2 !== undefined) {\n    res._internal_bottomFillColor2 = item.bottomFillColor2;\n  }\n  return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [item.open, item.high, item.low, item.close],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [item.open, item.high, item.low, item.close],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  if (item.borderColor !== undefined) {\n    res._internal_borderColor = item.borderColor;\n  }\n  if (item.wickColor !== undefined) {\n    res._internal_wickColor = item.wickColor;\n  }\n  return res;\n}\nfunction getCustomSeriesPlotRow(time, index, item, originalTime, dataToPlotRow) {\n  const values = ensureDefined(dataToPlotRow)(item);\n  const max = Math.max(...values);\n  const min = Math.min(...values);\n  const last = values[values.length - 1];\n  const value = [last, max, min, last];\n  const _a = item,\n    {\n      time: excludedTime,\n      color\n    } = _a,\n    data = __rest(_a, [\"time\", \"color\"]);\n  return {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: value,\n    _internal_originalTime: originalTime,\n    _internal_data: data,\n    _internal_color: color\n  };\n}\nfunction isSeriesPlotRow(row) {\n  return row._internal_value !== undefined;\n}\nfunction wrapCustomValues(plotRow, bar) {\n  if (bar.customValues !== undefined) {\n    plotRow._internal_customValues = bar.customValues;\n  }\n  return plotRow;\n}\nfunction isWhitespaceDataWithCustomCheck(bar, customIsWhitespace) {\n  if (customIsWhitespace) {\n    return customIsWhitespace(bar);\n  }\n  return isWhitespaceData(bar);\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n  return (time, index, bar, originalTime, dataToPlotRow, customIsWhitespace) => {\n    if (isWhitespaceDataWithCustomCheck(bar, customIsWhitespace)) {\n      return wrapCustomValues({\n        _internal_time: time,\n        _internal_index: index,\n        _internal_originalTime: originalTime\n      }, bar);\n    }\n    return wrapCustomValues(createPlotRowFn(time, index, bar, originalTime, dataToPlotRow), bar);\n  };\n}\nfunction getSeriesPlotRowCreator(seriesType) {\n  const seriesPlotRowFnMap = {\n    Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n    Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n    Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n    Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n    Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n    Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n    Custom: wrapWhitespaceData(getCustomSeriesPlotRow)\n  };\n  return seriesPlotRowFnMap[seriesType];\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction createEmptyTimePointData(timePoint) {\n  return {\n    _internal_index: 0,\n    _internal_mapping: new Map(),\n    _internal_timePoint: timePoint\n  };\n}\nfunction seriesRowsFirstAndLastTime(seriesRows, bh) {\n  if (seriesRows === undefined || seriesRows.length === 0) {\n    return undefined;\n  }\n  return {\n    _internal_firstTime: bh.key(seriesRows[0]._internal_time),\n    _internal_lastTime: bh.key(seriesRows[seriesRows.length - 1]._internal_time)\n  };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows, bh) {\n  const firstAndLastTime = seriesRowsFirstAndLastTime(seriesRows, bh);\n  const prevFirstAndLastTime = seriesRowsFirstAndLastTime(prevSeriesRows, bh);\n  if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n    return {\n      _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime && firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime\n    };\n  }\n  return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n  let result;\n  mergedPointData.forEach(v => {\n    if (result === undefined) {\n      result = v._internal_originalTime;\n    }\n  });\n  return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n  if (data._internal_originalTime === undefined) {\n    data._internal_originalTime = data.time;\n  }\n}\nclass DataLayer {\n  constructor(horzScaleBehavior) {\n    // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n    // it's just different kind of maps to make usages/perf better\n    this._private__pointDataByTimePoint = new Map();\n    this._private__seriesRowsBySeries = new Map();\n    this._private__seriesLastTimePoint = new Map();\n    // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n    this._private__sortedTimePoints = [];\n    this._private__horzScaleBehavior = horzScaleBehavior;\n  }\n  _internal_destroy() {\n    this._private__pointDataByTimePoint.clear();\n    this._private__seriesRowsBySeries.clear();\n    this._private__seriesLastTimePoint.clear();\n    this._private__sortedTimePoints = [];\n  }\n  _internal_setSeriesData(series, data) {\n    let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n    let isTimeScaleAffected = false;\n    // save previous series rows data before it's replaced inside this._setRowsToSeries\n    const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n    if (prevSeriesRows !== undefined) {\n      if (this._private__seriesRowsBySeries.size === 1) {\n        needCleanupPoints = false;\n        isTimeScaleAffected = true;\n        // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n        this._private__pointDataByTimePoint.clear();\n      } else {\n        // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n        // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n        for (const point of this._private__sortedTimePoints) {\n          if (point.pointData._internal_mapping.delete(series)) {\n            isTimeScaleAffected = true;\n          }\n        }\n      }\n    }\n    let seriesRows = [];\n    if (data.length !== 0) {\n      const originalTimes = data.map(d => d.time);\n      const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj(data);\n      const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n      const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n      const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n      seriesRows = data.map((item, index) => {\n        const time = timeConverter(item.time);\n        const horzItemKey = this._private__horzScaleBehavior.key(time);\n        let timePointData = this._private__pointDataByTimePoint.get(horzItemKey);\n        if (timePointData === undefined) {\n          // the indexes will be sync later\n          timePointData = createEmptyTimePointData(time);\n          this._private__pointDataByTimePoint.set(horzItemKey, timePointData);\n          isTimeScaleAffected = true;\n        }\n        const row = createPlotRow(time, timePointData._internal_index, item, originalTimes[index], dataToPlotRow, customWhitespaceChecker);\n        timePointData._internal_mapping.set(series, row);\n        return row;\n      });\n    }\n    if (needCleanupPoints) {\n      // we deleted the old data from mapping and added the new ones\n      // so there might be empty points now, let's remove them first\n      this._private__cleanupPointsData();\n    }\n    this._private__setRowsToSeries(series, seriesRows);\n    let firstChangedPointIndex = -1;\n    if (isTimeScaleAffected) {\n      // then generate the time scale points\n      // timeWeight will be updates in _updateTimeScalePoints later\n      const newTimeScalePoints = [];\n      this._private__pointDataByTimePoint.forEach(pointData => {\n        newTimeScalePoints.push({\n          timeWeight: 0,\n          time: pointData._internal_timePoint,\n          pointData,\n          originalTime: timeScalePointTime(pointData._internal_mapping)\n        });\n      });\n      newTimeScalePoints.sort((t1, t2) => this._private__horzScaleBehavior.key(t1.time) - this._private__horzScaleBehavior.key(t2.time));\n      firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n    }\n    return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows, this._private__horzScaleBehavior));\n  }\n  _internal_removeSeries(series) {\n    return this._internal_setSeriesData(series, []);\n  }\n  _internal_updateSeriesData(series, data) {\n    const extendedData = data;\n    saveOriginalTime(extendedData);\n    // convertStringToBusinessDay(data);\n    this._private__horzScaleBehavior.preprocessData(data);\n    const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj([data]);\n    const time = timeConverter(data.time);\n    const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n    if (lastSeriesTime !== undefined && this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(lastSeriesTime)) {\n      throw new Error(`Cannot update oldest data, last time=${lastSeriesTime}, new time=${time}`);\n    }\n    let pointDataAtTime = this._private__pointDataByTimePoint.get(this._private__horzScaleBehavior.key(time));\n    // if no point data found for the new data item\n    // that means that we need to update scale\n    const affectsTimeScale = pointDataAtTime === undefined;\n    if (pointDataAtTime === undefined) {\n      // the indexes will be sync later\n      pointDataAtTime = createEmptyTimePointData(time);\n      this._private__pointDataByTimePoint.set(this._private__horzScaleBehavior.key(time), pointDataAtTime);\n    }\n    const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n    const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n    const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n    const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime, dataToPlotRow, customWhitespaceChecker);\n    pointDataAtTime._internal_mapping.set(series, plotRow);\n    this._private__updateLastSeriesRow(series, plotRow);\n    const info = {\n      _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow)\n    };\n    // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n    if (!affectsTimeScale) {\n      return this._private__getUpdateResponse(series, -1, info);\n    }\n    const newPoint = {\n      timeWeight: 0,\n      time: pointDataAtTime._internal_timePoint,\n      pointData: pointDataAtTime,\n      originalTime: timeScalePointTime(pointDataAtTime._internal_mapping)\n    };\n    const insertIndex = lowerBound(this._private__sortedTimePoints, this._private__horzScaleBehavior.key(newPoint.time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n    // yes, I know that this array is readonly and this change is intended to make it performative\n    // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n    // but this place is exceptional case due performance reasons, sorry\n    this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n    for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n      assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n    }\n    this._private__horzScaleBehavior.fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n    return this._private__getUpdateResponse(series, insertIndex, info);\n  }\n  _private__updateLastSeriesRow(series, plotRow) {\n    let seriesData = this._private__seriesRowsBySeries.get(series);\n    if (seriesData === undefined) {\n      seriesData = [];\n      this._private__seriesRowsBySeries.set(series, seriesData);\n    }\n    const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n    if (lastSeriesRow === null || this._private__horzScaleBehavior.key(plotRow._internal_time) > this._private__horzScaleBehavior.key(lastSeriesRow._internal_time)) {\n      if (isSeriesPlotRow(plotRow)) {\n        seriesData.push(plotRow);\n      }\n    } else {\n      if (isSeriesPlotRow(plotRow)) {\n        seriesData[seriesData.length - 1] = plotRow;\n      } else {\n        seriesData.splice(-1, 1);\n      }\n    }\n    this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n  }\n  _private__setRowsToSeries(series, seriesRows) {\n    if (seriesRows.length !== 0) {\n      this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n      this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n    } else {\n      this._private__seriesRowsBySeries.delete(series);\n      this._private__seriesLastTimePoint.delete(series);\n    }\n  }\n  _private__cleanupPointsData() {\n    // let's treat all current points as \"potentially removed\"\n    // we could create an array with actually potentially removed points\n    // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n    // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n    for (const point of this._private__sortedTimePoints) {\n      if (point.pointData._internal_mapping.size === 0) {\n        this._private__pointDataByTimePoint.delete(this._private__horzScaleBehavior.key(point.time));\n      }\n    }\n  }\n  /**\n   * Sets new time scale and make indexes valid for all series\n   *\n   * @returns The index of the first changed point or `-1` if there is no change.\n   */\n  _private__replaceTimeScalePoints(newTimePoints) {\n    let firstChangedPointIndex = -1;\n    // search the first different point and \"syncing\" time weight by the way\n    for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n      const oldPoint = this._private__sortedTimePoints[index];\n      const newPoint = newTimePoints[index];\n      if (this._private__horzScaleBehavior.key(oldPoint.time) !== this._private__horzScaleBehavior.key(newPoint.time)) {\n        firstChangedPointIndex = index;\n        break;\n      }\n      // re-assign point's time weight for points if time is the same (and all prior times was the same)\n      newPoint.timeWeight = oldPoint.timeWeight;\n      assignIndexToPointData(newPoint.pointData, index);\n    }\n    if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n      // the common part of the prev and the new points are the same\n      // so the first changed point is the next after the common part\n      firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n    }\n    if (firstChangedPointIndex === -1) {\n      // if no time scale changed, then do nothing\n      return -1;\n    }\n    // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n    // but first we need to synchronize indexes and re-fill time weights\n    for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n      assignIndexToPointData(newTimePoints[index].pointData, index);\n    }\n    // re-fill time weights for point after the first changed one\n    this._private__horzScaleBehavior.fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n    this._private__sortedTimePoints = newTimePoints;\n    return firstChangedPointIndex;\n  }\n  _private__getBaseIndex() {\n    if (this._private__seriesRowsBySeries.size === 0) {\n      // if we have no data then 'reset' the base index to null\n      return null;\n    }\n    let baseIndex = 0;\n    this._private__seriesRowsBySeries.forEach(data => {\n      if (data.length !== 0) {\n        baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n      }\n    });\n    return baseIndex;\n  }\n  _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n    const dataUpdateResponse = {\n      _internal_series: new Map(),\n      _internal_timeScale: {\n        _internal_baseIndex: this._private__getBaseIndex()\n      }\n    };\n    if (firstChangedPointIndex !== -1) {\n      // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n      // but let's skip for now\n      this._private__seriesRowsBySeries.forEach((data, s) => {\n        dataUpdateResponse._internal_series.set(s, {\n          _internal_data: data,\n          _internal_info: s === updatedSeries ? info : undefined\n        });\n      });\n      // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n      // meaning the forEach above won't add the series to the data update response\n      // so we handle that case here\n      if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n        dataUpdateResponse._internal_series.set(updatedSeries, {\n          _internal_data: [],\n          _internal_info: info\n        });\n      }\n      dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n      dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n    } else {\n      const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n      // if no seriesData found that means that we just removed the series\n      dataUpdateResponse._internal_series.set(updatedSeries, {\n        _internal_data: seriesData || [],\n        _internal_info: info\n      });\n    }\n    return dataUpdateResponse;\n  }\n}\nfunction assignIndexToPointData(pointData, index) {\n  // first, nevertheless update index of point data (\"make it valid\")\n  pointData._internal_index = index;\n  // and then we need to sync indexes for all series\n  pointData._internal_mapping.forEach(seriesRow => {\n    seriesRow._internal_index = index;\n  });\n}\nfunction singleValueData(plotRow) {\n  const data = {\n    value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n    time: plotRow._internal_originalTime\n  };\n  if (plotRow._internal_customValues !== undefined) {\n    data.customValues = plotRow._internal_customValues;\n  }\n  return data;\n}\nfunction lineData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_color !== undefined) {\n    result.color = plotRow._internal_color;\n  }\n  return result;\n}\nfunction areaData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_lineColor !== undefined) {\n    result.lineColor = plotRow._internal_lineColor;\n  }\n  if (plotRow._internal_topColor !== undefined) {\n    result.topColor = plotRow._internal_topColor;\n  }\n  if (plotRow._internal_bottomColor !== undefined) {\n    result.bottomColor = plotRow._internal_bottomColor;\n  }\n  return result;\n}\nfunction baselineData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_topLineColor !== undefined) {\n    result.topLineColor = plotRow._internal_topLineColor;\n  }\n  if (plotRow._internal_bottomLineColor !== undefined) {\n    result.bottomLineColor = plotRow._internal_bottomLineColor;\n  }\n  if (plotRow._internal_topFillColor1 !== undefined) {\n    result.topFillColor1 = plotRow._internal_topFillColor1;\n  }\n  if (plotRow._internal_topFillColor2 !== undefined) {\n    result.topFillColor2 = plotRow._internal_topFillColor2;\n  }\n  if (plotRow._internal_bottomFillColor1 !== undefined) {\n    result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n  }\n  if (plotRow._internal_bottomFillColor2 !== undefined) {\n    result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n  }\n  return result;\n}\nfunction ohlcData(plotRow) {\n  const data = {\n    open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n    high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n    low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n    close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n    time: plotRow._internal_originalTime\n  };\n  if (plotRow._internal_customValues !== undefined) {\n    data.customValues = plotRow._internal_customValues;\n  }\n  return data;\n}\nfunction barData(plotRow) {\n  const result = ohlcData(plotRow);\n  if (plotRow._internal_color !== undefined) {\n    result.color = plotRow._internal_color;\n  }\n  return result;\n}\nfunction candlestickData(plotRow) {\n  const result = ohlcData(plotRow);\n  const {\n    _internal_color: color,\n    _internal_borderColor: borderColor,\n    _internal_wickColor: wickColor\n  } = plotRow;\n  if (color !== undefined) {\n    result.color = color;\n  }\n  if (borderColor !== undefined) {\n    result.borderColor = borderColor;\n  }\n  if (wickColor !== undefined) {\n    result.wickColor = wickColor;\n  }\n  return result;\n}\nfunction getSeriesDataCreator(seriesType) {\n  const seriesPlotRowToDataMap = {\n    Area: areaData,\n    Line: lineData,\n    Baseline: baselineData,\n    Histogram: lineData,\n    Bar: barData,\n    Candlestick: candlestickData,\n    Custom: customData\n  };\n  return seriesPlotRowToDataMap[seriesType];\n}\nfunction customData(plotRow) {\n  const time = plotRow._internal_originalTime;\n  return Object.assign(Object.assign({}, plotRow._internal_data), {\n    time\n  });\n}\nconst crosshairOptionsDefaults = {\n  vertLine: {\n    color: '#9598A1',\n    width: 1,\n    style: 3 /* LineStyle.LargeDashed */,\n    visible: true,\n    labelVisible: true,\n    labelBackgroundColor: '#131722'\n  },\n  horzLine: {\n    color: '#9598A1',\n    width: 1,\n    style: 3 /* LineStyle.LargeDashed */,\n    visible: true,\n    labelVisible: true,\n    labelBackgroundColor: '#131722'\n  },\n  mode: 1 /* CrosshairMode.Magnet */\n};\nconst gridOptionsDefaults = {\n  vertLines: {\n    color: '#D6DCDE',\n    style: 0 /* LineStyle.Solid */,\n    visible: true\n  },\n  horzLines: {\n    color: '#D6DCDE',\n    style: 0 /* LineStyle.Solid */,\n    visible: true\n  }\n};\nconst layoutOptionsDefaults = {\n  background: {\n    type: \"solid\" /* ColorType.Solid */,\n    color: '#FFFFFF'\n  },\n  textColor: '#191919',\n  fontSize: 12,\n  fontFamily: defaultFontFamily\n};\nconst priceScaleOptionsDefaults = {\n  autoScale: true,\n  mode: 0 /* PriceScaleMode.Normal */,\n  invertScale: false,\n  alignLabels: true,\n  borderVisible: true,\n  borderColor: '#2B2B43',\n  entireTextOnly: false,\n  visible: false,\n  ticksVisible: false,\n  scaleMargins: {\n    bottom: 0.1,\n    top: 0.2\n  },\n  minimumWidth: 0\n};\nconst timeScaleOptionsDefaults = {\n  rightOffset: 0,\n  barSpacing: 6,\n  minBarSpacing: 0.5,\n  fixLeftEdge: false,\n  fixRightEdge: false,\n  lockVisibleTimeRangeOnResize: false,\n  rightBarStaysOnScroll: false,\n  borderVisible: true,\n  borderColor: '#2B2B43',\n  visible: true,\n  timeVisible: false,\n  secondsVisible: true,\n  shiftVisibleRangeOnNewBar: true,\n  allowShiftVisibleRangeOnWhitespaceReplacement: false,\n  ticksVisible: false,\n  uniformDistribution: false,\n  minimumHeight: 0\n};\nconst watermarkOptionsDefaults = {\n  color: 'rgba(0, 0, 0, 0)',\n  visible: false,\n  fontSize: 48,\n  fontFamily: defaultFontFamily,\n  fontStyle: '',\n  text: '',\n  horzAlign: 'center',\n  vertAlign: 'center'\n};\nfunction chartOptionsDefaults() {\n  return {\n    width: 0,\n    height: 0,\n    autoSize: false,\n    layout: layoutOptionsDefaults,\n    crosshair: crosshairOptionsDefaults,\n    grid: gridOptionsDefaults,\n    overlayPriceScales: Object.assign({}, priceScaleOptionsDefaults),\n    leftPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), {\n      visible: false\n    }),\n    rightPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), {\n      visible: true\n    }),\n    timeScale: timeScaleOptionsDefaults,\n    watermark: watermarkOptionsDefaults,\n    localization: {\n      locale: isRunningOnClientSide ? navigator.language : '',\n      dateFormat: 'dd MMM \\'yy'\n    },\n    handleScroll: {\n      mouseWheel: true,\n      pressedMouseMove: true,\n      horzTouchDrag: true,\n      vertTouchDrag: true\n    },\n    handleScale: {\n      axisPressedMouseMove: {\n        time: true,\n        price: true\n      },\n      axisDoubleClickReset: {\n        time: true,\n        price: true\n      },\n      mouseWheel: true,\n      pinch: true\n    },\n    kineticScroll: {\n      mouse: false,\n      touch: true\n    },\n    trackingMode: {\n      exitMode: 1 /* TrackingModeExitMode.OnNextTap */\n    }\n  };\n}\nclass PriceScaleApi {\n  constructor(chartWidget, priceScaleId) {\n    this._private__chartWidget = chartWidget;\n    this._private__priceScaleId = priceScaleId;\n  }\n  applyOptions(options) {\n    this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options);\n  }\n  options() {\n    return this._private__priceScale()._internal_options();\n  }\n  width() {\n    if (!isDefaultPriceScale(this._private__priceScaleId)) {\n      return 0;\n    }\n    return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n  }\n  _private__priceScale() {\n    return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId))._internal_priceScale;\n  }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction checkPriceLineOptions(options) {\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, bh, allowDuplicates = false) {\n  if (data.length === 0) {\n    return;\n  }\n  let prevTime = bh.key(data[0].time);\n  for (let i = 1; i < data.length; ++i) {\n    const currentTime = bh.key(data[i].time);\n    const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n    assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n    prevTime = currentTime;\n  }\n}\nfunction checkSeriesValuesType(type, data) {\n  data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n  switch (type) {\n    case 'Bar':\n    case 'Candlestick':\n      return checkBarItem.bind(null, type);\n    case 'Area':\n    case 'Baseline':\n    case 'Line':\n    case 'Histogram':\n      return checkLineItem.bind(null, type);\n    case 'Custom':\n      return checkCustomItem.bind(null, type);\n  }\n}\nfunction checkBarItem(type, barItem) {\n  if (!isFulfilledData(barItem)) {\n    return;\n  }\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.open === 'number', `${type} series item data value of open must be a number, got=${typeof barItem.open}, value=${barItem.open}`);\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.high === 'number', `${type} series item data value of high must be a number, got=${typeof barItem.high}, value=${barItem.high}`);\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.low === 'number', `${type} series item data value of low must be a number, got=${typeof barItem.low}, value=${barItem.low}`);\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.close === 'number', `${type} series item data value of close must be a number, got=${typeof barItem.close}, value=${barItem.close}`);\n}\nfunction checkLineItem(type, lineItem) {\n  if (!isFulfilledData(lineItem)) {\n    return;\n  }\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\nfunction checkCustomItem(\n  // type: 'Custom',\n  // customItem: SeriesDataItemTypeMap[typeof type]\n) {\n  // Nothing to check yet...\n  return;\n}\nfunction convertSeriesMarker(sm, newTime, originalTime) {\n  const values = __rest(sm, [\"time\", \"originalTime\"]);\n  /* eslint-disable @typescript-eslint/consistent-type-assertions */\n  const res = Object.assign({\n    time: newTime\n  }, values);\n  /* eslint-enable @typescript-eslint/consistent-type-assertions */\n  if (originalTime !== undefined) {\n    res.originalTime = originalTime;\n  }\n  return res;\n}\nconst priceLineOptionsDefaults = {\n  color: '#FF0000',\n  price: 0,\n  lineStyle: 2 /* LineStyle.Dashed */,\n  lineWidth: 1,\n  lineVisible: true,\n  axisLabelVisible: true,\n  title: '',\n  axisLabelColor: '',\n  axisLabelTextColor: ''\n};\nclass PriceLine {\n  constructor(priceLine) {\n    this._private__priceLine = priceLine;\n  }\n  applyOptions(options) {\n    this._private__priceLine._internal_applyOptions(options);\n  }\n  options() {\n    return this._private__priceLine._internal_options();\n  }\n  _internal_priceLine() {\n    return this._private__priceLine;\n  }\n}\nclass SeriesApi {\n  constructor(series, dataUpdatesConsumer, priceScaleApiProvider, chartApi, horzScaleBehavior) {\n    this._private__dataChangedDelegate = new Delegate();\n    this._internal__series = series;\n    this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n    this._private__priceScaleApiProvider = priceScaleApiProvider;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._internal__chartApi = chartApi;\n  }\n  _internal_destroy() {\n    this._private__dataChangedDelegate._internal_destroy();\n  }\n  priceFormatter() {\n    return this._internal__series._internal_formatter();\n  }\n  priceToCoordinate(price) {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n  }\n  coordinateToPrice(coordinate) {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n  }\n  barsInLogicalRange(range) {\n    if (range === null) {\n      return null;\n    }\n    // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n    const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n    const bars = this._internal__series._internal_bars();\n    if (bars._internal_isEmpty()) {\n      return null;\n    }\n    const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n    const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n    const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n    const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n    // this means that we request data in the data gap\n    // e.g. let's say we have series with data [0..10, 30..60]\n    // and we request bars info in range [15, 25]\n    // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n    if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n      return {\n        barsBefore: range.from - dataFirstIndex,\n        barsAfter: dataLastIndex - range.to\n      };\n    }\n    const barsBefore = dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex ? range.from - dataFirstIndex : dataFirstBarInRange._internal_index - dataFirstIndex;\n    const barsAfter = dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex ? dataLastIndex - range.to : dataLastIndex - dataLastBarInRange._internal_index;\n    const result = {\n      barsBefore,\n      barsAfter\n    };\n    // actually they can't exist separately\n    if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n      result.from = dataFirstBarInRange._internal_originalTime;\n      result.to = dataLastBarInRange._internal_originalTime;\n    }\n    return result;\n  }\n  setData(data) {\n    checkItemsAreOrdered(data, this._private__horzScaleBehavior);\n    checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n    this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n    this._private__onDataChanged('full');\n  }\n  update(bar) {\n    checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n    this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar);\n    this._private__onDataChanged('update');\n  }\n  dataByIndex(logicalIndex, mismatchDirection) {\n    const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n    if (data === null) {\n      // actually it can be a whitespace\n      return null;\n    }\n    const creator = getSeriesDataCreator(this.seriesType());\n    return creator(data);\n  }\n  data() {\n    const seriesCreator = getSeriesDataCreator(this.seriesType());\n    const rows = this._internal__series._internal_bars()._internal_rows();\n    return rows.map(row => seriesCreator(row));\n  }\n  subscribeDataChanged(handler) {\n    this._private__dataChangedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeDataChanged(handler) {\n    this._private__dataChangedDelegate._internal_unsubscribe(handler);\n  }\n  setMarkers(data) {\n    checkItemsAreOrdered(data, this._private__horzScaleBehavior, true);\n    const convertedMarkers = data.map(marker => convertSeriesMarker(marker, this._private__horzScaleBehavior.convertHorzItemToInternal(marker.time), marker.time));\n    this._internal__series._internal_setMarkers(convertedMarkers);\n  }\n  markers() {\n    return this._internal__series._internal_markers().map(internalItem => {\n      return convertSeriesMarker(internalItem, internalItem.originalTime, undefined);\n    });\n  }\n  applyOptions(options) {\n    this._internal__series._internal_applyOptions(options);\n  }\n  options() {\n    return clone(this._internal__series._internal_options());\n  }\n  priceScale() {\n    return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id());\n  }\n  createPriceLine(options) {\n    checkPriceLineOptions(options);\n    const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n    const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n    return new PriceLine(priceLine);\n  }\n  removePriceLine(line) {\n    this._internal__series._internal_removePriceLine(line._internal_priceLine());\n  }\n  seriesType() {\n    return this._internal__series._internal_seriesType();\n  }\n  attachPrimitive(primitive) {\n    // at this point we cast the generic to unknown because we\n    // don't want the model to know the types of the API (â—‘_â—‘)\n    this._internal__series._internal_attachPrimitive(primitive);\n    if (primitive.attached) {\n      primitive.attached({\n        chart: this._internal__chartApi,\n        series: this,\n        requestUpdate: () => this._internal__series._internal_model()._internal_fullUpdate()\n      });\n    }\n  }\n  detachPrimitive(primitive) {\n    this._internal__series._internal_detachPrimitive(primitive);\n    if (primitive.detached) {\n      primitive.detached();\n    }\n  }\n  _private__onDataChanged(scope) {\n    if (this._private__dataChangedDelegate._internal_hasListeners()) {\n      this._private__dataChangedDelegate._internal_fire(scope);\n    }\n  }\n}\nclass TimeScaleApi {\n  constructor(model, timeAxisWidget, horzScaleBehavior) {\n    this._private__timeRangeChanged = new Delegate();\n    this._private__logicalRangeChanged = new Delegate();\n    this._private__sizeChanged = new Delegate();\n    this._private__model = model;\n    this._private__timeScale = model._internal_timeScale();\n    this._private__timeAxisWidget = timeAxisWidget;\n    this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n    this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n    this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n    this._private__horzScaleBehavior = horzScaleBehavior;\n  }\n  _internal_destroy() {\n    this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n    this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n    this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n    this._private__timeRangeChanged._internal_destroy();\n    this._private__logicalRangeChanged._internal_destroy();\n    this._private__sizeChanged._internal_destroy();\n  }\n  scrollPosition() {\n    return this._private__timeScale._internal_rightOffset();\n  }\n  scrollToPosition(position, animated) {\n    if (!animated) {\n      this._private__model._internal_setRightOffset(position);\n      return;\n    }\n    this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n  }\n  scrollToRealTime() {\n    this._private__timeScale._internal_scrollToRealTime();\n  }\n  getVisibleRange() {\n    const timeRange = this._private__timeScale._internal_visibleTimeRange();\n    if (timeRange === null) {\n      return null;\n    }\n    return {\n      from: timeRange.from.originalTime,\n      to: timeRange.to.originalTime\n    };\n  }\n  setVisibleRange(range) {\n    const convertedRange = {\n      from: this._private__horzScaleBehavior.convertHorzItemToInternal(range.from),\n      to: this._private__horzScaleBehavior.convertHorzItemToInternal(range.to)\n    };\n    const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n    this._private__model._internal_setTargetLogicalRange(logicalRange);\n  }\n  getVisibleLogicalRange() {\n    const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n    if (logicalRange === null) {\n      return null;\n    }\n    return {\n      from: logicalRange._internal_left(),\n      to: logicalRange._internal_right()\n    };\n  }\n  setVisibleLogicalRange(range) {\n    assert(range.from <= range.to, 'The from index cannot be after the to index.');\n    this._private__model._internal_setTargetLogicalRange(range);\n  }\n  resetTimeScale() {\n    this._private__model._internal_resetTimeScale();\n  }\n  fitContent() {\n    this._private__model._internal_fitContent();\n  }\n  logicalToCoordinate(logical) {\n    const timeScale = this._private__model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return null;\n    } else {\n      return timeScale._internal_indexToCoordinate(logical);\n    }\n  }\n  coordinateToLogical(x) {\n    if (this._private__timeScale._internal_isEmpty()) {\n      return null;\n    } else {\n      return this._private__timeScale._internal_coordinateToIndex(x);\n    }\n  }\n  timeToCoordinate(time) {\n    const timePoint = this._private__horzScaleBehavior.convertHorzItemToInternal(time);\n    const timePointIndex = this._private__timeScale._internal_timeToIndex(timePoint, false);\n    if (timePointIndex === null) {\n      return null;\n    }\n    return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n  }\n  coordinateToTime(x) {\n    const timeScale = this._private__model._internal_timeScale();\n    const timePointIndex = timeScale._internal_coordinateToIndex(x);\n    const timePoint = timeScale._internal_indexToTimeScalePoint(timePointIndex);\n    if (timePoint === null) {\n      return null;\n    }\n    return timePoint.originalTime;\n  }\n  width() {\n    return this._private__timeAxisWidget._internal_getSize().width;\n  }\n  height() {\n    return this._private__timeAxisWidget._internal_getSize().height;\n  }\n  subscribeVisibleTimeRangeChange(handler) {\n    this._private__timeRangeChanged._internal_subscribe(handler);\n  }\n  unsubscribeVisibleTimeRangeChange(handler) {\n    this._private__timeRangeChanged._internal_unsubscribe(handler);\n  }\n  subscribeVisibleLogicalRangeChange(handler) {\n    this._private__logicalRangeChanged._internal_subscribe(handler);\n  }\n  unsubscribeVisibleLogicalRangeChange(handler) {\n    this._private__logicalRangeChanged._internal_unsubscribe(handler);\n  }\n  subscribeSizeChange(handler) {\n    this._private__sizeChanged._internal_subscribe(handler);\n  }\n  unsubscribeSizeChange(handler) {\n    this._private__sizeChanged._internal_unsubscribe(handler);\n  }\n  applyOptions(options) {\n    this._private__timeScale._internal_applyOptions(options);\n  }\n  options() {\n    return Object.assign(Object.assign({}, clone(this._private__timeScale._internal_options())), {\n      barSpacing: this._private__timeScale._internal_barSpacing()\n    });\n  }\n  _private__onVisibleBarsChanged() {\n    if (this._private__timeRangeChanged._internal_hasListeners()) {\n      this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n    }\n  }\n  _private__onVisibleLogicalRangeChanged() {\n    if (this._private__logicalRangeChanged._internal_hasListeners()) {\n      this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n    }\n  }\n  _private__onSizeChanged(size) {\n    this._private__sizeChanged._internal_fire(size.width, size.height);\n  }\n}\nfunction patchPriceFormat(priceFormat) {\n  if (priceFormat === undefined || priceFormat.type === 'custom') {\n    return;\n  }\n  const priceFormatBuiltIn = priceFormat;\n  if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n    priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n  }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n  if (isBoolean(options.handleScale)) {\n    const handleScale = options.handleScale;\n    options.handleScale = {\n      axisDoubleClickReset: {\n        time: handleScale,\n        price: handleScale\n      },\n      axisPressedMouseMove: {\n        time: handleScale,\n        price: handleScale\n      },\n      mouseWheel: handleScale,\n      pinch: handleScale\n    };\n  } else if (options.handleScale !== undefined) {\n    const {\n      axisPressedMouseMove,\n      axisDoubleClickReset\n    } = options.handleScale;\n    if (isBoolean(axisPressedMouseMove)) {\n      options.handleScale.axisPressedMouseMove = {\n        time: axisPressedMouseMove,\n        price: axisPressedMouseMove\n      };\n    }\n    if (isBoolean(axisDoubleClickReset)) {\n      options.handleScale.axisDoubleClickReset = {\n        time: axisDoubleClickReset,\n        price: axisDoubleClickReset\n      };\n    }\n  }\n  const handleScroll = options.handleScroll;\n  if (isBoolean(handleScroll)) {\n    options.handleScroll = {\n      horzTouchDrag: handleScroll,\n      vertTouchDrag: handleScroll,\n      mouseWheel: handleScroll,\n      pressedMouseMove: handleScroll\n    };\n  }\n}\nfunction toInternalOptions(options) {\n  migrateHandleScaleScrollOptions(options);\n  return options;\n}\nclass ChartApi {\n  constructor(container, horzScaleBehavior, options) {\n    this._private__seriesMap = new Map();\n    this._private__seriesMapReversed = new Map();\n    this._private__clickedDelegate = new Delegate();\n    this._private__dblClickedDelegate = new Delegate();\n    this._private__crosshairMovedDelegate = new Delegate();\n    this._private__dataLayer = new DataLayer(horzScaleBehavior);\n    const internalOptions = options === undefined ? clone(chartOptionsDefaults()) : merge(clone(chartOptionsDefaults()), toInternalOptions(options));\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__chartWidget = new ChartWidget(container, internalOptions, horzScaleBehavior);\n    this._private__chartWidget._internal_clicked()._internal_subscribe(paramSupplier => {\n      if (this._private__clickedDelegate._internal_hasListeners()) {\n        this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    this._private__chartWidget._internal_dblClicked()._internal_subscribe(paramSupplier => {\n      if (this._private__dblClickedDelegate._internal_hasListeners()) {\n        this._private__dblClickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    this._private__chartWidget._internal_crosshairMoved()._internal_subscribe(paramSupplier => {\n      if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n        this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    const model = this._private__chartWidget._internal_model();\n    this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget(), this._private__horzScaleBehavior);\n  }\n  remove() {\n    this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n    this._private__chartWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n    this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n    this._private__timeScaleApi._internal_destroy();\n    this._private__chartWidget._internal_destroy();\n    this._private__seriesMap.clear();\n    this._private__seriesMapReversed.clear();\n    this._private__clickedDelegate._internal_destroy();\n    this._private__dblClickedDelegate._internal_destroy();\n    this._private__crosshairMovedDelegate._internal_destroy();\n    this._private__dataLayer._internal_destroy();\n  }\n  resize(width, height, forceRepaint) {\n    if (this.autoSizeActive()) {\n      // We return early here instead of checking this within the actual _chartWidget.resize method\n      // because this should only apply to external resize requests.\n      warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n      return;\n    }\n    this._private__chartWidget._internal_resize(width, height, forceRepaint);\n  }\n  addCustomSeries(customPaneView, options) {\n    const paneView = ensure(customPaneView);\n    const defaults = Object.assign(Object.assign({}, customStyleDefaults), paneView.defaultOptions());\n    return this._private__addSeriesImpl('Custom', defaults, options, paneView);\n  }\n  addAreaSeries(options) {\n    return this._private__addSeriesImpl('Area', areaStyleDefaults, options);\n  }\n  addBaselineSeries(options) {\n    return this._private__addSeriesImpl('Baseline', baselineStyleDefaults, options);\n  }\n  addBarSeries(options) {\n    return this._private__addSeriesImpl('Bar', barStyleDefaults, options);\n  }\n  addCandlestickSeries(options = {}) {\n    fillUpDownCandlesticksColors(options);\n    return this._private__addSeriesImpl('Candlestick', candlestickStyleDefaults, options);\n  }\n  addHistogramSeries(options) {\n    return this._private__addSeriesImpl('Histogram', histogramStyleDefaults, options);\n  }\n  addLineSeries(options) {\n    return this._private__addSeriesImpl('Line', lineStyleDefaults, options);\n  }\n  removeSeries(seriesApi) {\n    const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n    const update = this._private__dataLayer._internal_removeSeries(series);\n    const model = this._private__chartWidget._internal_model();\n    model._internal_removeSeries(series);\n    this._private__sendUpdateToChart(update);\n    this._private__seriesMap.delete(seriesApi);\n    this._private__seriesMapReversed.delete(series);\n  }\n  _internal_applyNewData(series, data) {\n    this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n  }\n  _internal_updateData(series, data) {\n    this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data));\n  }\n  subscribeClick(handler) {\n    this._private__clickedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeClick(handler) {\n    this._private__clickedDelegate._internal_unsubscribe(handler);\n  }\n  subscribeCrosshairMove(handler) {\n    this._private__crosshairMovedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeCrosshairMove(handler) {\n    this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n  }\n  subscribeDblClick(handler) {\n    this._private__dblClickedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeDblClick(handler) {\n    this._private__dblClickedDelegate._internal_unsubscribe(handler);\n  }\n  priceScale(priceScaleId) {\n    return new PriceScaleApi(this._private__chartWidget, priceScaleId);\n  }\n  timeScale() {\n    return this._private__timeScaleApi;\n  }\n  applyOptions(options) {\n    this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n  }\n  options() {\n    return this._private__chartWidget._internal_options();\n  }\n  takeScreenshot() {\n    return this._private__chartWidget._internal_takeScreenshot();\n  }\n  autoSizeActive() {\n    return this._private__chartWidget._internal_autoSizeActive();\n  }\n  chartElement() {\n    return this._private__chartWidget._internal_element();\n  }\n  paneSize() {\n    const size = this._private__chartWidget._internal_paneSize();\n    return {\n      height: size.height,\n      width: size.width\n    };\n  }\n  setCrosshairPosition(price, horizontalPosition, seriesApi) {\n    const series = this._private__seriesMap.get(seriesApi);\n    if (series === undefined) {\n      return;\n    }\n    const pane = this._private__chartWidget._internal_model()._internal_paneForSource(series);\n    if (pane === null) {\n      return;\n    }\n    this._private__chartWidget._internal_model()._internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane);\n  }\n  clearCrosshairPosition() {\n    this._private__chartWidget._internal_model()._internal_clearCurrentPosition(true);\n  }\n  _private__addSeriesImpl(type, styleDefaults, options = {}, customPaneView) {\n    patchPriceFormat(options.priceFormat);\n    const strictOptions = merge(clone(seriesOptionsDefaults), clone(styleDefaults), options);\n    const series = this._private__chartWidget._internal_model()._internal_createSeries(type, strictOptions, customPaneView);\n    const res = new SeriesApi(series, this, this, this, this._private__horzScaleBehavior);\n    this._private__seriesMap.set(res, series);\n    this._private__seriesMapReversed.set(series, res);\n    return res;\n  }\n  _private__sendUpdateToChart(update) {\n    const model = this._private__chartWidget._internal_model();\n    model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n    update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n    model._internal_recalculateAllPanes();\n  }\n  _private__mapSeriesToApi(series) {\n    return ensureDefined(this._private__seriesMapReversed.get(series));\n  }\n  _private__convertMouseParams(param) {\n    const seriesData = new Map();\n    param._internal_seriesData.forEach((plotRow, series) => {\n      const seriesType = series._internal_seriesType();\n      const data = getSeriesDataCreator(seriesType)(plotRow);\n      if (seriesType !== 'Custom') {\n        assert(isFulfilledData(data));\n      } else {\n        const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n        assert(!customWhitespaceChecker || customWhitespaceChecker(data) === false);\n      }\n      seriesData.set(this._private__mapSeriesToApi(series), data);\n    });\n    const hoveredSeries = param._internal_hoveredSeries === undefined ? undefined : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n    return {\n      time: param._internal_originalTime,\n      logical: param._internal_index,\n      point: param._internal_point,\n      hoveredSeries,\n      hoveredObjectId: param._internal_hoveredObject,\n      seriesData,\n      sourceEvent: param._internal_touchMouseEventData\n    };\n  }\n}\n\n/**\n * This function is the main entry point of the Lightweight Charting Library. If you are using time values\n * for the horizontal scale then it is recommended that you rather use the {@link createChart} function.\n *\n * @template HorzScaleItem - type of points on the horizontal scale\n * @template THorzScaleBehavior - type of horizontal axis strategy that encapsulate all the specific behaviors of the horizontal scale type\n *\n * @param container - ID of HTML element or element itself\n * @param horzScaleBehavior - Horizontal scale behavior\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChartEx(container, horzScaleBehavior, options) {\n  let htmlElement;\n  if (isString(container)) {\n    const element = document.getElementById(container);\n    assert(element !== null, `Cannot find element in DOM with id=${container}`);\n    htmlElement = element;\n  } else {\n    htmlElement = container;\n  }\n  const res = new ChartApi(htmlElement, horzScaleBehavior, options);\n  horzScaleBehavior.setOptions(res.options());\n  return res;\n}\n/**\n * This function is the simplified main entry point of the Lightweight Charting Library with time points for the horizontal scale.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n  return createChartEx(container, new HorzScaleBehaviorTime(), HorzScaleBehaviorTime._internal_applyDefaults(options));\n}\n\n/// <reference types=\"_build-time-constants\" />\nconst customSeriesDefaultOptions = Object.assign(Object.assign({}, seriesOptionsDefaults), customStyleDefaults);\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n  return \"4.1.2\";\n}\nexport { ColorType, CrosshairMode, LastPriceAnimationMode, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, createChartEx, customSeriesDefaultOptions, isBusinessDay, isUTCTimestamp, version };","map":{"version":3,"names":["size","size$1","bindCanvasElementBitmapSizeTo","equalSizes","tryCreateCanvasRenderingTarget2D","candlestickStyleDefaults","upColor","downColor","wickVisible","borderVisible","borderColor","borderUpColor","borderDownColor","wickColor","wickUpColor","wickDownColor","barStyleDefaults","openVisible","thinBars","lineStyleDefaults","color","lineStyle","lineWidth","lineType","lineVisible","crosshairMarkerVisible","crosshairMarkerRadius","crosshairMarkerBorderColor","crosshairMarkerBorderWidth","crosshairMarkerBackgroundColor","lastPriceAnimation","pointMarkersVisible","areaStyleDefaults","topColor","bottomColor","invertFilledArea","lineColor","baselineStyleDefaults","baseValue","type","price","topFillColor1","topFillColor2","topLineColor","bottomFillColor1","bottomFillColor2","bottomLineColor","histogramStyleDefaults","base","customStyleDefaults","seriesOptionsDefaults","title","visible","lastValueVisible","priceLineVisible","priceLineSource","priceLineWidth","priceLineColor","priceLineStyle","baseLineVisible","baseLineWidth","baseLineColor","baseLineStyle","priceFormat","precision","minMove","LineType","LineStyle","setLineStyle","ctx","style","dashPatterns","dashPattern","setLineDash","drawHorizontalLine","y","left","right","beginPath","correction","moveTo","lineTo","stroke","drawVerticalLine","x","top","bottom","strokeInPixel","drawFunction","save","translate","restore","assert","condition","message","Error","ensureDefined","value","undefined","ensureNotNull","ensure","ensureNever","namedColorRgbHexStrings","khaki","azure","aliceblue","ghostwhite","gold","goldenrod","gainsboro","gray","green","honeydew","floralwhite","lightblue","lightcoral","lemonchiffon","hotpink","lightyellow","greenyellow","lightgoldenrodyellow","limegreen","linen","lightcyan","magenta","maroon","olive","orange","oldlace","mediumblue","transparent","lime","lightpink","mistyrose","moccasin","midnightblue","orchid","mediumorchid","mediumturquoise","orangered","royalblue","powderblue","red","coral","turquoise","white","whitesmoke","wheat","teal","steelblue","bisque","aquamarine","aqua","sienna","silver","springgreen","antiquewhite","burlywood","brown","beige","chocolate","chartreuse","cornflowerblue","cornsilk","crimson","cadetblue","tomato","fuchsia","blue","salmon","blanchedalmond","slateblue","slategray","thistle","tan","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","blueviolet","black","darkmagenta","darkslateblue","darkkhaki","darkorchid","darkorange","darkgreen","darkred","dodgerblue","darkslategray","dimgray","deepskyblue","firebrick","forestgreen","indigo","ivory","lavenderblush","feldspar","indianred","lightgreen","lightgrey","lightskyblue","lightslategray","lightslateblue","snow","lightseagreen","lightsalmon","darksalmon","darkviolet","mediumpurple","mediumaquamarine","skyblue","lavender","lightsteelblue","mediumvioletred","mintcream","navajowhite","navy","olivedrab","palevioletred","violetred","yellow","yellowgreen","lawngreen","pink","paleturquoise","palegoldenrod","darkolivegreen","darkseagreen","darkturquoise","peachpuff","deeppink","violet","palegreen","mediumseagreen","peru","saddlebrown","sandybrown","rosybrown","purple","seagreen","seashell","papayawhip","mediumslateblue","plum","mediumspringgreen","normalizeRgbComponent","component","Math","round","normalizeAlphaComponent","shortHexRe","hexRe","rgbRe","rgbaRe","colorStringToRgba","colorString","toLowerCase","matches","exec","parseInt","length","parseFloat","rgbaToGrayscale","rgbValue","redComponentGrayscaleWeight","greenComponentGrayscaleWeight","blueComponentGrayscaleWeight","applyAlpha","alpha","originRgba","originAlpha","generateContrastColors","backgroundColor","rgb","_internal_background","_internal_foreground","gradientColorAtPercent","percent","topR","topG","topB","topA","bottomR","bottomG","bottomB","bottomA","resultRgba","Delegate","constructor","_private__listeners","_internal_subscribe","callback","linkedObject","singleshot","listener","_internal_callback","_internal_linkedObject","_internal_singleshot","push","_internal_unsubscribe","index","findIndex","splice","_internal_unsubscribeAll","filter","_internal_fire","param1","param2","param3","listenersSnapshot","forEach","_internal_hasListeners","_internal_destroy","merge","dst","sources","src","i","Array","isArray","isNumber","isFinite","isInteger","isString","isBoolean","clone","object","o","c","p","v","hasOwnProperty","notNull","t","undefinedIfNull","defaultFontFamily","makeFont","family","PriceAxisRendererOptionsProvider","chartModel","_private__rendererOptions","_internal_borderSize","_internal_tickLength","_internal_fontSize","NaN","_internal_font","_internal_fontFamily","_internal_color","_internal_paneBackgroundColor","_internal_paddingBottom","_internal_paddingInner","_internal_paddingOuter","_internal_paddingTop","_internal_baselineOffset","_private__chartModel","_internal_options","rendererOptions","currentFontSize","_private__fontSize","currentFontFamily","_private__fontFamily","_private__textColor","_private__paneBackgroundColor","layout","textColor","_internal_backgroundTopColor","fontSize","fontFamily","CompositeRenderer","_private__renderers","_internal_setRenderers","renderers","_internal_draw","target","isHovered","hitTestData","r","MediaCoordinatesPaneRenderer","useMediaCoordinateSpace","scope","_internal__drawImpl","_internal_drawBackground","_internal__drawBackgroundImpl","renderingScope","PaneRendererMarks","arguments","_internal__data","_internal_setData","data","context","_internal_visibleRange","visibleRange","draw","radius","to","from","point","_internal_items","_internal_x","_internal_y","arc","PI","fill","_internal_lineWidth","fillStyle","_internal_backColor","_internal_radius","_internal_lineColor","createEmptyMarkerData","_internal_time","_internal_price","rangeForSinglePoint","CrosshairMarksPaneView","crosshair","_private__compositeRenderer","_private__markersRenderers","_private__markersData","_private__invalidated","_private__crosshair","_internal_update","updateType","serieses","_internal_serieses","map","res","_internal_renderer","_private__updateImpl","forceHidden","mode","timePointIndex","_internal_appliedIndex","timeScale","_internal_timeScale","s","_a","seriesData","_internal_markerDataAtIndex","_internal_visible","firstValue","_internal_firstValue","_internal_backgroundColor","_internal_borderWidth","_internal_priceScale","_internal_priceToCoordinate","_internal_value","_internal_borderColor","_internal_backgroundColorAtYPercentFromTop","_internal_height","_internal_indexToCoordinate","BitmapCoordinatesPaneRenderer","useBitmapCoordinateSpace","CrosshairRenderer","_private__data","bitmapSize","horizontalPixelRatio","verticalPixelRatio","vertLinesVisible","_internal_vertLine","horzLinesVisible","_internal_horzLine","lineCap","floor","strokeStyle","_internal_lineStyle","height","width","CrosshairPaneView","source","_private__rendererData","_private__renderer","_private__source","pane","_internal_pane","crosshairOptions","_internal_model","_internal_horzLineVisible","_internal_vertLineVisible","horzLine","vertLine","_internal_appliedX","_internal_appliedY","fillRectInnerBorder","borderWidth","fillRect","clearRect","w","h","clearColor","globalCompositeOperation","changeBorderRadius","borderRadius","offset","drawRoundRect","radii","arcTo","drawRoundRectWithInnerBorder","halfBorderWidth","innerRadii","outerRadii","closePath","clearRectWithGradient","gradient","createLinearGradient","addColorStop","PriceAxisViewRenderer","commonData","_private__commonData","useSecondLine","textWidthCache","align","_internal_text","geometry","font","geom","_private__calculateGeometry","gb","_internal_bitmap","drawLabelBody","labelBackgroundColor","labelBorderColor","_internal_alignRight","_internal_xOutside","_internal_yTop","_internal_totalWidth","_internal_totalHeight","_internal_horzBorder","_internal_xInside","_internal_tickVisible","_internal_yMid","_internal_xTick","_internal_tickHeight","_internal_borderVisible","_internal_right","_internal_yBottom","gm","_internal_media","textAlign","textBaseline","fillText","_internal_xText","_internal_textMidCorrection","mediaSize","tickSize","_internal_moveTextToInvisibleTick","horzBorder","_internal_separatorVisible","paddingTop","_internal_additionalPaddingTop","paddingBottom","_internal_additionalPaddingBottom","paddingInner","paddingOuter","text","actualTextHeight","textMidCorrection","_internal_yMidCorrection","textWidth","ceil","_internal_measureText","totalHeight","totalWidth","tickHeightBitmap","max","totalHeightBitmap","horzBorderBitmap","totalWidthBitmap","tickSizeBitmap","yMid","_internal_fixedCoordinate","_internal_coordinate","yMidBitmap","yTopBitmap","yBottomBitmap","alignRight","xInside","xInsideBitmap","xOutsideBitmap","xTickBitmap","xText","PriceAxisView","ctor","_private__commonRendererData","_private__axisRendererData","_private__paneRendererData","_private__axisRenderer","_private__paneRenderer","_private__updateRendererDataIfNeeded","_internal_getFixedCoordinate","_internal_setFixedCoordinate","_internal_isVisible","_internal_isAxisLabelVisible","priceScale","ticksVisible","_internal_paneRenderer","_internal__updateRendererData","CrosshairPriceAxisView","valueProvider","_private__priceScale","_private__valueProvider","axisRendererData","paneRendererData","commonRendererData","options","labelVisible","_internal_isEmpty","colors","additionalPadding","_internal_formatPrice","optimizationReplacementRe","radius$1","TimeAxisViewRenderer","_internal_widthCache","horzMargin","_internal_paddingHorizontal","labelWidth","labelWidthHalf","timeScaleWidth","_internal_width","coordinate","x1","abs","x2","y1","y2","x1scaled","y1scaled","x2scaled","y2scaled","radiusScaled","tickX","tickTop","tickBottom","tickWidth","tickOffset","yText","textYCorrection","CrosshairTimeAxisView","model","_private__model","currentTime","_internal_indexToTimeScalePoint","_internal_formatDateTime","DataSource","_internal__priceScale","_private__zorder","_internal_zorder","_internal_setZorder","zorder","_internal_setPriceScale","_internal_labelPaneViews","_internal_timeAxisViews","CrosshairMode","Crosshair","_private__pane","_private__price","_private__index","_private__visible","_private__priceAxisViews","Map","_private__subscribed","_private__x","_private__y","_private__originX","_private__originY","_private__options","_private__markersPaneView","valuePriceProvider","rawPriceProvider","rawCoordinateProvider","rawPrice","_internal_defaultPriceScale","_internal_coordinateToPrice","valueTimeProvider","rawIndexProvider","time","_internal_indexToTime","Number","_private__currentPosPriceProvider","currentPosTimeProvider","_private__timeAxisView","_private__paneView","_internal_saveOriginCoord","_internal_clearOriginCoord","_internal_originCoordX","_internal_originCoordY","_internal_setPosition","_private__tryToUpdateViews","_internal_clearPosition","_private__setIndexToLastSeriesBarIndex","_internal_paneViews","_internal_priceAxisViews","clear","views","_private__createPriceAxisViewOnDemand","_internal_updateAllViews","_private__priceScaleByPane","_private__tryToUpdateData","newIndex","newPrice","newPane","oldX","oldY","oldPrice","oldIndex","oldPane","isNaN","lastIndexes","_internal_bars","_internal_lastIndex","lastBarIndex","view","get","set","isDefaultPriceScale","priceScaleId","mergePaneInvalidation","beforeValue","newValue","level","_internal_level","autoScale","_internal_autoScale","InvalidateMask","globalLevel","_private__invalidatedPanes","_private__timeScaleInvalidations","_private__globalLevel","_internal_invalidatePane","paneIndex","invalidation","prevValue","_internal_fullInvalidation","_internal_invalidateForPane","paneInvalidation","_internal_setFitContent","_internal_stopTimeScaleAnimation","_internal_type","_internal_applyRange","range","_internal_setTimeScaleAnimation","animation","_private__removeTimeScaleAnimation","_internal_resetTimeScale","_internal_setBarSpacing","barSpacing","_internal_setRightOffset","_internal_timeScaleInvalidations","_internal_merge","other","tsInvalidation","_private__applyTimeScaleInvalidation","_internal_light","_internal_full","inv","formatterOptions","_internal_decimalSign","_internal_decimalSignFractional","numberToStringWithLeadingZero","TypeError","toString","dummyString","slice","PriceFormatter","_private__minMove","_private__calculateDecimal","format","sign","_private__formatAsDecimal","_internal__fractionalLength","intPart","fracString","fracLength","fracPart","toFixed","PercentageFormatter","VolumeFormatter","_private__precision","vol","_private__formatNumber","pow","replace","String","e","p1","walkLine","items","barWidth","styleGetter","finishStyledArea","firstItem","currentStyle","currentStyleFirstItem","halfBarWidth","item1","item2","changeStyle","newStyle","currentItem","itemStyle","cp1","cp2","getControlPoints","bezierCurveTo","curveTension","subtract","p2","add","divide","n","points","fromPointIndex","toPointIndex","beforeFromPointIndex","afterToPointIndex","min","finishStyledArea$1","baseLevelCoordinate","areaFirstItem","newAreaFirstItem","PaneRendererAreaBase","_internal_barWidth","_internal_lineType","_internal_baseLevelCoordinate","_internal_invertFilledArea","lineJoin","_internal__fillStyle","bind","clamp","minVal","maxVal","isBaseDecimal","current","greaterOrEqual","epsilon","equal","arr","ceiledEven","ceiled","ceiledOdd","GradientStyleCache","_internal_get","params","cachedParams","_private__params","_internal_topColor1","topColor1","_internal_topColor2","topColor2","_internal_bottomColor1","bottomColor1","_internal_bottomColor2","bottomColor2","_internal_bottom","_private__cachedValue","baselinePercent","PaneRendererArea","_private__fillCache","item","_internal_topColor","_internal_bottomColor","drawSeriesPointMarkers","pointMarkersRadius","prevStyle","centerX","centerY","PaneRendererLineBase","_internal_pointMarkersRadius","_internal__strokeStyle","PaneRendererLine","boundCompare","lower","compare","start","count","count2","mid","lowerBound","upperBound","lowerBoundItemsCompare","upperBoundItemsCompare","visibleTimedValues","extendedRange","firstBar","_internal_left","lastBar","extendedFrom","extendedTo","SeriesPaneViewBase","series","extendedVisibleRange","_internal__invalidated","_internal__dataInvalidated","_internal__optionsInvalidated","_internal__items","_internal__itemsVisibleRange","_internal__series","_internal__model","_private__extendedVisibleRange","_private__makeValid","_internal__renderer","_internal__updateOptions","Object","assign","_internal_barColorer","_internal_barStyle","_internal__clearVisibleRange","_internal__fillRawPoints","_private__makeValidImpl","visibleBars","_internal_visibleStrictRange","_internal_size","_internal__convertToCoordinates","_internal__prepareRendererData","LinePaneViewBase","_internal_indexesToCoordinates","_internal_pointsArrayToCoordinates","_internal__createRawItemBase","colorer","_internal_rows","row","_internal__createRawItem","_internal_index","SeriesAreaPaneView","_private__areaRenderer","_private__lineRenderer","_internal_barSpacing","optimalBarWidth","pixelRatio","optimalCandlestickWidth","barSpacingSpecialCaseFrom","barSpacingSpecialCaseTo","barSpacingSpecialCaseCoeff","barSpacingReducingCoeff","coeff","atan","scaledBarSpacing","optimal","PaneRendererBars","_private__barWidth","_private__barLineWidth","_private__calcBarWidth","_internal_thinBars","prevColor","drawOpenClose","bar","_internal_barColor","bodyWidthHalf","bodyCenter","bodyLeft","bodyWidth","bodyRight","high","_internal_highY","_internal_lowY","low","bodyTop","bodyBottom","bodyHeight","sideWidth","_internal_openVisible","openLeft","openTop","_internal_openY","openBottom","closeRight","closeTop","_internal_closeY","closeBottom","limit","BarsPaneViewBase","_internal_barPricesToCoordinates","_internal__createDefaultItem","_internal_open","_internal_high","_internal_low","_internal_close","SeriesBarsPaneView","barStyleProps","PaneRendererBaselineArea","_internal_topFillColor1","_internal_topFillColor2","_internal_bottomFillColor1","_internal_bottomFillColor2","PaneRendererBaselineLine","_private__strokeCache","_internal_topLineColor","_internal_bottomLineColor","SeriesBaselinePaneView","_private__baselineAreaRenderer","_private__baselineLineRenderer","PaneRendererCandlesticks","wickWidth","bars","_internal_wickVisible","_private__drawWicks","_private__drawBorder","_private__calculateBorderWidth","_private__drawCandles","prevWickColor","wickOffset","prevEdge","_internal_barWickColor","scaledX","prevBorderColor","_internal_barBorderColor","prevBarColor","barColor","SeriesCandlesticksPaneView","candlestickStyleProps","CustomSeriesPaneRendererWrapper","sourceRenderer","_private__sourceRenderer","SeriesCustomPaneView","paneView","renderer","_internal_priceValueBuilder","plotRow","priceValueBuilder","_internal_isWhitespace","isWhitespace","_internal_originalData","_internal_data","update","unwrapItemData","originalData","showSpacingMinimalBarWidth","alignToMinimalWidthLimit","PaneRendererHistogram","_private__precalculatedCache","_private__fillPrecalculatedCache","histogramBase","_internal_histogramBase","topHistogramBase","bottomHistogramBase","spacing","columnWidth","halfWidth","_internal_roundedCenter","_internal_center","prev","minWidth","SeriesHistogramPaneView","SeriesLinePaneView","defaultReplacementRe","TextWidthCache","_private__actualSize","_private__usageTick","_private__oldestTick","_private__tick2Labels","_private__cache","_private__maxSize","_internal_reset","_private__getMetrics","metrics","actualBoundingBoxAscent","actualBoundingBoxDescent","re","cacheString","has","_internal_metrics","oldestValue","delete","measureText","_internal_tick","PanePriceAxisViewRenderer","_private__priceAxisViewRenderer","_private__align","_private__textWidthCache","_internal_setParams","priceAxisViewRenderer","PanePriceAxisView","priceAxisView","dataSource","_private__priceAxisView","_private__dataSource","_internal_paneForSource","_internal_isOverlay","_internal_defaultVisiblePriceScale","position","_internal_priceScalePosition","_internal_priceAxisRendererOptions","HorizontalLineRenderer","_internal_hitTest","itemY","_internal_externalId","externalId","_internal_hitTestData","SeriesHorizontalLinePaneView","_internal__lineRendererData","_internal__lineRenderer","_internal__updateImpl","SeriesHorizontalBaseLinePaneView","_internal_mode","seriesOptions","SeriesLastPriceAnimationRenderer","_internal_seriesLineColor","centerPointRadius","_internal_seriesLineWidth","_internal_fillColor","_internal_strokeColor","animationStagesData","_internal_start","_internal_end","_internal_startRadius","_internal_endRadius","_internal_startFillAlpha","_internal_endFillAlpha","_internal_startStrokeAlpha","_internal_endStrokeAlpha","seriesLineColor","stage","startAlpha","endAlpha","startRadius","endRadius","animationData","durationSinceStart","globalStage","currentStageData","stageData","subStage","SeriesLastPriceAnimationPaneView","_private__stageInvalidated","_private__startTime","performance","now","_private__endTime","_private__series","_internal_onDataCleared","_internal_onNewRealtimeDataReceived","timeToAnimationEnd","_internal_invalidateStage","_internal_animationActive","_private__updateRendererDataStage","lastValue","_internal_lastValueData","_internal_noData","_internal_contains","lastValuePoint","seriesLineWidth","_private__duration","rendererData","result","shapeSize","shape","originalSize","calculateShapeHeight","shapeMargin","drawSquare","squareSize","halfSize","hitTestSquare","drawArrow","up","arrowSize","halfArrowSize","baseSize","halfBaseSize","hitTestArrow","drawCircle","circleSize","hitTestCircle","tolerance","xOffset","yOffset","dist","sqrt","drawText","hitTestText","textX","textY","textHeight","halfHeight","SeriesMarkersRenderer","_private__font","hitTestItem","_internal_internalId","_internal_content","drawItem","drawShape","_internal_shape","hitTestShape","fillSizeAndY","rendererItem","marker","offsets","inBarPrice","highPrice","lowPrice","sizeMultiplier","_internal_aboveBar","_internal_belowBar","SeriesMarkersPaneView","_private__dataInvalidated","_private__autoScaleMarginsInvalidated","_private__autoScaleMargins","addAnchors","_internal__makeValid","_internal_autoScaleMargins","_internal_indexedMarkers","shapeMargin$1","marginsAboveAndBelow","above","below","seriesMarkers","id","layoutOptions","prevTimeIndex","dataAt","_internal_dataAt","SeriesPriceLinePaneView","lastValueData","_internal_priceLineColor","SeriesPriceAxisView","showSeriesLastValue","showSymbolLabel","_internal_title","showPriceAndPercentage","seriesLastValueMode","_internal__axisText","_internal__paneText","lastValueColor","_internal_isPercentage","_internal_formattedPriceAbsolute","_internal_formattedPricePercentage","trim","computeFiniteResult","method","valueOne","valueTwo","fallback","firstFinite","secondFinite","PriceRangeImpl","minValue","maxValue","_private__minValue","_private__maxValue","_internal_equals","pr","_internal_clone","_internal_minValue","_internal_maxValue","_internal_length","anotherRange","Infinity","_internal_scaleAroundCenter","delta","center","maxDelta","minDelta","_internal_shift","_internal_toRaw","_internal_fromRaw","raw","AutoscaleInfoImpl","priceRange","margins","_private__priceRange","_private__margins","_internal_priceRange","_internal_margins","CustomPriceLinePaneView","priceLine","_private__priceLine","lineOptions","_internal_yCoord","CustomPriceLinePriceAxisView","axisLabelVisible","showPaneLabel","_private__formatPrice","axisLabelColor","axisLabelTextColor","CustomPriceLine","_private__priceLineView","_private__panePriceAxisView","_internal_applyOptions","_internal_lightUpdate","_internal_paneView","_internal_labelPaneView","_internal_priceAxisView","PriceDataSource","barStyleFnMap","Bar","findBar","barStyle","barIndex","precomputedBars","currentBar","isUp","Candlestick","candlestickStyle","_b","_c","_internal_wickColor","Custom","customStyle","Area","areaStyle","_d","Baseline","baselineStyle","_e","_f","isAboveBaseline","Line","Histogram","histogramStyle","SeriesBarColorer","_private__findBar","_internal_valueAt","_private__styleGetter","_internal_seriesType","MismatchDirection","CHUNK_SIZE","PlotList","_private__items","_private__minMaxCache","_private__rowSearchCache","_internal_last","_internal_firstIndex","_private__indexAt","_private__search","_internal_search","searchMode","pos","_private__valueAt","_internal_minMaxOnRangeCached","end","plots","plot","plotMinMax","_private__minMaxOnRangeCachedImpl","mergeMinMax","plotRows","exactPos","_private__bsearch","_private__searchNearestLeft","_private__searchNearestRight","nearestLeftPos","_private__lowerbound","nearestRightPos","_private__upperbound","a","b","_private__plotMinMax","startIndex","endIndexExclusive","plotIndex","values","_internal_min","_internal_max","firstIndex","lastIndex","cachedLow","cachedHigh","endIndex","minMaxCache","chunkIndex","chunkMinMax","chunkStart","chunkEnd","first","second","createSeriesPlotList","SeriesPrimitiveRendererWrapper","baseRenderer","_private__baseRenderer","drawBackground","call","SeriesPrimitivePaneViewWrapper","_internal_base","_internal_wrapper","wrapper","_internal_zOrder","zOrder","getAxisViewData","baseView","fixedCoordinate","backColor","tickVisible","SeriesPrimitiveTimeAxisViewWrapper","_private__baseView","_private__timeScale","SeriesPrimitivePriceAxisViewWrapper","SeriesPrimitiveWrapper","primitive","_private__paneViewsCache","_private__timeAxisViewsCache","_private__priceAxisViewsCache","_private__priceAxisPaneViewsCache","_private__timeAxisPaneViewsCache","_private__primitive","_internal_primitive","updateAllViews","paneViews","pw","timeAxisViews","aw","priceAxisViews","_internal_priceAxisPaneViews","priceAxisPaneViews","_internal_timeAxisPaneViews","timeAxisPaneViews","_internal_autoscaleInfo","startTimePoint","endTimePoint","autoscaleInfo","hitTest","extractPrimitivePaneViews","primitives","extractor","destination","primitivePaneViewsExtractor","primitivePricePaneViewsExtractor","primitiveTimePaneViewsExtractor","Series","seriesType","customPaneView","_private__customPriceLines","_private__baseHorizontalLineView","_private__lastPriceAnimationPaneView","_private__barColorerCache","_private__markers","_private__indexedMarkers","_private__animationTimeoutId","_private__primitives","_private__seriesType","_private__recreateFormatter","_private__recreatePaneViews","clearTimeout","lastBarColor","globalLast","noDataRes","endBar","barColorer","_internal_formatPriceAbsolute","_internal_formatPricePercentage","targetPriceScaleId","_internal_moveSeriesToScale","_internal_fullUpdate","_internal_updateSource","_internal_updateCrosshair","updateInfo","_private__recalculateMarkers","_internal_lastBarUpdatedOrNewBarsAddedToTheRight","sourcePane","_internal_recalculatePane","_internal_setMarkers","_internal_markers","_internal_createPriceLine","_internal_removePriceLine","line","indexOf","_internal_firstBar","_internal_timePoint","prices","_internal_topPaneViews","animationPaneView","setTimeout","_internal_cursorUpdate","_private__isOverlay","priceLineViews","_internal_bottomPaneViews","_private__extractPaneViews","_internal_pricePaneViews","_internal_timePaneViews","_internal_primitiveHitTest","customPriceLine","autoscaleInfoProvider","_private__autoscaleInfoImpl","_internal_minMove","_internal_formatter","_private__formatter","getValue","_private__markerRadius","_private__markerBorderColor","_private__markerBorderWidth","_private__markerBackgroundColor","_internal_attachPrimitive","_internal_detachPrimitive","_internal_customSeriesPlotValuesBuilder","_internal_customSeriesWhitespaceCheck","_internal_id","barsMinMax","rangeWithBase","primitiveAutoscale","primitiveRange","mergeMargins","formatter","_internal_updateFormatter","_internal_hasPoints","firstDataIndex","_internal_timeToIndex","seriesDataIndex","originalTime","additionalMargin","Magnet","_internal_align","defaultPriceScale","_internal_dataSources","ds","candidates","reduce","acc","ps","firstPrice","concat","sort","nearest","GridRenderer","_internal_vertLinesVisible","_internal_vertLinesColor","_internal_vertLineStyle","timeMark","_internal_timeMarks","_internal_coord","_internal_horzLinesVisible","_internal_horzLinesColor","_internal_horzLineStyle","priceMark","_internal_priceMarks","GridPaneView","gridOptions","grid","horzLines","vertLines","_internal_marks","tm","coord","Grid","defLogFormula","_internal_logicalOffset","_internal_coordOffset","fromPercent","toPercent","toPercentRange","minPercent","maxPercent","fromIndexedTo100","toIndexedTo100","toIndexedTo100Range","toLog","logFormula","m","log10","fromLog","logical","convertPriceRangeToLog","canConvertPriceRangeFromLog","convertPriceRangeFromLog","logFormulaForPriceRange","diff","digits","logicalOffset","coordOffset","logFormulasAreSame","f1","f2","PriceTickSpanCalculator","integralDividers","_private__base","_private__integralDividers","_private__fractionalDividers","baseRest","_internal_tickSpan","maxTickSpan","minMovement","resultTickSpan","resultTickSpanLargerMinMovement","resultTickSpanLargerMaxTickSpan","resultTickSpanLarger1","haveToContinue","TICK_DENSITY","PriceTickMarkBuilder","coordinateToLogicalFunc","logicalToCoordinateFunc","_private__marks","_private__coordinateToLogicalFunc","_private__logicalToCoordinateFunc","scaleHeight","markHeight","_private__tickMarkHeight","spanCalculator1","spanCalculator2","spanCalculator3","spans","_internal_rebuildTickMarks","extraTopBottomMargin","entireTextOnly","_private__fontHeight","minCoord","maxCoord","span","mod","prevCoord","targetIndex","_internal_label","_internal_formatLogical","_internal_isLog","sortSources","s1","s2","PriceScaleMode","percentageFormatter","defaultPriceFormatter","PriceScale","localizationOptions","_private__height","_private__internalHeightCache","_private__priceRangeSnapshot","_private__invalidatedForRange","_internal_isValid","_internal_visibleBars","_private__marginAbove","_private__marginBelow","_private__onMarksChanged","_private__modeChanged","_private__dataSources","_private__cachedOrderedSources","_private__marksCache","_private__scaleStartPoint","_private__scrollStartPoint","_private__logFormula","_private__id","_private__layoutOptions","_private__localizationOptions","_private__markBuilder","_private__coordinateToLogical","_private__logicalToCoordinate","_internal_setMode","scaleMargins","_private__invalidateInternalHeightCache","_internal_isAutoScale","_internal_isIndexedTo100","_internal_isInverted","invertScale","newMode","oldMode","_internal_setPriceRange","modeChanged","_private__onIsInvertedChanged","_internal_modeChanged","_internal_setHeight","_internal_internalHeight","_private__topMarginPx","_private__bottomMarginPx","_private__makeSureItIsValid","newPriceRange","isForceSetValue","oldPriceRange","_internal_invertedCoordinate","bh","ih","isInverted","hmm","fromIndex","toIndex","transformFn","_private__getCoordinateTransformer","invCoordinate","pricesList","openLogical","highLogical","lowLogical","closeLogical","_internal_logicalToPrice","_internal_orderedSources","_internal_addDataSource","_internal_invalidateSourcesCache","_internal_removeDataSource","firstValueIsNull","_internal_firstValueIsNull","marks","_internal_onMarksChanged","_internal_startScale","_internal_scaleTo","scaleCoeff","_internal_endScale","_internal_startScroll","_internal_scrollTo","priceUnitsPerPixel","pixelDelta","priceDelta","_internal_endScroll","_private__formatPercentage","_private__formatterSource","_internal_sourcesForAutoScale","_internal_recalculatePriceRange","formatterSource","_private__recalculatePriceRangeImpl","marginAbove","marginBelow","autoScaleInfo","sourceRange","extendValue","rawRange","newLogFormula","rawSnapshot","_private__formatValue","fallbackFormatter","priceFormatter","percentage","DEFAULT_STRETCH_FACTOR","Pane","_private__overlaySourcesByScaleId","_private__width","_private__stretchFactor","_private__destroyed","_private__grid","_private__leftPriceScale","_private__createPriceScale","leftPriceScale","_private__rightPriceScale","rightPriceScale","_private__onPriceScaleModeChanged","_internal_applyScaleOptions","localization","overlayPriceScales","sourceArrays","_internal_priceScaleById","_internal_priceScalesOptionsChanged","_internal_stretchFactor","_internal_setStretchFactor","factor","_internal_setWidth","_internal_updateAllSources","targetScaleId","targetZOrder","_private__getZOrderMinMax","_internal_maxZOrder","_private__insertDataSource","overlaySources","overlayIndex","_internal_recalculatePriceScale","_internal_leftPriceScale","_internal_rightPriceScale","_internal_startScalePrice","_internal_scalePriceTo","_internal_endScalePrice","_internal_startScrollPrice","_internal_scrollPriceTo","_internal_endScrollPrice","_private__recalculatePriceScaleImpl","_internal_resetPriceScale","_internal_momentaryAutoScale","_internal_recalculate","_internal_onDestroyed","_internal_grid","sourceForAutoScale","_internal_minZOrder","minZOrder","maxZOrder","j","actualOptions","FormattedLabelsCache","horzScaleBehavior","_private__format","_private__horzScaleBehavior","_internal_format","tickMark","cacheKey","tick","_internal_string","str","RangeImpl","_private__left","_private__right","_internal_count","areRangesEqual","TickMarks","_private__marksByWeight","_private__uniformDistribution","_internal_setUniformDistribution","val","_internal_setTimeScalePoints","newPoints","firstChangedPointIndex","_private__removeMarksSinceIndex","marksForWeight","timeWeight","weight","_internal_build","maxWidth","maxIndexesPerMark","_internal_maxIndexesPerMark","_private__buildMarksImpl","sinceIndex","weightsToClear","keys","prevMarks","prevMarksLength","prevMarksPointer","currentWeight","currentWeightLength","rightIndex","leftIndex","mark","currentIndex","lastMark","TimeScaleVisibleRange","logicalRange","_private__logicalRange","_internal_strictRange","_internal_logicalRange","_internal_invalid","defaultTickMarkMaxCharacterLength","markWithGreaterWeight","TimeScale","_private__baseIndexOrNull","_private__points","_private__tickMarks","_private__formattedByWeight","_private__visibleRange","_private__visibleRangeInvalidated","_private__visibleBarsChanged","_private__logicalRangeChanged","_private__optionsApplied","_private__commonTransitionStartState","_private__timeMarksCache","_private__labels","_private__rightOffset","rightOffset","_private__barSpacing","_private__updateDateTimeFormatter","uniformDistribution","_internal_applyLocalizationOptions","_private__invalidateTickMarks","fixLeftEdge","_private__doFixLeftEdge","fixRightEdge","_private__doFixRightEdge","minBarSpacing","findNearest","key","_private__updateVisibleRange","_internal_visibleLogicalRange","_internal_visibleTimeRange","_internal_timeRangeForLogicalRange","_private__firstIndex","_private__lastIndex","_internal_logicalRangeForTimeRange","newWidth","previousVisibleRange","oldWidth","lockVisibleTimeRangeOnResize","newBarSpacing","_private__correctBarSpacing","_private__correctOffset","baseIndex","_internal_baseIndex","deltaFromRight","indexFrom","indexTo","_internal_coordinateToIndex","_private__coordinateToFloatIndex","_internal_recalculateAllPanes","_private__setBarSpacing","_internal_rightOffset","pixelsPer8Characters","pixelsPerCharacter","maxLabelWidth","tickMarkMaxCharacterLength","indexPerLabel","earliestIndexOfSecondLabel","indexOfSecondLastLabel","isAllScalingAndScrollingDisabled","_private__isAllScalingAndScrollingDisabled","isLeftEdgeFixed","isRightEdgeFixed","label","_private__formatLabel","needAlignCoordinate","_internal_restoreDefault","_internal_setBaseIndex","_internal_zoom","zoomPoint","scale","floatIndexAtZoomPoint","rightBarStaysOnScroll","_private__saveCommonTransitionsStartState","startLengthFromRight","currentLengthFromRight","_private__clearCommonTransitionsStartState","shiftInLogical","_internal_scrollToRealTime","_internal_scrollToOffsetAnimated","animationDuration","RangeError","animationStart","_internal_finished","_internal_getPosition","animationProgress","finishAnimation","_internal_visibleBarsChanged","_internal_logicalRangeChanged","_internal_optionsApplied","_internal_setVisibleRange","_internal_fitContent","last","_internal_setLogicalRange","barRange","timeScalePoint","timeFormatter","formatHorzItem","handleScroll","handleScale","horzTouchDrag","mouseWheel","pressedMouseMove","vertTouchDrag","axisDoubleClickReset","axisPressedMouseMove","pinch","_private__rightOffsetForCoordinate","oldBarSpacing","_private__resetTimeMarksCache","_private__setVisibleRange","newBarsLength","rightBorder","leftBorder","_private__minBarSpacing","maxBarSpacing","maxRightOffset","_private__maxRightOffset","minRightOffset","_private__minRightOffset","barsEstimation","_private__formatLabelImpl","formatTickmark","newVisibleRange","oldVisibleRange","updateFormatter","leftEdgeOffset","WatermarkRenderer","_private__metricsCache","_internal_lines","_private__metrics","_internal_lineHeight","vertOffset","_internal_vertAlign","horzOffset","_internal_horzAlign","_internal_vertOffset","fontCache","_private__fontCache","WatermarkPaneView","horzAlign","vertAlign","fontStyle","Watermark","TrackingModeExitMode","ChartModel","invalidateHandler","_private__panes","_private__serieses","_private__hoveredSource","_private__priceScalesOptionsChanged","_private__crosshairMoved","_private__gradientColorsCache","_private__invalidateHandler","_private__rendererOptionsProvider","_private__magnet","_private__watermark","watermark","_internal_createPane","_private__backgroundTopColor","_private__getBackgroundColor","_private__backgroundBottomColor","_private__invalidate","_private__invalidationMaskForSource","_internal_hoveredSource","_internal_setHoveredSource","prevSource","_internal_source","_internal_applyPriceScaleOptions","_internal_findPriceScale","_internal_panes","_internal_watermarkSource","_internal_crosshairSource","_internal_crosshairMoved","_internal_setPaneHeight","actualIndex","mask","_private__paneInvalidationMask","_internal_startScaleTime","_internal_zoomTime","pointX","_internal_scrollChart","_internal_startScrollTime","_internal_scrollTimeTo","_internal_endScrollTime","_internal_scaleTimeTo","_internal_endScaleTime","_internal_setAndSaveCurrentPosition","event","skipEvent","_internal_setAndSaveSyntheticPosition","horizontalPosition","_internal_clearCurrentPosition","_internal_updateTimeScale","newBaseIndex","oldFirstTime","newFirstTime","currentBaseIndex","isLastSeriesBarVisible","isLeftBarShiftToLeft","isSeriesPointsAdded","isSeriesPointsAddedToRight","allowShiftWhenReplacingWhitespace","allowShiftVisibleRangeOnWhitespaceReplacement","replacedExistingWhitespace","needShiftVisibleRangeOnNewBar","shiftVisibleRangeOnNewBar","compensationShift","find","includes","_internal_rendererOptionsProvider","_internal_createSeries","_private__createSeries","_internal_removeSeries","seriesIndex","_internal_setTargetLogicalRange","_internal_defaultVisiblePriceScaleId","_internal_backgroundBottomColor","_internal_colors","cachedValue","invalidateType","side","background","fillUpDownCandlesticksColors","LastPriceAnimationMode","precisionByMinMove","fractPart","PriceLineSource","ColorType","isBusinessDay","isUTCTimestamp","TickMarkType","getMonth","date","getUTCMonth","getDay","getUTCDate","getYear","getUTCFullYear","dd","MMMM","locale","Date","toLocaleString","month","MMM","MM","yy","yyyy","formatDate","DateFormatter","dateFormat","_private__dateFormat","_private__locale","TimeFormatter","_private__formatStr","getUTCHours","getUTCMinutes","getUTCSeconds","defaultParams","_internal_dateFormat","_internal_timeFormat","_internal_dateTimeSeparator","_internal_locale","DateTimeFormatter","formatterParams","_private__dateFormatter","_private__timeFormatter","_private__separator","dateTime","defaultTickMarkFormatter","timePoint","tickMarkType","formatOptions","year","day","hour12","hour","minute","_internal_businessDay","_internal_timestamp","UTC","localDateFromUtc","getUTCMilliseconds","hours","minutes","seconds","intradayWeightDivisors","_internal_divisor","_internal_weight","weightByTime","currentDate","prevDate","getTime","cast","fillWeightsForPoints","sortedTimePoints","prevTime","totalTimeDiff","currentPoint","averageTimeDiff","approxPrevDate","businessDayConverter","businessDay","stringToBusinessDay","timestampConverter","selectTimeConverter","validDateRegex","convertTime","test","d","convertStringToBusinessDay","convertStringsToBusinessDays","weightToTickMarkType","timeVisible","secondsVisible","HorzScaleBehaviorTime","setOptions","preprocessData","createConverterToInternalObj","convertHorzItemToInternal","_private__dateTimeFormatter","tp","tickMarkFormatter","tickMarkString","maxTickMarkWeight","tickMarks","maxWeight","_internal_applyDefaults","isRunningOnClientSide","window","isFF","navigator","userAgent","isIOS","platform","isChrome","chrome","isWindows","userAgentData","isChromiumBased","brands","some","brand","warn","msg","console","suggestChartSize","integerWidth","integerHeight","suggestTimeScaleHeight","originalHeight","suggestPriceScaleWidth","originalWidth","distanceBetweenPoints","pos1","pos2","_internal_position","speedPxPerMSec","maxSpeed","speed","durationMSec","dumpingCoeff","lnDumpingCoeff","log","KineticAnimation","minSpeed","_private__position1","_private__position2","_private__position3","_private__position4","_private__animationStartPosition","_private__durationMsecs","_private__speedPxPerMsec","_private__minSpeed","_private__maxSpeed","_private__dumpingCoeff","_internal_addPosition","totalDistance","speed1","distance1","speedItems","distanceItems","speed2","distance2","speed3","distance3","resultSpeed","startPosition","durationMsecs","_private__progressDuration","progress","createBoundCanvas","parentElement","doc","ownerDocument","canvas","createElement","appendChild","binding","allowResizeObserver","transform","canvasElementClientSize","resizeCanvasElement","releaseCanvas","getContext","drawForeground","drawSourcePaneViews","paneViewsGetter","drawRendererFn","preventScrollByWheelClick","el","addEventListener","button","preventDefault","MouseEventHandler","handler","_private__clickCount","_private__clickTimeoutId","_private__clickPosition","NEGATIVE_INFINITY","POSITIVE_INFINITY","_private__tapCount","_private__tapTimeoutId","_private__tapPosition","_private__longTapTimeoutId","_private__longTapActive","_private__mouseMoveStartPosition","_private__touchMoveStartPosition","_private__touchMoveExceededManhattanDistance","_private__cancelClick","_private__cancelTap","_private__unsubscribeOutsideMouseEvents","_private__unsubscribeOutsideTouchEvents","_private__unsubscribeMobileSafariEvents","_private__unsubscribeMousemove","_private__unsubscribeRootMouseEvents","_private__unsubscribeRootTouchEvents","_private__startPinchMiddlePoint","_private__startPinchDistance","_private__pinchPrevented","_private__preventTouchDragProcess","_private__mousePressed","_private__lastTouchEventTimeStamp","_private__activeTouchId","_private__acceptMouseLeave","_private__onFirefoxOutsideMouseUp","mouseUpEvent","_private__mouseUpHandler","_private__onMobileSafariDoubleClick","dblClickEvent","_private__firesTouchEvents","compatEvent","_private__makeCompatEvent","_internal_manhattanDistance","manhattanDistance","_private__touchMouseMoveWithDownInfo","getPosition","_private__processTouchEvent","_private__handler","_internal_doubleTapEvent","_private__resetTapTimeout","_private__processMouseEvent","_internal_mouseDoubleClickEvent","_private__resetClickTimeout","_private__target","_private__init","_private__clearLongTapTimeout","_private__mouseEnterHandler","enterEvent","boundMouseMoveHandler","_private__mouseMoveHandler","removeEventListener","_internal_mouseEnterEvent","moveEvent","_internal_mouseMoveEvent","_private__touchMoveHandler","touch","touchWithId","changedTouches","eventTimeStamp","moveInfo","_internal_xOffset","_internal_yOffset","correctedXOffset","isVertDrag","_internal_treatVertTouchDragAsPageScroll","isHorzDrag","_internal_treatHorzTouchDragAsPageScroll","_internal_touchMoveEvent","_private__mouseMoveWithDownHandler","_internal_pressedMouseMoveEvent","currentPosition","_private__touchEndHandler","touchEndEvent","touches","_internal_touchEndEvent","_internal_tapEvent","rootElement","documentElement","_internal_mouseUpEvent","_internal_mouseClickEvent","_private__touchStartHandler","downEvent","identifier","boundTouchMoveWithDownHandler","boundTouchEndHandler","passive","_private__longTapHandler","_internal_touchStartEvent","_private__mouseDownHandler","boundMouseMoveWithDownHandler","boundMouseUpHandler","_internal_mouseDownEvent","outsideHandler","_internal_mouseDownOutsideEvent","composed","contains","composedPath","_private__mouseLeaveHandler","_private__initPinch","_internal_pinchStartEvent","_internal_pinchEvent","_internal_pinchEndEvent","_private__checkPinchState","currentDistance","getDistance","_private__stopPinch","_private__startPinch","box","getBoundingClientRect","clientX","clientY","_internal_mouseLeaveEvent","_internal_longTapEvent","sourceCapabilities","firesTouchEvents","eventLike","pageX","pageY","screenX","screenY","localX","localY","ctrlKey","altKey","shiftKey","metaKey","_internal_isTouch","startsWith","_internal_srcType","_internal_target","_internal_view","_internal_preventDefault","element","xDiff","yDiff","cancelable","timeStamp","comparePrimitiveZOrder","reference","findBestPrimitiveHitTest","bestPrimitiveHit","bestHitSource","primitiveHitResults","hitResult","_internal_hit","convertPrimitiveHitResult","primitiveHit","_internal_object","_internal_cursorStyle","cursorStyle","hitTestPaneView","hitTestPane","isBackground","sourceResult","buildPriceAxisViewsGetter","psId","PriceAxisWidget","rendererOptionsProvider","_private__size","_private__mousedown","_private__widthCache","_private__prevOptimalWidth","_private__isSettingSize","_private__canvasSuggestedBitmapSizeChangedHandler","_internal_chart","_private__topCanvasSuggestedBitmapSizeChangedHandler","_private__isLeft","_private__sourcePaneViews","_private__sourceTopPaneViews","_private__sourceBottomPaneViews","_private__cell","document","overflow","_private__canvasBinding","subscribeSuggestedBitmapSizeChanged","canvasElement","zIndex","_private__topCanvasBinding","topCanvas","_private__mouseDownEvent","_private__pressedMouseMoveEvent","_private__mouseDownOutsideEvent","_private__mouseUpEvent","_private__mouseDoubleClickEvent","_private__mouseEnterEvent","_private__mouseLeaveEvent","_private__mouseEventHandler","unsubscribeSuggestedBitmapSizeChanged","dispose","_internal_getElement","_internal_rendererOptions","isFontChanged","_internal_optimalWidth","tickMarkMaxWidth","_private__baseFont","_private__backLabels","topValue","bottomValue","resultTickMarksMaxWidth","_internal_setSize","newSize","_internal_getWidth","_internal_state","_internal_paint","_private__alignLabels","applySuggestedBitmapSize","_private__drawBackground","_internal_drawAdditionalSources","_private__drawTickMarks","_private__drawBackLabels","topTarget","_private__drawCrosshairLabel","_internal_getBitmapSize","_internal_drawBitmap","drawImage","_private__setCursor","addViewsForSources","borderSize","priceScaleOptions","tickMarkLeftX","tickHeight","tickLength","rect","textLeftX","yMidCorrections","orderedSources","paneState","isDefault","centerSource","updateForSources","sourceViews","alignLabels","_private__fixLabelOverlap","l","prevFixedCoordinate","ro","cursor","sourceBottomPaneViews$1","sourcePaneViews$1","sourceLabelPaneViews","sourceTopPaneViews$1","PaneWidget","chart","state","_private__leftPriceAxisWidget","_private__rightPriceAxisWidget","_private__startScrollingPos","_private__isScrolling","_private__clicked","_private__dblClicked","_private__prevPinchScale","_private__longTap","_private__startTrackPoint","_private__exitTrackingModeOnNextTry","_private__initCrosshairPosition","_private__scrollXAnimation","_private__state","_private__chart","_private__onStateDestroyed","_private__paneCell","padding","paneWrapper","_private__leftAxisCell","_private__rightAxisCell","_private__rowElement","_internal_updatePriceAxisWidgetsStates","_internal_setState","prototype","_private__recreatePriceAxisWidgets","_internal_updatePriceAxisWidgets","stretchFactor","_private__onMouseEvent","_private__setCrosshairPosition","_private__mouseTouchDownEvent","_internal_setCursorStyle","_private__fireClickedDelegate","_private__fireMouseClickDelegate","_private__pressedMouseTouchMoveEvent","_private__endScroll","_private__startTrackingMode","_private__clearCrosshairPosition","_internal_clicked","_internal_dblClicked","middlePoint","zoomScale","origPoint","newX","newY","trackingMode","exitMode","_private__tryExitTrackingMode","_internal_setPriceAxisSize","priceAxisWidget","_internal_getSize","_internal_recalculatePriceScales","_private__drawSources","_private__drawGrid","_private__drawWatermark","_private__drawCrosshair","_internal_leftPriceAxisWidget","_internal_rightPriceAxisWidget","delegate","_private__drawSourceImpl","drawFn","hoveredSource","objecId","leftAxisVisible","rightAxisVisible","removeChild","_private__preventScroll","_private__correctXCoord","_private__correctYCoord","startTrackPoint","crossHairPosition","startAnimationTime","activeElement","body","blur","selection","getSelection","removeAllRanges","chartOptions","scrollOptions","kineticScrollOptions","kineticScroll","_internal_localX","_internal_localY","mouse","PriceAxisStub","_private__borderVisible","_private__bottomColor","horzBorderSize","vertBorderSize","buildTimeAxisViewsGetter","sourcePaneViews","sourceTopPaneViews","sourceBottomPaneViews","TimeAxisWidget","chartWidget","_private__leftStub","_private__rightStub","_private__mouseDown","_private__sizeChanged","_private__element","_private__leftStubCell","_private__rightStubCell","_private__dv","_private__recreateStubs","_internal_leftStub","_internal_rightStub","_internal_sizeChanged","_internal_setSizes","timeAxisSize","leftStubWidth","rightStubWidth","_internal_optimalHeight","_private__getRendererOptions","_internal_labelBottomOffset","_private__drawAdditionalSources","_private__drawLabels","axisViewsGetter","_private__lineColor","tickLen","_private__alignTickMarkLabelCoordinate","_private__baseBoldFont","labelText","leftTextCoordinate","newFont","borderVisibleGetter","bottomColorGetter","windowsChrome","ChartWidget","container","_private__paneWidgets","_private__drawRafId","_private__leftPriceAxisWidth","_private__rightPriceAxisWidth","_private__invalidateMask","_private__drawPlanned","_private__observer","_private__cursorStyleOverride","_private__container","classList","direction","disableSelection","_private__tableElement","setAttribute","_private__onWheelBound","_private__onMousewheel","shouldSubscribeMouseWheel","_private__setMouseWheelEventListener","_private__onPaneWidgetCrosshairMoved","_private__timeAxisWidget","usedObserver","autoSize","_private__installObserver","containerRect","_internal_resize","_private__syncGuiWithModel","_private__updateTimeAxisVisibility","_internal_paneWidgets","_internal_timeAxisWidget","cancelAnimationFrame","paneWidget","_private__uninstallObserver","forceRepaint","sizeHint","heightStr","widthStr","_private__drawImpl","invalidateMask","currentlyHasMouseWheelListener","shouldHaveMouseWheelListener","_private__applyAutoSizeOptions","_internal_takeScreenshot","screeshotBitmapSize","_private__traverseLayout","screenshotCanvas","_internal_getPriceAxisWidth","_private__isLeftAxisVisible","_private__isRightAxisVisible","_internal_autoSizeActive","_internal_element","setProperty","removeProperty","_internal_getCursorOverrideStyle","_internal_paneSize","firstPane","drawPriceAxises","targetX","targetY","leftAxisBitmapWidth","firstPaneBitmapWidth","rightAxisBitmapWidth","drawStub","stub","timeAxisBitmapSize","_private__adjustSizeImpl","totalStretch","leftPriceAxisWidth","rightPriceAxisWidth","minimumWidth","paneWidth","separatorsHeight","timeAxisVisible","timeAxisHeight","minimumHeight","otherWidgetHeight","totalPaneHeight","stretchPixels","accumulatedHeight","paneHeight","calculatePaneHeight","_private__determineWheelSpeedAdjustment","deltaMode","DOM_DELTA_PAGE","DOM_DELTA_LINE","devicePixelRatio","deltaX","deltaY","scrollSpeedAdjustment","scrollPosition","invalidationType","_private__updateGui","_private__applyMomentaryAutoScale","_private__applyTimeScaleInvalidations","panes","requestAnimationFrame","targetPaneWidgetsCount","actualPaneWidgetsCount","pop","_private__onPaneWidgetClicked","_private__onPaneWidgetDblClicked","insertBefore","_private__getMouseEventParamsImpl","clientTime","hoveredSeries","hoveredObject","_internal_originalTime","_internal_point","_internal_hoveredSeries","_internal_seriesData","_internal_hoveredObject","_internal_touchMouseEventData","display","ResizeObserver","entries","containerEntry","entry","contentRect","observe","disconnect","userSelect","webkitUserSelect","msUserSelect","MozUserSelect","webkitTapHighlightColor","Boolean","isWhitespaceData","open","isFulfilledData","__rest","getOwnPropertySymbols","propertyIsEnumerable","getColoredLineBasedSeriesPlotRow","getAreaSeriesPlotRow","getBaselineSeriesPlotRow","getBarSeriesPlotRow","close","getCandlestickSeriesPlotRow","getCustomSeriesPlotRow","dataToPlotRow","excludedTime","isSeriesPlotRow","wrapCustomValues","customValues","_internal_customValues","isWhitespaceDataWithCustomCheck","customIsWhitespace","wrapWhitespaceData","createPlotRowFn","getSeriesPlotRowCreator","seriesPlotRowFnMap","createEmptyTimePointData","_internal_mapping","seriesRowsFirstAndLastTime","seriesRows","_internal_firstTime","_internal_lastTime","seriesUpdateInfo","prevSeriesRows","firstAndLastTime","prevFirstAndLastTime","timeScalePointTime","mergedPointData","saveOriginalTime","DataLayer","_private__pointDataByTimePoint","_private__seriesRowsBySeries","_private__seriesLastTimePoint","_private__sortedTimePoints","_internal_setSeriesData","needCleanupPoints","isTimeScaleAffected","pointData","originalTimes","timeConverter","createPlotRow","customWhitespaceChecker","horzItemKey","timePointData","_private__cleanupPointsData","_private__setRowsToSeries","newTimeScalePoints","t1","t2","_private__replaceTimeScalePoints","_private__getUpdateResponse","_internal_updateSeriesData","extendedData","lastSeriesTime","pointDataAtTime","affectsTimeScale","_private__updateLastSeriesRow","info","newPoint","insertIndex","assignIndexToPointData","lastSeriesRow","newTimePoints","oldPoint","_private__getBaseIndex","updatedSeries","dataUpdateResponse","_internal_series","_internal_info","_internal_points","_internal_firstChangedPointIndex","seriesRow","singleValueData","lineData","areaData","baselineData","ohlcData","barData","candlestickData","getSeriesDataCreator","seriesPlotRowToDataMap","customData","crosshairOptionsDefaults","gridOptionsDefaults","layoutOptionsDefaults","priceScaleOptionsDefaults","timeScaleOptionsDefaults","watermarkOptionsDefaults","chartOptionsDefaults","language","PriceScaleApi","_private__chartWidget","_private__priceScaleId","applyOptions","checkPriceLineOptions","checkItemsAreOrdered","allowDuplicates","checkResult","checkSeriesValuesType","getChecker","checkBarItem","checkLineItem","checkCustomItem","barItem","lineItem","convertSeriesMarker","sm","newTime","priceLineOptionsDefaults","PriceLine","_internal_priceLine","SeriesApi","dataUpdatesConsumer","priceScaleApiProvider","chartApi","_private__dataChangedDelegate","_internal__dataUpdatesConsumer","_private__priceScaleApiProvider","_internal__chartApi","priceToCoordinate","coordinateToPrice","barsInLogicalRange","correctedRange","dataFirstBarInRange","dataLastBarInRange","dataFirstIndex","dataLastIndex","barsBefore","barsAfter","setData","_internal_applyNewData","_private__onDataChanged","_internal_updateData","dataByIndex","logicalIndex","mismatchDirection","creator","seriesCreator","rows","subscribeDataChanged","unsubscribeDataChanged","setMarkers","convertedMarkers","markers","internalItem","createPriceLine","strictOptions","removePriceLine","attachPrimitive","attached","requestUpdate","detachPrimitive","detached","TimeScaleApi","timeAxisWidget","_private__timeRangeChanged","_private__onVisibleBarsChanged","_private__onVisibleLogicalRangeChanged","_private__onSizeChanged","scrollToPosition","animated","scrollToRealTime","getVisibleRange","timeRange","setVisibleRange","convertedRange","getVisibleLogicalRange","setVisibleLogicalRange","resetTimeScale","fitContent","logicalToCoordinate","coordinateToLogical","timeToCoordinate","coordinateToTime","subscribeVisibleTimeRangeChange","unsubscribeVisibleTimeRangeChange","subscribeVisibleLogicalRangeChange","unsubscribeVisibleLogicalRangeChange","subscribeSizeChange","unsubscribeSizeChange","patchPriceFormat","priceFormatBuiltIn","migrateHandleScaleScrollOptions","toInternalOptions","ChartApi","_private__seriesMap","_private__seriesMapReversed","_private__clickedDelegate","_private__dblClickedDelegate","_private__crosshairMovedDelegate","_private__dataLayer","internalOptions","paramSupplier","_private__convertMouseParams","_private__timeScaleApi","remove","resize","autoSizeActive","addCustomSeries","defaults","defaultOptions","_private__addSeriesImpl","addAreaSeries","addBaselineSeries","addBarSeries","addCandlestickSeries","addHistogramSeries","addLineSeries","removeSeries","seriesApi","_private__sendUpdateToChart","subscribeClick","unsubscribeClick","subscribeCrosshairMove","unsubscribeCrosshairMove","subscribeDblClick","unsubscribeDblClick","takeScreenshot","chartElement","paneSize","setCrosshairPosition","clearCrosshairPosition","styleDefaults","_private__mapSeriesToApi","param","hoveredObjectId","sourceEvent","createChartEx","htmlElement","getElementById","createChart","customSeriesDefaultOptions","version"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/node_modules/lightweight-charts/dist/lightweight-charts.development.mjs"],"sourcesContent":["/*!\n * @license\n * TradingView Lightweight Chartsâ„¢ v4.1.2\n * Copyright (c) 2024 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\n\nconst candlestickStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    wickVisible: true,\n    borderVisible: true,\n    borderColor: '#378658',\n    borderUpColor: '#26a69a',\n    borderDownColor: '#ef5350',\n    wickColor: '#737375',\n    wickUpColor: '#26a69a',\n    wickDownColor: '#ef5350',\n};\nconst barStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    openVisible: true,\n    thinBars: true,\n};\nconst lineStyleDefaults = {\n    color: '#2196f3',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst areaStyleDefaults = {\n    topColor: 'rgba( 46, 220, 135, 0.4)',\n    bottomColor: 'rgba( 40, 221, 100, 0)',\n    invertFilledArea: false,\n    lineColor: '#33D778',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst baselineStyleDefaults = {\n    baseValue: {\n        type: 'price',\n        price: 0,\n    },\n    topFillColor1: 'rgba(38, 166, 154, 0.28)',\n    topFillColor2: 'rgba(38, 166, 154, 0.05)',\n    topLineColor: 'rgba(38, 166, 154, 1)',\n    bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n    bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n    bottomLineColor: 'rgba(239, 83, 80, 1)',\n    lineWidth: 3,\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst histogramStyleDefaults = {\n    color: '#26a69a',\n    base: 0,\n};\nconst customStyleDefaults = {\n    color: '#2196f3',\n};\nconst seriesOptionsDefaults = {\n    title: '',\n    visible: true,\n    lastValueVisible: true,\n    priceLineVisible: true,\n    priceLineSource: 0 /* PriceLineSource.LastBar */,\n    priceLineWidth: 1,\n    priceLineColor: '',\n    priceLineStyle: 2 /* LineStyle.Dashed */,\n    baseLineVisible: true,\n    baseLineWidth: 1,\n    baseLineColor: '#B2B5BE',\n    baseLineStyle: 0 /* LineStyle.Solid */,\n    priceFormat: {\n        type: 'price',\n        precision: 2,\n        minMove: 0.01,\n    },\n};\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n    /**\n     * A line.\n     */\n    LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * A stepped line.\n     */\n    LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n    /**\n     * A curved line.\n     */\n    LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n    /**\n     * A solid line.\n     */\n    LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * A dotted line.\n     */\n    LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n    /**\n     * A dashed line.\n     */\n    LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n    /**\n     * A dashed line with bigger dashes.\n     */\n    LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n    /**\n     * A dotted line with more space between dots.\n     */\n    LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n    const dashPatterns = {\n        [0 /* LineStyle.Solid */]: [],\n        [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n        [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n        [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n        [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth],\n    };\n    const dashPattern = dashPatterns[style];\n    ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(left, y + correction);\n    ctx.lineTo(right, y + correction);\n    ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(x + correction, top);\n    ctx.lineTo(x + correction, bottom);\n    ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n    ctx.save();\n    if (ctx.lineWidth % 2) {\n        ctx.translate(0.5, 0.5);\n    }\n    drawFunction();\n    ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n    }\n}\nfunction ensureDefined(value) {\n    if (value === undefined) {\n        throw new Error('Value is undefined');\n    }\n    return value;\n}\nfunction ensureNotNull(value) {\n    if (value === null) {\n        throw new Error('Value is null');\n    }\n    return value;\n}\nfunction ensure(value) {\n    return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) { }\n\n/**\n * Note this object should be explicitly marked as public so that dts-bundle-generator does not mangle the property names.\n *\n * @public\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n */\nconst namedColorRgbHexStrings = {\n    // The order of properties in this Record is not important for the internal logic.\n    // It's just GZIPped better when props follows this order.\n    // Please add new colors to the end of the record.\n    khaki: '#f0e68c',\n    azure: '#f0ffff',\n    aliceblue: '#f0f8ff',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gainsboro: '#dcdcdc',\n    gray: '#808080',\n    green: '#008000',\n    honeydew: '#f0fff0',\n    floralwhite: '#fffaf0',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lemonchiffon: '#fffacd',\n    hotpink: '#ff69b4',\n    lightyellow: '#ffffe0',\n    greenyellow: '#adff2f',\n    lightgoldenrodyellow: '#fafad2',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    lightcyan: '#e0ffff',\n    magenta: '#f0f',\n    maroon: '#800000',\n    olive: '#808000',\n    orange: '#ffa500',\n    oldlace: '#fdf5e6',\n    mediumblue: '#0000cd',\n    transparent: '#0000',\n    lime: '#0f0',\n    lightpink: '#ffb6c1',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    midnightblue: '#191970',\n    orchid: '#da70d6',\n    mediumorchid: '#ba55d3',\n    mediumturquoise: '#48d1cc',\n    orangered: '#ff4500',\n    royalblue: '#4169e1',\n    powderblue: '#b0e0e6',\n    red: '#f00',\n    coral: '#ff7f50',\n    turquoise: '#40e0d0',\n    white: '#fff',\n    whitesmoke: '#f5f5f5',\n    wheat: '#f5deb3',\n    teal: '#008080',\n    steelblue: '#4682b4',\n    bisque: '#ffe4c4',\n    aquamarine: '#7fffd4',\n    aqua: '#0ff',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    springgreen: '#00ff7f',\n    antiquewhite: '#faebd7',\n    burlywood: '#deb887',\n    brown: '#a52a2a',\n    beige: '#f5f5dc',\n    chocolate: '#d2691e',\n    chartreuse: '#7fff00',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cadetblue: '#5f9ea0',\n    tomato: '#ff6347',\n    fuchsia: '#f0f',\n    blue: '#00f',\n    salmon: '#fa8072',\n    blanchedalmond: '#ffebcd',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    thistle: '#d8bfd8',\n    tan: '#d2b48c',\n    cyan: '#0ff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    blueviolet: '#8a2be2',\n    black: '#000',\n    darkmagenta: '#8b008b',\n    darkslateblue: '#483d8b',\n    darkkhaki: '#bdb76b',\n    darkorchid: '#9932cc',\n    darkorange: '#ff8c00',\n    darkgreen: '#006400',\n    darkred: '#8b0000',\n    dodgerblue: '#1e90ff',\n    darkslategray: '#2f4f4f',\n    dimgray: '#696969',\n    deepskyblue: '#00bfff',\n    firebrick: '#b22222',\n    forestgreen: '#228b22',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    lavenderblush: '#fff0f5',\n    feldspar: '#d19275',\n    indianred: '#cd5c5c',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightskyblue: '#87cefa',\n    lightslategray: '#789',\n    lightslateblue: '#8470ff',\n    snow: '#fffafa',\n    lightseagreen: '#20b2aa',\n    lightsalmon: '#ffa07a',\n    darksalmon: '#e9967a',\n    darkviolet: '#9400d3',\n    mediumpurple: '#9370d8',\n    mediumaquamarine: '#66cdaa',\n    skyblue: '#87ceeb',\n    lavender: '#e6e6fa',\n    lightsteelblue: '#b0c4de',\n    mediumvioletred: '#c71585',\n    mintcream: '#f5fffa',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    olivedrab: '#6b8e23',\n    palevioletred: '#d87093',\n    violetred: '#d02090',\n    yellow: '#ff0',\n    yellowgreen: '#9acd32',\n    lawngreen: '#7cfc00',\n    pink: '#ffc0cb',\n    paleturquoise: '#afeeee',\n    palegoldenrod: '#eee8aa',\n    darkolivegreen: '#556b2f',\n    darkseagreen: '#8fbc8f',\n    darkturquoise: '#00ced1',\n    peachpuff: '#ffdab9',\n    deeppink: '#ff1493',\n    violet: '#ee82ee',\n    palegreen: '#98fb98',\n    mediumseagreen: '#3cb371',\n    peru: '#cd853f',\n    saddlebrown: '#8b4513',\n    sandybrown: '#f4a460',\n    rosybrown: '#bc8f8f',\n    purple: '#800080',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    papayawhip: '#ffefd5',\n    mediumslateblue: '#7b68ee',\n    plum: '#dda0dd',\n    mediumspringgreen: '#00fa9a',\n};\nfunction normalizeRgbComponent(component) {\n    if (component < 0) {\n        return 0;\n    }\n    if (component > 255) {\n        return 255;\n    }\n    // NaN values are treated as 0\n    return (Math.round(component) || 0);\n}\nfunction normalizeAlphaComponent(component) {\n    return (!(component <= 0) && !(component > 0) ? 0 :\n        component < 0 ? 0 :\n            component > 1 ? 1 :\n                // limit the precision of all numbers to at most 4 digits in fractional part\n                Math.round(component * 10000) / 10000);\n}\n/**\n * @example\n * #fb0\n * @example\n * #f0f\n * @example\n * #f0fa\n */\nconst shortHexRe = /^#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i;\n/**\n * @example\n * #00ff00\n * @example\n * #336699\n * @example\n * #336699FA\n */\nconst hexRe = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$/i;\n/**\n * @example\n * rgb(123, 234, 45)\n * @example\n * rgb(255,234,245)\n */\nconst rgbRe = /^rgb\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*\\)$/;\n/**\n * @example\n * rgba(123, 234, 45, 1)\n * @example\n * rgba(255,234,245,0.1)\n */\nconst rgbaRe = /^rgba\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?[\\d]{0,10}(?:\\.\\d+)?)\\s*\\)$/;\nfunction colorStringToRgba(colorString) {\n    colorString = colorString.toLowerCase();\n    // eslint-disable-next-line no-restricted-syntax\n    if (colorString in namedColorRgbHexStrings) {\n        colorString = namedColorRgbHexStrings[colorString];\n    }\n    {\n        const matches = rgbaRe.exec(colorString) || rgbRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 10)),\n                normalizeRgbComponent(parseInt(matches[2], 10)),\n                normalizeRgbComponent(parseInt(matches[3], 10)),\n                normalizeAlphaComponent((matches.length < 5 ? 1 : parseFloat(matches[4]))),\n            ];\n        }\n    }\n    {\n        const matches = hexRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 16)),\n                normalizeRgbComponent(parseInt(matches[2], 16)),\n                normalizeRgbComponent(parseInt(matches[3], 16)),\n                1,\n            ];\n        }\n    }\n    {\n        const matches = shortHexRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 16) * 0x11),\n                normalizeRgbComponent(parseInt(matches[2], 16) * 0x11),\n                normalizeRgbComponent(parseInt(matches[3], 16) * 0x11),\n                1,\n            ];\n        }\n    }\n    throw new Error(`Cannot parse color: ${colorString}`);\n}\nfunction rgbaToGrayscale(rgbValue) {\n    // Originally, the NTSC RGB to YUV formula\n    // perfected by @eugene-korobko's black magic\n    const redComponentGrayscaleWeight = 0.199;\n    const greenComponentGrayscaleWeight = 0.687;\n    const blueComponentGrayscaleWeight = 0.114;\n    return (redComponentGrayscaleWeight * rgbValue[0] +\n        greenComponentGrayscaleWeight * rgbValue[1] +\n        blueComponentGrayscaleWeight * rgbValue[2]);\n}\nfunction applyAlpha(color, alpha) {\n    // special case optimization\n    if (color === 'transparent') {\n        return color;\n    }\n    const originRgba = colorStringToRgba(color);\n    const originAlpha = originRgba[3];\n    return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n}\nfunction generateContrastColors(backgroundColor) {\n    const rgb = colorStringToRgba(backgroundColor);\n    return {\n        _internal_background: `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`,\n        _internal_foreground: rgbaToGrayscale(rgb) > 160 ? 'black' : 'white',\n    };\n}\nfunction gradientColorAtPercent(topColor, bottomColor, percent) {\n    const [topR, topG, topB, topA] = colorStringToRgba(topColor);\n    const [bottomR, bottomG, bottomB, bottomA] = colorStringToRgba(bottomColor);\n    const resultRgba = [\n        normalizeRgbComponent(topR + percent * (bottomR - topR)),\n        normalizeRgbComponent(topG + percent * (bottomG - topG)),\n        normalizeRgbComponent(topB + percent * (bottomB - topB)),\n        normalizeAlphaComponent(topA + percent * (bottomA - topA)),\n    ];\n    return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n}\n\nclass Delegate {\n    constructor() {\n        this._private__listeners = [];\n    }\n    _internal_subscribe(callback, linkedObject, singleshot) {\n        const listener = {\n            _internal_callback: callback,\n            _internal_linkedObject: linkedObject,\n            _internal_singleshot: singleshot === true,\n        };\n        this._private__listeners.push(listener);\n    }\n    _internal_unsubscribe(callback) {\n        const index = this._private__listeners.findIndex((listener) => callback === listener._internal_callback);\n        if (index > -1) {\n            this._private__listeners.splice(index, 1);\n        }\n    }\n    _internal_unsubscribeAll(linkedObject) {\n        this._private__listeners = this._private__listeners.filter((listener) => listener._internal_linkedObject !== linkedObject);\n    }\n    _internal_fire(param1, param2, param3) {\n        const listenersSnapshot = [...this._private__listeners];\n        this._private__listeners = this._private__listeners.filter((listener) => !listener._internal_singleshot);\n        listenersSnapshot.forEach((listener) => listener._internal_callback(param1, param2, param3));\n    }\n    _internal_hasListeners() {\n        return this._private__listeners.length > 0;\n    }\n    _internal_destroy() {\n        this._private__listeners = [];\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n    for (const src of sources) {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const i in src) {\n            if (src[i] === undefined) {\n                continue;\n            }\n            if ('object' !== typeof src[i] || dst[i] === undefined || Array.isArray(src[i])) {\n                dst[i] = src[i];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                merge(dst[i], src[i]);\n            }\n        }\n    }\n    return dst;\n}\nfunction isNumber(value) {\n    return (typeof value === 'number') && (isFinite(value));\n}\nfunction isInteger(value) {\n    return (typeof value === 'number') && ((value % 1) === 0);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction clone(object) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const o = object;\n    if (!o || 'object' !== typeof o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return o;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let c;\n    if (Array.isArray(o)) {\n        c = [];\n    }\n    else {\n        c = {};\n    }\n    let p;\n    let v;\n    // eslint-disable-next-line no-restricted-syntax\n    for (p in o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n        if (o.hasOwnProperty(p)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            v = o[p];\n            if (v && 'object' === typeof v) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = clone(v);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = v;\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return c;\n}\nfunction notNull(t) {\n    return t !== null;\n}\nfunction undefinedIfNull(t) {\n    return (t === null) ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n    if (style !== undefined) {\n        style = `${style} `;\n    }\n    else {\n        style = '';\n    }\n    if (family === undefined) {\n        family = defaultFontFamily;\n    }\n    return `${style}${size}px ${family}`;\n}\n\nclass PriceAxisRendererOptionsProvider {\n    constructor(chartModel) {\n        this._private__rendererOptions = {\n            _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n            _internal_tickLength: 5 /* RendererConstants.TickLength */,\n            _internal_fontSize: NaN,\n            _internal_font: '',\n            _internal_fontFamily: '',\n            _internal_color: '',\n            _internal_paneBackgroundColor: '',\n            _internal_paddingBottom: 0,\n            _internal_paddingInner: 0,\n            _internal_paddingOuter: 0,\n            _internal_paddingTop: 0,\n            _internal_baselineOffset: 0,\n        };\n        this._private__chartModel = chartModel;\n    }\n    _internal_options() {\n        const rendererOptions = this._private__rendererOptions;\n        const currentFontSize = this._private__fontSize();\n        const currentFontFamily = this._private__fontFamily();\n        if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n            rendererOptions._internal_fontSize = currentFontSize;\n            rendererOptions._internal_fontFamily = currentFontFamily;\n            rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n            rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n            rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n            rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_baselineOffset = 0;\n        }\n        rendererOptions._internal_color = this._private__textColor();\n        rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n        return this._private__rendererOptions;\n    }\n    _private__textColor() {\n        return this._private__chartModel._internal_options().layout.textColor;\n    }\n    _private__paneBackgroundColor() {\n        return this._private__chartModel._internal_backgroundTopColor();\n    }\n    _private__fontSize() {\n        return this._private__chartModel._internal_options().layout.fontSize;\n    }\n    _private__fontFamily() {\n        return this._private__chartModel._internal_options().layout.fontFamily;\n    }\n}\n\nclass CompositeRenderer {\n    constructor() {\n        this._private__renderers = [];\n    }\n    _internal_setRenderers(renderers) {\n        this._private__renderers = renderers;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__renderers.forEach((r) => {\n            r._internal_draw(target, isHovered, hitTestData);\n        });\n    }\n}\n\nclass MediaCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useMediaCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        target.useMediaCoordinateSpace((scope) => this._internal__drawBackgroundImpl(scope, isHovered, hitTestData));\n    }\n    _internal__drawBackgroundImpl(renderingScope, isHovered, hitTestData) { }\n}\n\nclass PaneRendererMarks extends MediaCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl({ context: ctx }) {\n        if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n            return;\n        }\n        const visibleRange = this._internal__data._internal_visibleRange;\n        const data = this._internal__data;\n        const draw = (radius) => {\n            ctx.beginPath();\n            for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n                const point = data._internal_items[i];\n                ctx.moveTo(point._internal_x, point._internal_y);\n                ctx.arc(point._internal_x, point._internal_y, radius, 0, Math.PI * 2);\n            }\n            ctx.fill();\n        };\n        if (data._internal_lineWidth > 0) {\n            ctx.fillStyle = data._internal_backColor;\n            draw(data._internal_radius + data._internal_lineWidth);\n        }\n        ctx.fillStyle = data._internal_lineColor;\n        draw(data._internal_radius);\n    }\n}\n\nfunction createEmptyMarkerData() {\n    return {\n        _internal_items: [{\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_time: 0,\n                _internal_price: 0,\n            }],\n        _internal_lineColor: '',\n        _internal_backColor: '',\n        _internal_radius: 0,\n        _internal_lineWidth: 0,\n        _internal_visibleRange: null,\n    };\n}\nconst rangeForSinglePoint = { from: 0, to: 1 };\nclass CrosshairMarksPaneView {\n    constructor(chartModel, crosshair) {\n        this._private__compositeRenderer = new CompositeRenderer();\n        this._private__markersRenderers = [];\n        this._private__markersData = [];\n        this._private__invalidated = true;\n        this._private__chartModel = chartModel;\n        this._private__crosshair = crosshair;\n        this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n    _internal_update(updateType) {\n        const serieses = this._private__chartModel._internal_serieses();\n        if (serieses.length !== this._private__markersRenderers.length) {\n            this._private__markersData = serieses.map(createEmptyMarkerData);\n            this._private__markersRenderers = this._private__markersData.map((data) => {\n                const res = new PaneRendererMarks();\n                res._internal_setData(data);\n                return res;\n            });\n            this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n        }\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__compositeRenderer;\n    }\n    _private__updateImpl() {\n        const forceHidden = this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */;\n        const serieses = this._private__chartModel._internal_serieses();\n        const timePointIndex = this._private__crosshair._internal_appliedIndex();\n        const timeScale = this._private__chartModel._internal_timeScale();\n        serieses.forEach((s, index) => {\n            var _a;\n            const data = this._private__markersData[index];\n            const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n            if (forceHidden || seriesData === null || !s._internal_visible()) {\n                data._internal_visibleRange = null;\n                return;\n            }\n            const firstValue = ensureNotNull(s._internal_firstValue());\n            data._internal_lineColor = seriesData._internal_backgroundColor;\n            data._internal_radius = seriesData._internal_radius;\n            data._internal_lineWidth = seriesData._internal_borderWidth;\n            data._internal_items[0]._internal_price = seriesData._internal_price;\n            data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n            data._internal_backColor = (_a = seriesData._internal_borderColor) !== null && _a !== void 0 ? _a : this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n            data._internal_items[0]._internal_time = timePointIndex;\n            data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n            data._internal_visibleRange = rangeForSinglePoint;\n        });\n    }\n}\n\nclass BitmapCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useBitmapCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n}\n\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n        const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n        if (!vertLinesVisible && !horzLinesVisible) {\n            return;\n        }\n        const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        ctx.lineCap = 'butt';\n        if (vertLinesVisible && x >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n            drawVerticalLine(ctx, x, 0, bitmapSize.height);\n        }\n        if (horzLinesVisible && y >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n            drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n        }\n    }\n}\n\nclass CrosshairPaneView {\n    constructor(source) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_vertLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_horzLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_x: 0,\n            _internal_y: 0,\n        };\n        this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n        this._private__source = source;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const visible = this._private__source._internal_visible();\n        const pane = ensureNotNull(this._private__source._internal_pane());\n        const crosshairOptions = pane._internal_model()._internal_options().crosshair;\n        const data = this._private__rendererData;\n        if (crosshairOptions.mode === 2 /* CrosshairMode.Hidden */) {\n            data._internal_horzLine._internal_visible = false;\n            data._internal_vertLine._internal_visible = false;\n            return;\n        }\n        data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(pane);\n        data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n        data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n        data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n        data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n        data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n        data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n        data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n        data._internal_x = this._private__source._internal_appliedX();\n        data._internal_y = this._private__source._internal_appliedY();\n    }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n    // horizontal (top and bottom) edges\n    ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n    ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n    // vertical (left and right) edges\n    ctx.fillRect(x, y, borderWidth, height);\n    ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    ctx.fillStyle = clearColor;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n    return borderRadius.map((x) => x === 0 ? x : x + offset);\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n    /**\n     * As of May 2023, all of the major browsers now support ctx.roundRect() so we should\n     * be able to switch to the native version soon.\n     */\n    ctx.beginPath();\n    ctx.lineTo(x + w - radii[1], y);\n    if (radii[1] !== 0) {\n        ctx.arcTo(x + w, y, x + w, y + radii[1], radii[1]);\n    }\n    ctx.lineTo(x + w, y + h - radii[2]);\n    if (radii[2] !== 0) {\n        ctx.arcTo(x + w, y + h, x + w - radii[2], y + h, radii[2]);\n    }\n    ctx.lineTo(x + radii[3], y + h);\n    if (radii[3] !== 0) {\n        ctx.arcTo(x, y + h, x, y + h - radii[3], radii[3]);\n    }\n    ctx.lineTo(x, y + radii[0]);\n    if (radii[0] !== 0) {\n        ctx.arcTo(x, y, x + radii[0], y, radii[0]);\n    }\n}\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithInnerBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, borderRadius = [0, 0, 0, 0], borderColor = '') {\n    ctx.save();\n    if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n        drawRoundRect(ctx, left, top, width, height, borderRadius);\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n        return;\n    }\n    const halfBorderWidth = borderWidth / 2;\n    // Draw body\n    if (backgroundColor !== 'transparent') {\n        const innerRadii = changeBorderRadius(borderRadius, -borderWidth);\n        drawRoundRect(ctx, left + borderWidth, top + borderWidth, width - borderWidth * 2, height - borderWidth * 2, innerRadii);\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n    }\n    // Draw border\n    if (borderColor !== 'transparent') {\n        const outerRadii = changeBorderRadius(borderRadius, -halfBorderWidth);\n        drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, outerRadii);\n        ctx.lineWidth = borderWidth;\n        ctx.strokeStyle = borderColor;\n        ctx.closePath();\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    const gradient = ctx.createLinearGradient(0, 0, 0, h);\n    gradient.addColorStop(0, topColor);\n    gradient.addColorStop(1, bottomColor);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\n\nclass PriceAxisViewRenderer {\n    constructor(data, commonData) {\n        this._internal_setData(data, commonData);\n    }\n    _internal_setData(data, commonData) {\n        this._private__data = data;\n        this._private__commonData = commonData;\n    }\n    _internal_height(rendererOptions, useSecondLine) {\n        if (!this._private__data._internal_visible) {\n            return 0;\n        }\n        return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n    }\n    _internal_draw(target, rendererOptions, textWidthCache, align) {\n        if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textColor = this._private__data._internal_color;\n        const backgroundColor = this._private__commonData._internal_background;\n        const geometry = target.useBitmapCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            ctx.font = rendererOptions._internal_font;\n            const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n            const gb = geom._internal_bitmap;\n            const drawLabelBody = (labelBackgroundColor, labelBorderColor) => {\n                if (geom._internal_alignRight) {\n                    drawRoundRectWithInnerBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], labelBorderColor);\n                }\n                else {\n                    drawRoundRectWithInnerBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], labelBorderColor);\n                }\n            };\n            // draw border\n            // draw label background\n            drawLabelBody(backgroundColor, 'transparent');\n            // draw tick\n            if (this._private__data._internal_tickVisible) {\n                ctx.fillStyle = textColor;\n                ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n            }\n            // draw label border above the tick\n            drawLabelBody('transparent', backgroundColor);\n            // draw separator\n            if (this._private__data._internal_borderVisible) {\n                ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n                ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n            }\n            return geom;\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const gm = geometry._internal_media;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = textColor;\n            ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n        });\n    }\n    _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n        var _a;\n        const { context: ctx, bitmapSize, mediaSize, horizontalPixelRatio, verticalPixelRatio } = scope;\n        const tickSize = (this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick) ? rendererOptions._internal_tickLength : 0;\n        const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n        const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n        const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n        const paddingInner = rendererOptions._internal_paddingInner;\n        const paddingOuter = rendererOptions._internal_paddingOuter;\n        const text = this._private__data._internal_text;\n        const actualTextHeight = rendererOptions._internal_fontSize;\n        const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n        const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n        const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n        const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n        const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n        let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n        if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n            totalHeightBitmap += 1;\n        }\n        const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n        const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n        // tick overlaps scale border\n        const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n        const yMid = (_a = this._private__commonData._internal_fixedCoordinate) !== null && _a !== void 0 ? _a : this._private__commonData._internal_coordinate;\n        const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n        const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n        const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n        const alignRight = align === 'right';\n        const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n        const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n        let xOutsideBitmap;\n        let xTickBitmap;\n        let xText;\n        if (alignRight) {\n            // 2               1\n            //\n            //              6  5\n            //\n            // 3               4\n            xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n            xTickBitmap = xInsideBitmap - tickSizeBitmap;\n            xText = xInside - tickSize - paddingInner - horzBorder;\n        }\n        else {\n            // 1               2\n            //\n            // 6  5\n            //\n            // 4               3\n            xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n            xTickBitmap = xInsideBitmap + tickSizeBitmap;\n            xText = xInside + tickSize + paddingInner;\n        }\n        return {\n            _internal_alignRight: alignRight,\n            _internal_bitmap: {\n                _internal_yTop: yTopBitmap,\n                _internal_yMid: yMidBitmap,\n                _internal_yBottom: yBottomBitmap,\n                _internal_totalWidth: totalWidthBitmap,\n                _internal_totalHeight: totalHeightBitmap,\n                // TODO: it is better to have different horizontal and vertical radii\n                _internal_radius: 2 * horizontalPixelRatio,\n                _internal_horzBorder: horzBorderBitmap,\n                _internal_xOutside: xOutsideBitmap,\n                _internal_xInside: xInsideBitmap,\n                _internal_xTick: xTickBitmap,\n                _internal_tickHeight: tickHeightBitmap,\n                _internal_right: bitmapSize.width,\n            },\n            _internal_media: {\n                _internal_yTop: yTopBitmap / verticalPixelRatio,\n                _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n                _internal_xText: xText,\n                _internal_textMidCorrection: textMidCorrection,\n            },\n        };\n    }\n}\n\nclass PriceAxisView {\n    constructor(ctor) {\n        this._private__commonRendererData = {\n            _internal_coordinate: 0,\n            _internal_background: '#000',\n            _internal_additionalPaddingBottom: 0,\n            _internal_additionalPaddingTop: 0,\n        };\n        this._private__axisRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: true,\n            _internal_moveTextToInvisibleTick: false,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: false,\n            _internal_separatorVisible: false,\n        };\n        this._private__paneRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: false,\n            _internal_moveTextToInvisibleTick: true,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: true,\n            _internal_separatorVisible: true,\n        };\n        this._private__invalidated = true;\n        this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n    }\n    _internal_text() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_text;\n    }\n    _internal_coordinate() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__commonRendererData._internal_coordinate;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_height(rendererOptions, useSecondLine = false) {\n        return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n    }\n    _internal_getFixedCoordinate() {\n        return this._private__commonRendererData._internal_fixedCoordinate || 0;\n    }\n    _internal_setFixedCoordinate(value) {\n        this._private__commonRendererData._internal_fixedCoordinate = value;\n    }\n    _internal_isVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n    }\n    _internal_isAxisLabelVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible;\n    }\n    _internal_renderer(priceScale) {\n        this._private__updateRendererDataIfNeeded();\n        // force update tickVisible state from price scale options\n        // because we don't have and we can't have price axis in other methods\n        // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n        this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__axisRenderer;\n    }\n    _internal_paneRenderer() {\n        this._private__updateRendererDataIfNeeded();\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__paneRenderer;\n    }\n    _private__updateRendererDataIfNeeded() {\n        if (this._private__invalidated) {\n            this._private__axisRendererData._internal_tickVisible = true;\n            this._private__paneRendererData._internal_tickVisible = false;\n            this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n        }\n    }\n}\n\nclass CrosshairPriceAxisView extends PriceAxisView {\n    constructor(source, priceScale, valueProvider) {\n        super();\n        this._private__source = source;\n        this._private__priceScale = priceScale;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        if (this._private__source._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__source._internal_options().horzLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || (firstValue === null)) {\n            return;\n        }\n        const colors = generateContrastColors(options.labelBackgroundColor);\n        commonRendererData._internal_background = colors._internal_background;\n        axisRendererData._internal_color = colors._internal_foreground;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        const value = this._private__valueProvider(this._private__priceScale);\n        commonRendererData._internal_coordinate = value._internal_coordinate;\n        axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n        axisRendererData._internal_visible = true;\n    }\n}\n\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n    constructor() {\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_draw(target, rendererOptions) {\n        if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textWidth = target.useMediaCoordinateSpace(({ context: ctx }) => {\n            ctx.font = rendererOptions._internal_font;\n            return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n        });\n        if (textWidth <= 0) {\n            return;\n        }\n        const horzMargin = rendererOptions._internal_paddingHorizontal;\n        const labelWidth = textWidth + 2 * horzMargin;\n        const labelWidthHalf = labelWidth / 2;\n        const timeScaleWidth = this._private__data._internal_width;\n        let coordinate = this._private__data._internal_coordinate;\n        let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (x1 < 0) {\n            coordinate = coordinate + Math.abs(0 - x1);\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        else if (x1 + labelWidth > timeScaleWidth) {\n            coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        const x2 = x1 + labelWidth;\n        const y1 = 0;\n        const y2 = Math.ceil(y1 +\n            rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingBottom);\n        target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n            const data = ensureNotNull(this._private__data);\n            ctx.fillStyle = data._internal_background;\n            const x1scaled = Math.round(x1 * horizontalPixelRatio);\n            const y1scaled = Math.round(y1 * verticalPixelRatio);\n            const x2scaled = Math.round(x2 * horizontalPixelRatio);\n            const y2scaled = Math.round(y2 * verticalPixelRatio);\n            const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n            ctx.beginPath();\n            ctx.moveTo(x1scaled, y1scaled);\n            ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n            ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n            ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n            ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n            ctx.lineTo(x2scaled, y1scaled);\n            ctx.fill();\n            if (data._internal_tickVisible) {\n                const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n                const tickTop = y1scaled;\n                const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n                ctx.fillStyle = data._internal_color;\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n            }\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const data = ensureNotNull(this._private__data);\n            const yText = y1 +\n                rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = data._internal_color;\n            const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n            ctx.translate(x1 + horzMargin, yText + textYCorrection);\n            ctx.fillText(data._internal_text, 0, 0);\n        });\n    }\n}\n\nclass CrosshairTimeAxisView {\n    constructor(crosshair, model, valueProvider) {\n        this._private__invalidated = true;\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_background: '#4c525e',\n            _internal_color: 'white',\n            _internal_text: '',\n            _internal_width: 0,\n            _internal_coordinate: NaN,\n            _internal_tickVisible: true,\n        };\n        this._private__crosshair = crosshair;\n        this._private__model = model;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        this._private__renderer._internal_setData(this._private__rendererData);\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const data = this._private__rendererData;\n        data._internal_visible = false;\n        if (this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__crosshair._internal_options().vertLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        data._internal_width = timeScale._internal_width();\n        const value = this._private__valueProvider();\n        if (value === null) {\n            return;\n        }\n        data._internal_coordinate = value._internal_coordinate;\n        const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n        data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n        data._internal_visible = true;\n        const colors = generateContrastColors(options.labelBackgroundColor);\n        data._internal_background = colors._internal_background;\n        data._internal_color = colors._internal_foreground;\n        data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n    }\n}\n\nclass DataSource {\n    constructor() {\n        this._internal__priceScale = null;\n        this._private__zorder = 0;\n    }\n    _internal_zorder() {\n        return this._private__zorder;\n    }\n    _internal_setZorder(zorder) {\n        this._private__zorder = zorder;\n    }\n    _internal_priceScale() {\n        return this._internal__priceScale;\n    }\n    _internal_setPriceScale(priceScale) {\n        this._internal__priceScale = priceScale;\n    }\n    _internal_labelPaneViews(pane) {\n        return [];\n    }\n    _internal_timeAxisViews() {\n        return [];\n    }\n    _internal_visible() {\n        return true;\n    }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n    /**\n     * This mode allows crosshair to move freely on the chart.\n     */\n    CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n     */\n    CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n    /**\n     * This mode disables rendering of the crosshair.\n     */\n    CrosshairMode[CrosshairMode[\"Hidden\"] = 2] = \"Hidden\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__pane = null;\n        this._private__price = NaN;\n        this._private__index = 0;\n        this._private__visible = true;\n        this._private__priceAxisViews = new Map();\n        this._private__subscribed = false;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n        this._private__model = model;\n        this._private__options = options;\n        this._private__markersPaneView = new CrosshairMarksPaneView(model, this);\n        const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n            return (priceScale) => {\n                const coordinate = rawCoordinateProvider();\n                const rawPrice = rawPriceProvider();\n                if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n                    // price must be defined\n                    return { _internal_price: rawPrice, _internal_coordinate: coordinate };\n                }\n                else {\n                    // always convert from coordinate\n                    const firstValue = ensureNotNull(priceScale._internal_firstValue());\n                    const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n                    return { _internal_price: price, _internal_coordinate: coordinate };\n                }\n            };\n        };\n        const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n            return () => {\n                const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n                const coordinate = rawCoordinateProvider();\n                if (!time || !Number.isFinite(coordinate)) {\n                    return null;\n                }\n                return {\n                    _internal_time: time,\n                    _internal_coordinate: coordinate,\n                };\n            };\n        };\n        // for current position always return both price and coordinate\n        this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n        const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n        this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n        this._private__paneView = new CrosshairPaneView(this);\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_saveOriginCoord(x, y) {\n        this._private__originX = x;\n        this._private__originY = y;\n    }\n    _internal_clearOriginCoord() {\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n    }\n    _internal_originCoordX() {\n        return this._private__originX;\n    }\n    _internal_originCoordY() {\n        return this._private__originY;\n    }\n    _internal_setPosition(index, price, pane) {\n        if (!this._private__subscribed) {\n            this._private__subscribed = true;\n        }\n        this._private__visible = true;\n        this._private__tryToUpdateViews(index, price, pane);\n    }\n    _internal_appliedIndex() {\n        return this._private__index;\n    }\n    _internal_appliedX() {\n        return this._private__x;\n    }\n    _internal_appliedY() {\n        return this._private__y;\n    }\n    _internal_visible() {\n        return this._private__visible;\n    }\n    _internal_clearPosition() {\n        this._private__visible = false;\n        this._private__setIndexToLastSeriesBarIndex();\n        this._private__price = NaN;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__pane = null;\n        this._internal_clearOriginCoord();\n    }\n    _internal_paneViews(pane) {\n        return this._private__pane !== null ? [this._private__paneView, this._private__markersPaneView] : [];\n    }\n    _internal_horzLineVisible(pane) {\n        return pane === this._private__pane && this._private__options.horzLine.visible;\n    }\n    _internal_vertLineVisible() {\n        return this._private__options.vertLine.visible;\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (!this._private__visible || this._private__pane !== pane) {\n            this._private__priceAxisViews.clear();\n        }\n        const views = [];\n        if (this._private__pane === pane) {\n            views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n        }\n        return views;\n    }\n    _internal_timeAxisViews() {\n        return this._private__visible ? [this._private__timeAxisView] : [];\n    }\n    _internal_pane() {\n        return this._private__pane;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n        this._private__priceAxisViews.forEach((value) => value._internal_update());\n        this._private__timeAxisView._internal_update();\n        this._private__markersPaneView._internal_update();\n    }\n    _private__priceScaleByPane(pane) {\n        if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n            return pane._internal_defaultPriceScale();\n        }\n        return null;\n    }\n    _private__tryToUpdateViews(index, price, pane) {\n        if (this._private__tryToUpdateData(index, price, pane)) {\n            this._internal_updateAllViews();\n        }\n    }\n    _private__tryToUpdateData(newIndex, newPrice, newPane) {\n        const oldX = this._private__x;\n        const oldY = this._private__y;\n        const oldPrice = this._private__price;\n        const oldIndex = this._private__index;\n        const oldPane = this._private__pane;\n        const priceScale = this._private__priceScaleByPane(newPane);\n        this._private__index = newIndex;\n        this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n        this._private__pane = newPane;\n        const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n        if (priceScale !== null && firstValue !== null) {\n            this._private__price = newPrice;\n            this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n        }\n        else {\n            this._private__price = NaN;\n            this._private__y = NaN;\n        }\n        return (oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index ||\n            oldPrice !== this._private__price || oldPane !== this._private__pane);\n    }\n    _private__setIndexToLastSeriesBarIndex() {\n        const lastIndexes = this._private__model._internal_serieses()\n            .map((s) => s._internal_bars()._internal_lastIndex())\n            .filter(notNull);\n        const lastBarIndex = (lastIndexes.length === 0) ? null : Math.max(...lastIndexes);\n        this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n    }\n    _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n        let view = map.get(priceScale);\n        if (view === undefined) {\n            view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n            map.set(priceScale, view);\n        }\n        return view;\n    }\n}\n\nfunction isDefaultPriceScale(priceScaleId) {\n    return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\n\nfunction mergePaneInvalidation(beforeValue, newValue) {\n    if (beforeValue === undefined) {\n        return newValue;\n    }\n    const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n    const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n    return { _internal_level: level, _internal_autoScale: autoScale };\n}\nclass InvalidateMask {\n    constructor(globalLevel) {\n        this._private__invalidatedPanes = new Map();\n        this._private__timeScaleInvalidations = [];\n        this._private__globalLevel = globalLevel;\n    }\n    _internal_invalidatePane(paneIndex, invalidation) {\n        const prevValue = this._private__invalidatedPanes.get(paneIndex);\n        const newValue = mergePaneInvalidation(prevValue, invalidation);\n        this._private__invalidatedPanes.set(paneIndex, newValue);\n    }\n    _internal_fullInvalidation() {\n        return this._private__globalLevel;\n    }\n    _internal_invalidateForPane(paneIndex) {\n        const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n        if (paneInvalidation === undefined) {\n            return {\n                _internal_level: this._private__globalLevel,\n            };\n        }\n        return {\n            _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n            _internal_autoScale: paneInvalidation._internal_autoScale,\n        };\n    }\n    _internal_setFitContent() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 0 /* TimeScaleInvalidationType.FitContent */ }];\n    }\n    _internal_applyRange(range) {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */, _internal_value: range }];\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 5 /* TimeScaleInvalidationType.Animation */, _internal_value: animation });\n    }\n    _internal_stopTimeScaleAnimation() {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */ });\n    }\n    _internal_resetTimeScale() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 4 /* TimeScaleInvalidationType.Reset */ }];\n    }\n    _internal_setBarSpacing(barSpacing) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */, _internal_value: barSpacing });\n    }\n    _internal_setRightOffset(offset) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */, _internal_value: offset });\n    }\n    _internal_timeScaleInvalidations() {\n        return this._private__timeScaleInvalidations;\n    }\n    _internal_merge(other) {\n        for (const tsInvalidation of other._private__timeScaleInvalidations) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation);\n        }\n        this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n        other._private__invalidatedPanes.forEach((invalidation, index) => {\n            this._internal_invalidatePane(index, invalidation);\n        });\n    }\n    static _internal_light() {\n        return new InvalidateMask(2 /* InvalidationLevel.Light */);\n    }\n    static _internal_full() {\n        return new InvalidateMask(3 /* InvalidationLevel.Full */);\n    }\n    _private__applyTimeScaleInvalidation(invalidation) {\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                this._internal_setFitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                this._internal_applyRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                this._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                this._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                this._internal_resetTimeScale();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                this._internal_setTimeScaleAnimation(invalidation._internal_value);\n                break;\n            case 6 /* TimeScaleInvalidationType.StopAnimation */:\n                this._private__removeTimeScaleAnimation();\n        }\n    }\n    _private__removeTimeScaleAnimation() {\n        const index = this._private__timeScaleInvalidations.findIndex((inv) => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n        if (index !== -1) {\n            this._private__timeScaleInvalidations.splice(index, 1);\n        }\n    }\n}\n\nconst formatterOptions = {\n    _internal_decimalSign: '.',\n    _internal_decimalSignFractional: '\\'',\n};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n    if (!isNumber(value)) {\n        return 'n/a';\n    }\n    if (!isInteger(length)) {\n        throw new TypeError('invalid length');\n    }\n    if (length < 0 || length > 16) {\n        throw new TypeError('invalid length');\n    }\n    if (length === 0) {\n        return value.toString();\n    }\n    const dummyString = '0000000000000000';\n    return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter {\n    constructor(priceScale, minMove) {\n        if (!minMove) {\n            minMove = 1;\n        }\n        if (!isNumber(priceScale) || !isInteger(priceScale)) {\n            priceScale = 100;\n        }\n        if (priceScale < 0) {\n            throw new TypeError('invalid base');\n        }\n        this._private__priceScale = priceScale;\n        this._private__minMove = minMove;\n        this._private__calculateDecimal();\n    }\n    format(price) {\n        // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n        // we should use it because it has the same width as plus sign +\n        const sign = price < 0 ? '\\u2212' : '';\n        price = Math.abs(price);\n        return sign + this._private__formatAsDecimal(price);\n    }\n    _private__calculateDecimal() {\n        // check if this._base is power of 10\n        // for double fractional _fractionalLength if for the main fractional only\n        this._internal__fractionalLength = 0;\n        if (this._private__priceScale > 0 && this._private__minMove > 0) {\n            let base = this._private__priceScale;\n            while (base > 1) {\n                base /= 10;\n                this._internal__fractionalLength++;\n            }\n        }\n    }\n    _private__formatAsDecimal(price) {\n        const base = this._private__priceScale / this._private__minMove;\n        let intPart = Math.floor(price);\n        let fracString = '';\n        const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n        if (base > 1) {\n            let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n            if (fracPart >= base) {\n                fracPart -= base;\n                intPart += 1;\n            }\n            fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n        }\n        else {\n            // should round int part to min move\n            intPart = Math.round(intPart * base) / base;\n            // if min move > 1, fractional part is always = 0\n            if (fracLength > 0) {\n                fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n            }\n        }\n        return intPart.toFixed(0) + fracString;\n    }\n}\n\nclass PercentageFormatter extends PriceFormatter {\n    constructor(priceScale = 100) {\n        super(priceScale);\n    }\n    format(price) {\n        return `${super.format(price)}%`;\n    }\n}\n\nclass VolumeFormatter {\n    constructor(precision) {\n        this._private__precision = precision;\n    }\n    format(vol) {\n        let sign = '';\n        if (vol < 0) {\n            sign = '-';\n            vol = -vol;\n        }\n        if (vol < 995) {\n            return sign + this._private__formatNumber(vol);\n        }\n        else if (vol < 999995) {\n            return sign + this._private__formatNumber(vol / 1000) + 'K';\n        }\n        else if (vol < 999999995) {\n            vol = 1000 * Math.round(vol / 1000);\n            return sign + this._private__formatNumber(vol / 1000000) + 'M';\n        }\n        else {\n            vol = 1000000 * Math.round(vol / 1000000);\n            return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n        }\n    }\n    _private__formatNumber(value) {\n        let res;\n        const priceScale = Math.pow(10, this._private__precision);\n        value = Math.round(value * priceScale) / priceScale;\n        if (value >= 1e-15 && value < 1) {\n            res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n        }\n        else {\n            res = String(value);\n        }\n        return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n    }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n    if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n        return;\n    }\n    const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n    const firstItem = items[visibleRange.from];\n    let currentStyle = styleGetter(renderingScope, firstItem);\n    let currentStyleFirstItem = firstItem;\n    if (visibleRange.to - visibleRange.from < 2) {\n        const halfBarWidth = barWidth / 2;\n        ctx.beginPath();\n        const item1 = { _internal_x: firstItem._internal_x - halfBarWidth, _internal_y: firstItem._internal_y };\n        const item2 = { _internal_x: firstItem._internal_x + halfBarWidth, _internal_y: firstItem._internal_y };\n        ctx.moveTo(item1._internal_x * horizontalPixelRatio, item1._internal_y * verticalPixelRatio);\n        ctx.lineTo(item2._internal_x * horizontalPixelRatio, item2._internal_y * verticalPixelRatio);\n        finishStyledArea(renderingScope, currentStyle, item1, item2);\n    }\n    else {\n        const changeStyle = (newStyle, currentItem) => {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n            ctx.beginPath();\n            currentStyle = newStyle;\n            currentStyleFirstItem = currentItem;\n        };\n        let currentItem = currentStyleFirstItem;\n        ctx.beginPath();\n        ctx.moveTo(firstItem._internal_x * horizontalPixelRatio, firstItem._internal_y * verticalPixelRatio);\n        for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n            currentItem = items[i];\n            const itemStyle = styleGetter(renderingScope, currentItem);\n            switch (lineType) {\n                case 0 /* LineType.Simple */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 1 /* LineType.WithSteps */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    if (itemStyle !== currentStyle) {\n                        changeStyle(itemStyle, currentItem);\n                        ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    }\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 2 /* LineType.Curved */: {\n                    const [cp1, cp2] = getControlPoints(items, i - 1, i);\n                    ctx.bezierCurveTo(cp1._internal_x * horizontalPixelRatio, cp1._internal_y * verticalPixelRatio, cp2._internal_x * horizontalPixelRatio, cp2._internal_y * verticalPixelRatio, currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                }\n            }\n            if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n                changeStyle(itemStyle, currentItem);\n                ctx.moveTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n            }\n        }\n        if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n        }\n    }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n    return { _internal_x: p1._internal_x - p2._internal_x, _internal_y: p1._internal_y - p2._internal_y };\n}\nfunction add(p1, p2) {\n    return { _internal_x: p1._internal_x + p2._internal_x, _internal_y: p1._internal_y + p2._internal_y };\n}\nfunction divide(p1, n) {\n    return { _internal_x: p1._internal_x / n, _internal_y: p1._internal_y / n };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n    const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n    const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n    const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n    const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n    return [cp1, cp2];\n}\n\nfunction finishStyledArea$1(baseLevelCoordinate, scope, style, areaFirstItem, newAreaFirstItem) {\n    const { context, horizontalPixelRatio, verticalPixelRatio } = scope;\n    context.lineTo(newAreaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.lineTo(areaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.closePath();\n    context.fillStyle = style;\n    context.fill();\n}\nclass PaneRendererAreaBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        var _a;\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_lineType: lineType } = this._internal__data;\n        const baseLevelCoordinate = (_a = this._internal__data._internal_baseLevelCoordinate) !== null && _a !== void 0 ? _a : (this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height);\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineJoin = 'round';\n        ctx.lineWidth = lineWidth;\n        setLineStyle(ctx, lineStyle);\n        // walk lines with width=1 to have more accurate gradient's filling\n        ctx.lineWidth = 1;\n        walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea$1.bind(null, baseLevelCoordinate));\n    }\n}\n\nfunction clamp(value, minVal, maxVal) {\n    return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n    if (value < 0) {\n        return false;\n    }\n    for (let current = value; current > 1; current /= 10) {\n        if ((current % 10) !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n    return (x2 - x1) <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n    return Math.abs(x1 - x2) < epsilon;\n}\n// We can't use Math.min(...arr) because that would only support arrays shorter than 65536 items.\nfunction min(arr) {\n    if (arr.length < 1) {\n        throw Error('array is empty');\n    }\n    let minVal = arr[0];\n    for (let i = 1; i < arr.length; ++i) {\n        if (arr[i] < minVal) {\n            minVal = arr[i];\n        }\n    }\n    return minVal;\n}\nfunction ceiledEven(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 !== 0) ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 === 0) ? ceiled - 1 : ceiled;\n}\n\nclass GradientStyleCache {\n    _internal_get(scope, params) {\n        const cachedParams = this._private__params;\n        const { _internal_topColor1: topColor1, _internal_topColor2: topColor2, _internal_bottomColor1: bottomColor1, _internal_bottomColor2: bottomColor2, _internal_bottom: bottom, _internal_baseLevelCoordinate: baseLevelCoordinate } = params;\n        if (this._private__cachedValue === undefined ||\n            cachedParams === undefined ||\n            cachedParams._internal_topColor1 !== topColor1 ||\n            cachedParams._internal_topColor2 !== topColor2 ||\n            cachedParams._internal_bottomColor1 !== bottomColor1 ||\n            cachedParams._internal_bottomColor2 !== bottomColor2 ||\n            cachedParams._internal_baseLevelCoordinate !== baseLevelCoordinate ||\n            cachedParams._internal_bottom !== bottom) {\n            const gradient = scope.context.createLinearGradient(0, 0, 0, bottom);\n            gradient.addColorStop(0, topColor1);\n            if (baseLevelCoordinate != null) {\n                const baselinePercent = clamp(baseLevelCoordinate * scope.verticalPixelRatio / bottom, 0, 1);\n                gradient.addColorStop(baselinePercent, topColor2);\n                gradient.addColorStop(baselinePercent, bottomColor1);\n            }\n            gradient.addColorStop(1, bottomColor2);\n            this._private__cachedValue = gradient;\n            this._private__params = params;\n        }\n        return this._private__cachedValue;\n    }\n}\n\nclass PaneRendererArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topColor,\n            _internal_topColor2: '',\n            _internal_bottomColor1: '',\n            _internal_bottomColor2: item._internal_bottomColor,\n            _internal_bottom: renderingScope.bitmapSize.height,\n        });\n    }\n}\n\nfunction drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter) {\n    const { horizontalPixelRatio, verticalPixelRatio, context } = renderingScope;\n    let prevStyle = null;\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = (tickWidth % 2) / 2;\n    const radius = pointMarkersRadius * verticalPixelRatio + correction;\n    for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n        const point = items[i];\n        if (point) {\n            const style = styleGetter(renderingScope, point);\n            if (style !== prevStyle) {\n                context.beginPath();\n                if (prevStyle !== null) {\n                    context.fill();\n                }\n                context.fillStyle = style;\n                prevStyle = style;\n            }\n            const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n            const centerY = point._internal_y * verticalPixelRatio;\n            context.moveTo(centerX, centerY);\n            context.arc(centerX, centerY, radius, 0, Math.PI * 2);\n        }\n    }\n    context.fill();\n}\n\nfunction finishStyledArea(scope, style) {\n    const ctx = scope.context;\n    ctx.strokeStyle = style;\n    ctx.stroke();\n}\nclass PaneRendererLineBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineType: lineType, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_pointMarkersRadius: pointMarkersRadius } = this._internal__data;\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineWidth = lineWidth * renderingScope.verticalPixelRatio;\n        setLineStyle(ctx, lineStyle);\n        ctx.lineJoin = 'round';\n        const styleGetter = this._internal__strokeStyle.bind(this);\n        if (lineType !== undefined) {\n            walkLine(renderingScope, items, lineType, visibleRange, barWidth, styleGetter, finishStyledArea);\n        }\n        if (pointMarkersRadius) {\n            drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, styleGetter);\n        }\n    }\n}\n\nclass PaneRendererLine extends PaneRendererLineBase {\n    _internal__strokeStyle(renderingScope, item) {\n        return item._internal_lineColor;\n    }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction boundCompare(lower, arr, value, compare, start = 0, to = arr.length) {\n    let count = to - start;\n    while (0 < count) {\n        const count2 = (count >> 1);\n        const mid = start + count2;\n        if (compare(arr[mid], value) === lower) {\n            start = mid + 1;\n            count -= count2 + 1;\n        }\n        else {\n            count = count2;\n        }\n    }\n    return start;\n}\nconst lowerBound = boundCompare.bind(null, true);\nconst upperBound = boundCompare.bind(null, false);\n\nfunction lowerBoundItemsCompare(item, time) {\n    return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(item, time) {\n    return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n    const firstBar = range._internal_left();\n    const lastBar = range._internal_right();\n    const from = lowerBound(items, firstBar, lowerBoundItemsCompare);\n    const to = upperBound(items, lastBar, upperBoundItemsCompare);\n    if (!extendedRange) {\n        return { from, to };\n    }\n    let extendedFrom = from;\n    let extendedTo = to;\n    if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n        extendedFrom = from - 1;\n    }\n    if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n        extendedTo = to + 1;\n    }\n    return { from: extendedFrom, to: extendedTo };\n}\n\nclass SeriesPaneViewBase {\n    constructor(series, model, extendedVisibleRange) {\n        this._internal__invalidated = true;\n        this._internal__dataInvalidated = true;\n        this._internal__optionsInvalidated = true;\n        this._internal__items = [];\n        this._internal__itemsVisibleRange = null;\n        this._internal__series = series;\n        this._internal__model = model;\n        this._private__extendedVisibleRange = extendedVisibleRange;\n    }\n    _internal_update(updateType) {\n        this._internal__invalidated = true;\n        if (updateType === 'data') {\n            this._internal__dataInvalidated = true;\n        }\n        if (updateType === 'options') {\n            this._internal__optionsInvalidated = true;\n        }\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        this._private__makeValid();\n        return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n    }\n    _internal__updateOptions() {\n        this._internal__items = this._internal__items.map((item) => (Object.assign(Object.assign({}, item), this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time))));\n    }\n    _internal__clearVisibleRange() {\n        this._internal__itemsVisibleRange = null;\n    }\n    _private__makeValid() {\n        if (this._internal__dataInvalidated) {\n            this._internal__fillRawPoints();\n            this._internal__dataInvalidated = false;\n        }\n        if (this._internal__optionsInvalidated) {\n            this._internal__updateOptions();\n            this._internal__optionsInvalidated = false;\n        }\n        if (this._internal__invalidated) {\n            this._private__makeValidImpl();\n            this._internal__invalidated = false;\n        }\n    }\n    _private__makeValidImpl() {\n        const priceScale = this._internal__series._internal_priceScale();\n        const timeScale = this._internal__model._internal_timeScale();\n        this._internal__clearVisibleRange();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return;\n        }\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        if (this._internal__series._internal_bars()._internal_size() === 0) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n        this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n        this._internal__prepareRendererData();\n    }\n}\n\nclass LinePaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, true);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createRawItemBase(time, price) {\n        return {\n            _internal_time: time,\n            _internal_price: price,\n            _internal_x: NaN,\n            _internal_y: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => {\n            const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n            return this._internal__createRawItem(row._internal_index, value, colorer);\n        });\n    }\n}\n\nclass SeriesAreaPaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__areaRenderer = new PaneRendererArea();\n        this._private__lineRenderer = new PaneRendererLine();\n        this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        this._private__areaRenderer._internal_setData({\n            _internal_lineType: options.lineType,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_baseLevelCoordinate: null,\n            _internal_invertFilledArea: options.invertFilledArea,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        });\n        this._private__lineRenderer._internal_setData({\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n        });\n    }\n}\n\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n    return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n    const barSpacingSpecialCaseFrom = 2.5;\n    const barSpacingSpecialCaseTo = 4;\n    const barSpacingSpecialCaseCoeff = 3;\n    if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n        return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n    }\n    // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n    const barSpacingReducingCoeff = 0.2;\n    const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n    const res = Math.floor(barSpacing * coeff * pixelRatio);\n    const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n    const optimal = Math.min(res, scaledBarSpacing);\n    return Math.max(Math.floor(pixelRatio), optimal);\n}\n\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__barWidth = 0;\n        this._private__barLineWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    // eslint-disable-next-line complexity\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make bars' width odd\n        // if this value is even, we have to make bars' width even\n        // in order of keeping crosshair-over-bar drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n            if ((lineWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        // if scale is compressed, bar could become less than 1 CSS pixel\n        this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n        let prevColor = null;\n        const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n            const bar = this._private__data._internal_bars[i];\n            if (prevColor !== bar._internal_barColor) {\n                ctx.fillStyle = bar._internal_barColor;\n                prevColor = bar._internal_barColor;\n            }\n            const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n            const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n            const bodyLeft = bodyCenter - bodyWidthHalf;\n            const bodyWidth = this._private__barLineWidth;\n            const bodyRight = bodyLeft + bodyWidth - 1;\n            const high = Math.min(bar._internal_highY, bar._internal_lowY);\n            const low = Math.max(bar._internal_highY, bar._internal_lowY);\n            const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n            const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n            const bodyHeight = Math.max((bodyBottom - bodyTop), this._private__barLineWidth);\n            ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n            const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n            if (drawOpenClose) {\n                if (this._private__data._internal_openVisible) {\n                    const openLeft = bodyCenter - sideWidth;\n                    let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n                    let openBottom = openTop + bodyWidth - 1;\n                    if (openBottom > bodyTop + bodyHeight - 1) {\n                        openBottom = bodyTop + bodyHeight - 1;\n                        openTop = openBottom - bodyWidth + 1;\n                    }\n                    ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n                }\n                const closeRight = bodyCenter + sideWidth;\n                let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n                let closeBottom = closeTop + bodyWidth - 1;\n                if (closeBottom > bodyTop + bodyHeight - 1) {\n                    closeBottom = bodyTop + bodyHeight - 1;\n                    closeTop = closeBottom - bodyWidth + 1;\n                }\n                ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n            }\n        }\n    }\n    _private__calcBarWidth(pixelRatio) {\n        const limit = Math.floor(pixelRatio);\n        return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n    }\n}\n\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, false);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createDefaultItem(time, bar, colorer) {\n        return {\n            _internal_time: time,\n            _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n            _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n            _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n            _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_x: NaN,\n            _internal_openY: NaN,\n            _internal_highY: NaN,\n            _internal_lowY: NaN,\n            _internal_closeY: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => this._internal__createRawItem(row._internal_index, row, colorer));\n    }\n}\n\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererBars();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const barStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_openVisible: barStyleProps.openVisible,\n            _internal_thinBars: barStyleProps.thinBars,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topFillColor1,\n            _internal_topColor2: item._internal_topFillColor2,\n            _internal_bottomColor1: item._internal_bottomFillColor1,\n            _internal_bottomColor2: item._internal_bottomFillColor2,\n            _internal_bottom: renderingScope.bitmapSize.height,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n        });\n    }\n}\n\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n    constructor() {\n        super(...arguments);\n        this._private__strokeCache = new GradientStyleCache();\n    }\n    _internal__strokeStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__strokeCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topLineColor,\n            _internal_topColor2: item._internal_topLineColor,\n            _internal_bottomColor1: item._internal_bottomLineColor,\n            _internal_bottomColor2: item._internal_bottomLineColor,\n            _internal_bottom: renderingScope.bitmapSize.height,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n        });\n    }\n}\n\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n        this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n        this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        const options = this._internal__series._internal_options();\n        const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(options.baseValue.price, firstValue._internal_value);\n        const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n        this._private__baselineAreaRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineType,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_invertFilledArea: false,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n        this._private__baselineLineRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n    }\n}\n\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        // scaled with pixelRatio\n        this._private__barWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        const { horizontalPixelRatio } = renderingScope;\n        // now we know pixelRatio and we could calculate barWidth effectively\n        this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make candlesticks' width odd\n        // if this value is even, we have to make candlesticks' width even\n        // in order of keeping crosshair-over-candlesticks drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const wickWidth = Math.floor(horizontalPixelRatio);\n            if ((wickWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        const bars = this._private__data._internal_bars;\n        if (this._private__data._internal_wickVisible) {\n            this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        if (this._private__data._internal_borderVisible) {\n            this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n            this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n    }\n    _private__drawWicks(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevWickColor = '';\n        let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n        wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n        const wickOffset = Math.floor(wickWidth * 0.5);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barWickColor !== prevWickColor) {\n                ctx.fillStyle = bar._internal_barWickColor;\n                prevWickColor = bar._internal_barWickColor;\n            }\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const high = Math.round(bar._internal_highY * verticalPixelRatio);\n            const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n            const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n            let left = scaledX - wickOffset;\n            const right = left + wickWidth - 1;\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            const width = right - left + 1;\n            ctx.fillRect(left, high, width, top - high);\n            ctx.fillRect(left, bottom + 1, width, low - bottom);\n            prevEdge = right;\n        }\n    }\n    _private__calculateBorderWidth(pixelRatio) {\n        let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n        if (this._private__barWidth <= 2 * borderWidth) {\n            borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n        }\n        const res = Math.max(Math.floor(pixelRatio), borderWidth);\n        if (this._private__barWidth <= res * 2) {\n            // do not draw bodies, restore original value\n            return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n        }\n        return res;\n    }\n    _private__drawBorder(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBorderColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barBorderColor !== prevBorderColor) {\n                ctx.fillStyle = bar._internal_barBorderColor;\n                prevBorderColor = bar._internal_barBorderColor;\n            }\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            // this is important to calculate right before patching left\n            const right = left + this._private__barWidth - 1;\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n                fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n            }\n            else {\n                const width = right - left + 1;\n                ctx.fillRect(left, top, width, bottom - top + 1);\n            }\n            prevEdge = right;\n        }\n    }\n    _private__drawCandles(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBarColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            let right = left + this._private__barWidth - 1;\n            if (bar._internal_barColor !== prevBarColor) {\n                const barColor = bar._internal_barColor;\n                ctx.fillStyle = barColor;\n                prevBarColor = barColor;\n            }\n            if (this._private__data._internal_borderVisible) {\n                left += borderWidth;\n                top += borderWidth;\n                right -= borderWidth;\n                bottom -= borderWidth;\n            }\n            if (top > bottom) {\n                continue;\n            }\n            ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n        }\n    }\n}\n\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererCandlesticks();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const candlestickStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_wickVisible: candlestickStyleProps.wickVisible,\n            _internal_borderVisible: candlestickStyleProps.borderVisible,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nclass CustomSeriesPaneRendererWrapper {\n    constructor(sourceRenderer, priceScale) {\n        this._private__sourceRenderer = sourceRenderer;\n        this._private__priceScale = priceScale;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__sourceRenderer.draw(target, this._private__priceScale, isHovered, hitTestData);\n    }\n}\nclass SeriesCustomPaneView extends SeriesPaneViewBase {\n    constructor(series, model, paneView) {\n        super(series, model, false);\n        this._private__paneView = paneView;\n        this._internal__renderer = new CustomSeriesPaneRendererWrapper(this._private__paneView.renderer(), (price) => {\n            const firstValue = series._internal_firstValue();\n            if (firstValue === null) {\n                return null;\n            }\n            return series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n        });\n    }\n    _internal_priceValueBuilder(plotRow) {\n        return this._private__paneView.priceValueBuilder(plotRow);\n    }\n    _internal_isWhitespace(data) {\n        return this._private__paneView.isWhitespace(data);\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows()\n            .map((row) => {\n            return Object.assign(Object.assign({ _internal_time: row._internal_index, _internal_x: NaN }, colorer._internal_barStyle(row._internal_index)), { _internal_originalData: row._internal_data });\n        });\n    }\n    _internal__convertToCoordinates(priceScale, timeScale) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__prepareRendererData() {\n        this._private__paneView.update({\n            bars: this._internal__items.map(unwrapItemData),\n            barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            visibleRange: this._internal__itemsVisibleRange,\n        }, this._internal__series._internal_options());\n    }\n}\nfunction unwrapItemData(item) {\n    return {\n        x: item._internal_x,\n        time: item._internal_time,\n        originalData: item._internal_originalData,\n        barColor: item._internal_barColor,\n    };\n}\n\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__precalculatedCache = [];\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n        this._private__precalculatedCache = [];\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        if (!this._private__precalculatedCache.length) {\n            this._private__fillPrecalculatedCache(horizontalPixelRatio);\n        }\n        const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n        const histogramBase = Math.round((this._private__data._internal_histogramBase) * verticalPixelRatio);\n        const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n        const bottomHistogramBase = topHistogramBase + tickWidth;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const y = Math.round(item._internal_y * verticalPixelRatio);\n            ctx.fillStyle = item._internal_barColor;\n            let top;\n            let bottom;\n            if (y <= topHistogramBase) {\n                top = y;\n                bottom = bottomHistogramBase;\n            }\n            else {\n                top = topHistogramBase;\n                bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n            }\n            ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__fillPrecalculatedCache(pixelRatio) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            this._private__precalculatedCache = [];\n            return;\n        }\n        const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n        const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n        this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            // force cast to avoid ensureDefined call\n            const x = Math.round(item._internal_x * pixelRatio);\n            let left;\n            let right;\n            if (columnWidth % 2) {\n                const halfWidth = (columnWidth - 1) / 2;\n                left = x - halfWidth;\n                right = x + halfWidth;\n            }\n            else {\n                // shift pixel to left\n                const halfWidth = columnWidth / 2;\n                left = x - halfWidth;\n                right = x + halfWidth - 1;\n            }\n            this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n                _internal_left: left,\n                _internal_right: right,\n                _internal_roundedCenter: x,\n                _internal_center: (item._internal_x * pixelRatio),\n                _internal_time: item._internal_time,\n            };\n        }\n        // correct positions\n        for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n            if (current._internal_time !== prev._internal_time + 1) {\n                continue;\n            }\n            if (current._internal_left - prev._internal_right !== (spacing + 1)) {\n                // have to align\n                if (prev._internal_roundedCenter > prev._internal_center) {\n                    // prev wasshifted to left, so add pixel to right\n                    prev._internal_right = current._internal_left - spacing - 1;\n                }\n                else {\n                    // extend current to left\n                    current._internal_left = prev._internal_right + spacing + 1;\n                }\n            }\n        }\n        let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            // this could happen if barspacing < 1\n            if (current._internal_right < current._internal_left) {\n                current._internal_right = current._internal_left;\n            }\n            const width = current._internal_right - current._internal_left + 1;\n            minWidth = Math.min(width, minWidth);\n        }\n        if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n            for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n                const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n                const width = current._internal_right - current._internal_left + 1;\n                if (width > minWidth) {\n                    if (current._internal_roundedCenter > current._internal_center) {\n                        current._internal_right -= 1;\n                    }\n                    else {\n                        current._internal_left += 1;\n                    }\n                }\n            }\n        }\n    }\n}\n\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererHistogram();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nclass SeriesLinePaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererLine();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_lineWidth: options.lineWidth,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n    constructor(size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n        this._private__cache = new Map();\n        this._private__maxSize = size;\n    }\n    _internal_reset() {\n        this._private__actualSize = 0;\n        this._private__cache.clear();\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n    }\n    _internal_measureText(ctx, text, optimizationReplacementRe) {\n        return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n    }\n    _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n        const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n        // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n        return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n    }\n    _private__getMetrics(ctx, text, optimizationReplacementRe) {\n        const re = optimizationReplacementRe || defaultReplacementRe;\n        const cacheString = String(text).replace(re, '0');\n        if (this._private__cache.has(cacheString)) {\n            return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n            delete this._private__tick2Labels[this._private__oldestTick];\n            this._private__cache.delete(oldestValue);\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        ctx.save();\n        ctx.textBaseline = 'middle';\n        const metrics = ctx.measureText(cacheString);\n        ctx.restore();\n        if (metrics.width === 0 && !!text.length) {\n            // measureText can return 0 in FF depending on a canvas size, don't cache it\n            return metrics;\n        }\n        this._private__cache.set(cacheString, { _internal_metrics: metrics, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels[this._private__usageTick] = cacheString;\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return metrics;\n    }\n}\n\nclass PanePriceAxisViewRenderer {\n    constructor(textWidthCache) {\n        this._private__priceAxisViewRenderer = null;\n        this._private__rendererOptions = null;\n        this._private__align = 'right';\n        this._private__textWidthCache = textWidthCache;\n    }\n    _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n        this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n        this._private__rendererOptions = rendererOptions;\n        this._private__align = align;\n    }\n    _internal_draw(target) {\n        if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n            return;\n        }\n        this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n    }\n}\nclass PanePriceAxisView {\n    constructor(priceAxisView, dataSource, chartModel) {\n        this._private__priceAxisView = priceAxisView;\n        this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n        this._private__dataSource = dataSource;\n        this._private__chartModel = chartModel;\n        this._private__fontSize = -1;\n        this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n    }\n    _internal_renderer() {\n        const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n        if (pane === null) {\n            return null;\n        }\n        // this price scale will be used to find label placement only (left, right, none)\n        const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n        if (priceScale === null) {\n            return null;\n        }\n        const position = pane._internal_priceScalePosition(priceScale);\n        if (position === 'overlay') {\n            return null;\n        }\n        const options = this._private__chartModel._internal_priceAxisRendererOptions();\n        if (options._internal_fontSize !== this._private__fontSize) {\n            this._private__fontSize = options._internal_fontSize;\n            this._private__textWidthCache._internal_reset();\n        }\n        this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n        return this._private__renderer;\n    }\n}\n\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_hitTest(x, y) {\n        var _a;\n        if (!((_a = this._private__data) === null || _a === void 0 ? void 0 : _a._internal_visible)) {\n            return null;\n        }\n        const { _internal_y: itemY, _internal_lineWidth: lineWidth, _internal_externalId: externalId } = this._private__data;\n        // add a fixed area threshold around line (Y + width) for hit test\n        if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n            return {\n                _internal_hitTestData: this._private__data,\n                _internal_externalId: externalId,\n            };\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        if (this._private__data._internal_visible === false) {\n            return;\n        }\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        if (y < 0 || y > bitmapSize.height) {\n            return;\n        }\n        ctx.lineCap = 'butt';\n        ctx.strokeStyle = this._private__data._internal_color;\n        ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n        setLineStyle(ctx, this._private__data._internal_lineStyle);\n        drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n}\n\nclass SeriesHorizontalLinePaneView {\n    constructor(series) {\n        this._internal__lineRendererData = {\n            _internal_y: 0,\n            _internal_color: 'rgba(0, 0, 0, 0)',\n            _internal_lineWidth: 1,\n            _internal_lineStyle: 0 /* LineStyle.Solid */,\n            _internal_visible: false,\n        };\n        this._internal__lineRenderer = new HorizontalLineRenderer();\n        this._private__invalidated = true;\n        this._internal__series = series;\n        this._internal__model = series._internal_model();\n        this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._internal__lineRenderer;\n    }\n}\n\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        this._internal__lineRendererData._internal_visible = false;\n        const priceScale = this._internal__series._internal_priceScale();\n        const mode = priceScale._internal_mode()._internal_mode;\n        if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n            return;\n        }\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__lineRendererData._internal_visible = true;\n        this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n        this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n        this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n        this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n    }\n}\n\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_data() {\n        return this._private__data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        const data = this._private__data;\n        if (data === null) {\n            return;\n        }\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n        const centerY = data._internal_center.y * verticalPixelRatio;\n        ctx.fillStyle = data._internal_seriesLineColor;\n        ctx.beginPath();\n        // TODO: it is better to have different horizontal and vertical radii\n        const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n        ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.fillStyle = data._internal_fillColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.lineWidth = tickWidth;\n        ctx.strokeStyle = data._internal_strokeColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n        ctx.stroke();\n    }\n}\n\nconst animationStagesData = [\n    {\n        _internal_start: 0,\n        _internal_end: 0.25 /* Constants.Stage1Period */,\n        _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n        _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n        _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n        _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n        _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */,\n    },\n];\nfunction color(seriesLineColor, stage, startAlpha, endAlpha) {\n    const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n    return applyAlpha(seriesLineColor, alpha);\n}\nfunction radius(stage, startRadius, endRadius) {\n    return startRadius + (endRadius - startRadius) * stage;\n}\nfunction animationData(durationSinceStart, lineColor) {\n    const globalStage = (durationSinceStart % 2600 /* Constants.AnimationPeriod */) / 2600 /* Constants.AnimationPeriod */;\n    let currentStageData;\n    for (const stageData of animationStagesData) {\n        if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n            currentStageData = stageData;\n            break;\n        }\n    }\n    assert(currentStageData !== undefined, 'Last price animation internal logic error');\n    const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n    return {\n        _internal_fillColor: color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n        _internal_strokeColor: color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n        _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius),\n    };\n}\nclass SeriesLastPriceAnimationPaneView {\n    constructor(series) {\n        this._private__renderer = new SeriesLastPriceAnimationRenderer();\n        this._private__invalidated = true;\n        this._private__stageInvalidated = true;\n        this._private__startTime = performance.now();\n        this._private__endTime = this._private__startTime - 1;\n        this._private__series = series;\n    }\n    _internal_onDataCleared() {\n        this._private__endTime = this._private__startTime - 1;\n        this._internal_update();\n    }\n    _internal_onNewRealtimeDataReceived() {\n        this._internal_update();\n        if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n            const now = performance.now();\n            const timeToAnimationEnd = this._private__endTime - now;\n            if (timeToAnimationEnd > 0) {\n                if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n                    this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n                }\n                return;\n            }\n            this._private__startTime = now;\n            this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n        }\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_invalidateStage() {\n        this._private__stageInvalidated = true;\n    }\n    _internal_visible() {\n        // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n        return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n    }\n    _internal_animationActive() {\n        switch (this._private__series._internal_options().lastPriceAnimation) {\n            case 0 /* LastPriceAnimationMode.Disabled */:\n                return false;\n            case 1 /* LastPriceAnimationMode.Continuous */:\n                return true;\n            case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n                return performance.now() <= this._private__endTime;\n        }\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n            this._private__stageInvalidated = false;\n        }\n        else if (this._private__stageInvalidated) {\n            this._private__updateRendererDataStage();\n            this._private__stageInvalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        this._private__renderer._internal_setData(null);\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const visibleRange = timeScale._internal_visibleStrictRange();\n        const firstValue = this._private__series._internal_firstValue();\n        if (visibleRange === null || firstValue === null) {\n            return;\n        }\n        const lastValue = this._private__series._internal_lastValueData(true);\n        if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n            return;\n        }\n        const lastValuePoint = {\n            x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n            y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value),\n        };\n        const seriesLineColor = lastValue._internal_color;\n        const seriesLineWidth = this._private__series._internal_options().lineWidth;\n        const data = animationData(this._private__duration(), seriesLineColor);\n        this._private__renderer._internal_setData({\n            _internal_seriesLineColor: seriesLineColor,\n            _internal_seriesLineWidth: seriesLineWidth,\n            _internal_fillColor: data._internal_fillColor,\n            _internal_strokeColor: data._internal_strokeColor,\n            _internal_radius: data._internal_radius,\n            _internal_center: lastValuePoint,\n        });\n    }\n    _private__updateRendererDataStage() {\n        const rendererData = this._private__renderer._internal_data();\n        if (rendererData !== null) {\n            const data = animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n            rendererData._internal_fillColor = data._internal_fillColor;\n            rendererData._internal_strokeColor = data._internal_strokeColor;\n            rendererData._internal_radius = data._internal_radius;\n        }\n    }\n    _private__duration() {\n        return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n    }\n}\n\nfunction size(barSpacing, coeff) {\n    const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n    return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n    switch (shape) {\n        case 'arrowDown':\n        case 'arrowUp':\n            return size(originalSize, 1);\n        case 'circle':\n            return size(originalSize, 0.8);\n        case 'square':\n            return size(originalSize, 0.7);\n    }\n}\nfunction calculateShapeHeight(barSpacing) {\n    return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n    return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\n\nfunction drawSquare(ctx, centerX, centerY, size) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = (squareSize - 1) / 2;\n    const left = centerX - halfSize;\n    const top = centerY - halfSize;\n    ctx.fillRect(left, top, squareSize, squareSize);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = (squareSize - 1) / 2;\n    const left = centerX - halfSize;\n    const top = centerY - halfSize;\n    return x >= left && x <= left + squareSize &&\n        y >= top && y <= top + squareSize;\n}\n\nfunction drawArrow(up, ctx, centerX, centerY, size) {\n    const arrowSize = shapeSize('arrowUp', size);\n    const halfArrowSize = (arrowSize - 1) / 2;\n    const baseSize = ceiledOdd(size / 2);\n    const halfBaseSize = (baseSize - 1) / 2;\n    ctx.beginPath();\n    if (up) {\n        ctx.moveTo(centerX - halfArrowSize, centerY);\n        ctx.lineTo(centerX, centerY - halfArrowSize);\n        ctx.lineTo(centerX + halfArrowSize, centerY);\n        ctx.lineTo(centerX + halfBaseSize, centerY);\n        ctx.lineTo(centerX + halfBaseSize, centerY + halfArrowSize);\n        ctx.lineTo(centerX - halfBaseSize, centerY + halfArrowSize);\n        ctx.lineTo(centerX - halfBaseSize, centerY);\n    }\n    else {\n        ctx.moveTo(centerX - halfArrowSize, centerY);\n        ctx.lineTo(centerX, centerY + halfArrowSize);\n        ctx.lineTo(centerX + halfArrowSize, centerY);\n        ctx.lineTo(centerX + halfBaseSize, centerY);\n        ctx.lineTo(centerX + halfBaseSize, centerY - halfArrowSize);\n        ctx.lineTo(centerX - halfBaseSize, centerY - halfArrowSize);\n        ctx.lineTo(centerX - halfBaseSize, centerY);\n    }\n    ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n    // TODO: implement arrow hit test\n    return hitTestSquare(centerX, centerY, size, x, y);\n}\n\nfunction drawCircle(ctx, centerX, centerY, size) {\n    const circleSize = shapeSize('circle', size);\n    const halfSize = (circleSize - 1) / 2;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, halfSize, 0, 2 * Math.PI, false);\n    ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n    const circleSize = shapeSize('circle', size);\n    const tolerance = 2 + circleSize / 2;\n    const xOffset = centerX - x;\n    const yOffset = centerY - y;\n    const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n    return dist <= tolerance;\n}\n\nfunction drawText(ctx, text, x, y) {\n    ctx.fillText(text, x, y);\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n    const halfHeight = textHeight / 2;\n    return x >= textX && x <= textX + textWidth &&\n        y >= textY - halfHeight && y <= textY + halfHeight;\n}\n\nclass SeriesMarkersRenderer extends MediaCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__textWidthCache = new TextWidthCache();\n        this._private__fontSize = -1;\n        this._private__fontFamily = '';\n        this._private__font = '';\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_setParams(fontSize, fontFamily) {\n        if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n            this._private__fontSize = fontSize;\n            this._private__fontFamily = fontFamily;\n            this._private__font = makeFont(fontSize, fontFamily);\n            this._private__textWidthCache._internal_reset();\n        }\n    }\n    _internal_hitTest(x, y) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return null;\n        }\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (hitTestItem(item, x, y)) {\n                return {\n                    _internal_hitTestData: item._internal_internalId,\n                    _internal_externalId: item._internal_externalId,\n                };\n            }\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx }, isHovered, hitTestData) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        ctx.textBaseline = 'middle';\n        ctx.font = this._private__font;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (item._internal_text !== undefined) {\n                item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n                item._internal_text._internal_height = this._private__fontSize;\n                item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n            }\n            drawItem(item, ctx);\n        }\n    }\n}\nfunction drawItem(item, ctx) {\n    ctx.fillStyle = item._internal_color;\n    if (item._internal_text !== undefined) {\n        drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y);\n    }\n    drawShape(item, ctx);\n}\nfunction drawShape(item, ctx) {\n    if (item._internal_size === 0) {\n        return;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            drawArrow(false, ctx, item._internal_x, item._internal_y, item._internal_size);\n            return;\n        case 'arrowUp':\n            drawArrow(true, ctx, item._internal_x, item._internal_y, item._internal_size);\n            return;\n        case 'circle':\n            drawCircle(ctx, item._internal_x, item._internal_y, item._internal_size);\n            return;\n        case 'square':\n            drawSquare(ctx, item._internal_x, item._internal_y, item._internal_size);\n            return;\n    }\n    ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n    if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n        return true;\n    }\n    return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n    if (item._internal_size === 0) {\n        return false;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'arrowUp':\n            return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'circle':\n            return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'square':\n            return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n    }\n}\n\n// eslint-disable-next-line max-params\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, priceScale, timeScale, firstValue) {\n    const inBarPrice = isNumber(seriesData) ? seriesData : seriesData._internal_close;\n    const highPrice = isNumber(seriesData) ? seriesData : seriesData._internal_high;\n    const lowPrice = isNumber(seriesData) ? seriesData : seriesData._internal_low;\n    const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n    const shapeSize = calculateShapeHeight(timeScale._internal_barSpacing()) * sizeMultiplier;\n    const halfSize = shapeSize / 2;\n    rendererItem._internal_size = shapeSize;\n    switch (marker.position) {\n        case 'inBar': {\n            rendererItem._internal_y = priceScale._internal_priceToCoordinate(inBarPrice, firstValue);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n            }\n            return;\n        }\n        case 'aboveBar': {\n            rendererItem._internal_y = (priceScale._internal_priceToCoordinate(highPrice, firstValue) - halfSize - offsets._internal_aboveBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_aboveBar += shapeSize + shapeMargin;\n            return;\n        }\n        case 'belowBar': {\n            rendererItem._internal_y = (priceScale._internal_priceToCoordinate(lowPrice, firstValue) + halfSize + offsets._internal_belowBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_belowBar += shapeSize + shapeMargin;\n            return;\n        }\n    }\n    ensureNever(marker.position);\n}\nclass SeriesMarkersPaneView {\n    constructor(series, model) {\n        this._private__invalidated = true;\n        this._private__dataInvalidated = true;\n        this._private__autoScaleMarginsInvalidated = true;\n        this._private__autoScaleMargins = null;\n        this._private__renderer = new SeriesMarkersRenderer();\n        this._private__series = series;\n        this._private__model = model;\n        this._private__data = {\n            _internal_items: [],\n            _internal_visibleRange: null,\n        };\n    }\n    _internal_update(updateType) {\n        this._private__invalidated = true;\n        this._private__autoScaleMarginsInvalidated = true;\n        if (updateType === 'data') {\n            this._private__dataInvalidated = true;\n        }\n    }\n    _internal_renderer(addAnchors) {\n        if (!this._private__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__makeValid();\n        }\n        const layout = this._private__model._internal_options().layout;\n        this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily);\n        this._private__renderer._internal_setData(this._private__data);\n        return this._private__renderer;\n    }\n    _internal_autoScaleMargins() {\n        if (this._private__autoScaleMarginsInvalidated) {\n            if (this._private__series._internal_indexedMarkers().length > 0) {\n                const barSpacing = this._private__model._internal_timeScale()._internal_barSpacing();\n                const shapeMargin$1 = shapeMargin(barSpacing);\n                const marginsAboveAndBelow = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n                this._private__autoScaleMargins = {\n                    above: marginsAboveAndBelow,\n                    below: marginsAboveAndBelow,\n                };\n            }\n            else {\n                this._private__autoScaleMargins = null;\n            }\n            this._private__autoScaleMarginsInvalidated = false;\n        }\n        return this._private__autoScaleMargins;\n    }\n    _internal__makeValid() {\n        const priceScale = this._private__series._internal_priceScale();\n        const timeScale = this._private__model._internal_timeScale();\n        const seriesMarkers = this._private__series._internal_indexedMarkers();\n        if (this._private__dataInvalidated) {\n            this._private__data._internal_items = seriesMarkers.map((marker) => ({\n                _internal_time: marker.time,\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_size: 0,\n                _internal_shape: marker.shape,\n                _internal_color: marker.color,\n                _internal_internalId: marker._internal_internalId,\n                _internal_externalId: marker.id,\n                _internal_text: undefined,\n            }));\n            this._private__dataInvalidated = false;\n        }\n        const layoutOptions = this._private__model._internal_options().layout;\n        this._private__data._internal_visibleRange = null;\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        if (this._private__data._internal_items.length === 0) {\n            return;\n        }\n        let prevTimeIndex = NaN;\n        const shapeMargin$1 = shapeMargin(timeScale._internal_barSpacing());\n        const offsets = {\n            _internal_aboveBar: shapeMargin$1,\n            _internal_belowBar: shapeMargin$1,\n        };\n        this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBars, true);\n        for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n            const marker = seriesMarkers[index];\n            if (marker.time !== prevTimeIndex) {\n                // new bar, reset stack counter\n                offsets._internal_aboveBar = shapeMargin$1;\n                offsets._internal_belowBar = shapeMargin$1;\n                prevTimeIndex = marker.time;\n            }\n            const rendererItem = this._private__data._internal_items[index];\n            rendererItem._internal_x = timeScale._internal_indexToCoordinate(marker.time);\n            if (marker.text !== undefined && marker.text.length > 0) {\n                rendererItem._internal_text = {\n                    _internal_content: marker.text,\n                    _internal_x: 0,\n                    _internal_y: 0,\n                    _internal_width: 0,\n                    _internal_height: 0,\n                };\n            }\n            const dataAt = this._private__series._internal_dataAt(marker.time);\n            if (dataAt === null) {\n                continue;\n            }\n            fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, priceScale, timeScale, firstValue._internal_value);\n        }\n        this._private__invalidated = false;\n    }\n}\n\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = lastValueData._internal_coordinate;\n        data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n        data._internal_lineWidth = seriesOptions.priceLineWidth;\n        data._internal_lineStyle = seriesOptions.priceLineStyle;\n    }\n}\n\nclass SeriesPriceAxisView extends PriceAxisView {\n    constructor(source) {\n        super();\n        this._private__source = source;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const source = this._private__source;\n        if (!source._internal_visible()) {\n            return;\n        }\n        const seriesOptions = source._internal_options();\n        const showSeriesLastValue = seriesOptions.lastValueVisible;\n        const showSymbolLabel = source._internal_title() !== '';\n        const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n        const lastValueData = source._internal_lastValueData(false);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        if (showSeriesLastValue) {\n            axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n            axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n        }\n        if (showSymbolLabel || showPriceAndPercentage) {\n            paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n            paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n        }\n        const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n        const colors = generateContrastColors(lastValueColor);\n        commonRendererData._internal_background = colors._internal_background;\n        commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n        paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n        axisRendererData._internal_borderColor = lastValueColor;\n        axisRendererData._internal_color = colors._internal_foreground;\n        paneRendererData._internal_color = colors._internal_foreground;\n    }\n    _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n        let result = '';\n        const title = this._private__source._internal_title();\n        if (showSymbolLabel && title.length !== 0) {\n            result += `${title} `;\n        }\n        if (showSeriesLastValue && showPriceAndPercentage) {\n            result += this._private__source._internal_priceScale()._internal_isPercentage() ?\n                lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n        }\n        return result.trim();\n    }\n    _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n        if (!showSeriesLastValue) {\n            return '';\n        }\n        if (!showPriceAndPercentage) {\n            return lastValueData._internal_text;\n        }\n        return this._private__source._internal_priceScale()._internal_isPercentage() ?\n            lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n    }\n}\n\nfunction computeFiniteResult(method, valueOne, valueTwo, fallback) {\n    const firstFinite = Number.isFinite(valueOne);\n    const secondFinite = Number.isFinite(valueTwo);\n    if (firstFinite && secondFinite) {\n        return method(valueOne, valueTwo);\n    }\n    return !firstFinite && !secondFinite ? fallback : (firstFinite ? valueOne : valueTwo);\n}\nclass PriceRangeImpl {\n    constructor(minValue, maxValue) {\n        this._private__minValue = minValue;\n        this._private__maxValue = maxValue;\n    }\n    _internal_equals(pr) {\n        if (pr === null) {\n            return false;\n        }\n        return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n    }\n    _internal_clone() {\n        return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n    }\n    _internal_minValue() {\n        return this._private__minValue;\n    }\n    _internal_maxValue() {\n        return this._private__maxValue;\n    }\n    _internal_length() {\n        return this._private__maxValue - this._private__minValue;\n    }\n    _internal_isEmpty() {\n        return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n    }\n    _internal_merge(anotherRange) {\n        if (anotherRange === null) {\n            return this;\n        }\n        return new PriceRangeImpl(computeFiniteResult(Math.min, this._internal_minValue(), anotherRange._internal_minValue(), -Infinity), computeFiniteResult(Math.max, this._internal_maxValue(), anotherRange._internal_maxValue(), Infinity));\n    }\n    _internal_scaleAroundCenter(coeff) {\n        if (!isNumber(coeff)) {\n            return;\n        }\n        const delta = this._private__maxValue - this._private__minValue;\n        if (delta === 0) {\n            return;\n        }\n        const center = (this._private__maxValue + this._private__minValue) * 0.5;\n        let maxDelta = this._private__maxValue - center;\n        let minDelta = this._private__minValue - center;\n        maxDelta *= coeff;\n        minDelta *= coeff;\n        this._private__maxValue = center + maxDelta;\n        this._private__minValue = center + minDelta;\n    }\n    _internal_shift(delta) {\n        if (!isNumber(delta)) {\n            return;\n        }\n        this._private__maxValue += delta;\n        this._private__minValue += delta;\n    }\n    _internal_toRaw() {\n        return {\n            minValue: this._private__minValue,\n            maxValue: this._private__maxValue,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n    }\n}\n\nclass AutoscaleInfoImpl {\n    constructor(priceRange, margins) {\n        this._private__priceRange = priceRange;\n        this._private__margins = margins || null;\n    }\n    _internal_priceRange() {\n        return this._private__priceRange;\n    }\n    _internal_margins() {\n        return this._private__margins;\n    }\n    _internal_toRaw() {\n        if (this._private__priceRange === null) {\n            return null;\n        }\n        return {\n            priceRange: this._private__priceRange._internal_toRaw(),\n            margins: this._private__margins || undefined,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n    }\n}\n\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    constructor(series, priceLine) {\n        super(series);\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const lineOptions = this._private__priceLine._internal_options();\n        if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = y;\n        data._internal_color = lineOptions.color;\n        data._internal_lineWidth = lineOptions.lineWidth;\n        data._internal_lineStyle = lineOptions.lineStyle;\n        data._internal_externalId = this._private__priceLine._internal_options().id;\n    }\n}\n\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n    constructor(series, priceLine) {\n        super();\n        this._private__series = series;\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const options = this._private__priceLine._internal_options();\n        const labelVisible = options.axisLabelVisible;\n        const showPaneLabel = options.title !== '';\n        const series = this._private__series;\n        if (!labelVisible || !series._internal_visible()) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        if (showPaneLabel) {\n            paneRendererData._internal_text = options.title;\n            paneRendererData._internal_visible = true;\n        }\n        paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n        axisRendererData._internal_text = this._private__formatPrice(options.price);\n        axisRendererData._internal_visible = true;\n        const colors = generateContrastColors(options.axisLabelColor || options.color);\n        commonData._internal_background = colors._internal_background;\n        const textColor = options.axisLabelTextColor || colors._internal_foreground;\n        axisRendererData._internal_color = textColor; // price text\n        paneRendererData._internal_color = textColor; // title text\n        commonData._internal_coordinate = y;\n    }\n    _private__formatPrice(price) {\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return '';\n        }\n        return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n    }\n}\n\nclass CustomPriceLine {\n    constructor(series, options) {\n        this._private__series = series;\n        this._private__options = options;\n        this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n        this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n        this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_update();\n        this._private__series._internal_model()._internal_lightUpdate();\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneView() {\n        return this._private__priceLineView;\n    }\n    _internal_labelPaneView() {\n        return this._private__panePriceAxisView;\n    }\n    _internal_priceAxisView() {\n        return this._private__priceAxisView;\n    }\n    _internal_update() {\n        this._private__priceLineView._internal_update();\n        this._private__priceAxisView._internal_update();\n    }\n    _internal_yCoord() {\n        const series = this._private__series;\n        const priceScale = series._internal_priceScale();\n        const timeScale = series._internal_model()._internal_timeScale();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return null;\n        }\n        const firstValue = series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n    }\n}\n\nclass PriceDataSource extends DataSource {\n    constructor(model) {\n        super();\n        this._private__model = model;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n}\n\nconst barStyleFnMap = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n        var _a;\n        const upColor = barStyle.upColor;\n        const downColor = barStyle.downColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : (isUp ? upColor : downColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c;\n        const upColor = candlestickStyle.upColor;\n        const downColor = candlestickStyle.downColor;\n        const borderUpColor = candlestickStyle.borderUpColor;\n        const borderDownColor = candlestickStyle.borderDownColor;\n        const wickUpColor = candlestickStyle.wickUpColor;\n        const wickDownColor = candlestickStyle.wickDownColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : (isUp ? upColor : downColor),\n            _internal_barBorderColor: (_b = currentBar._internal_borderColor) !== null && _b !== void 0 ? _b : (isUp ? borderUpColor : borderDownColor),\n            _internal_barWickColor: (_c = currentBar._internal_wickColor) !== null && _c !== void 0 ? _c : (isUp ? wickUpColor : wickDownColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Custom: (findBar, customStyle, barIndex, precomputedBars) => {\n        var _a;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : customStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c, _d;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_lineColor) !== null && _a !== void 0 ? _a : areaStyle.lineColor,\n            _internal_lineColor: (_b = currentBar._internal_lineColor) !== null && _b !== void 0 ? _b : areaStyle.lineColor,\n            _internal_topColor: (_c = currentBar._internal_topColor) !== null && _c !== void 0 ? _c : areaStyle.topColor,\n            _internal_bottomColor: (_d = currentBar._internal_bottomColor) !== null && _d !== void 0 ? _d : areaStyle.bottomColor,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c, _d, _e, _f;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n        return {\n            _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n            _internal_topLineColor: (_a = currentBar._internal_topLineColor) !== null && _a !== void 0 ? _a : baselineStyle.topLineColor,\n            _internal_bottomLineColor: (_b = currentBar._internal_bottomLineColor) !== null && _b !== void 0 ? _b : baselineStyle.bottomLineColor,\n            _internal_topFillColor1: (_c = currentBar._internal_topFillColor1) !== null && _c !== void 0 ? _c : baselineStyle.topFillColor1,\n            _internal_topFillColor2: (_d = currentBar._internal_topFillColor2) !== null && _d !== void 0 ? _d : baselineStyle.topFillColor2,\n            _internal_bottomFillColor1: (_e = currentBar._internal_bottomFillColor1) !== null && _e !== void 0 ? _e : baselineStyle.bottomFillColor1,\n            _internal_bottomFillColor2: (_f = currentBar._internal_bottomFillColor2) !== null && _f !== void 0 ? _f : baselineStyle.bottomFillColor2,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n        var _a, _b;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : lineStyle.color,\n            _internal_lineColor: (_b = currentBar._internal_color) !== null && _b !== void 0 ? _b : lineStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n        var _a;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : histogramStyle.color,\n        };\n    },\n};\nclass SeriesBarColorer {\n    constructor(series) {\n        this._private__findBar = (barIndex, precomputedBars) => {\n            if (precomputedBars !== undefined) {\n                return precomputedBars._internal_value;\n            }\n            return this._private__series._internal_bars()._internal_valueAt(barIndex);\n        };\n        this._private__series = series;\n        this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n    }\n    _internal_barStyle(barIndex, precomputedBars) {\n        // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n        // Used to avoid binary search if bars are already known\n        return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n    }\n}\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n    /**\n     * Search the nearest left item\n     */\n    MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n    /**\n     * Do not search\n     */\n    MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Search the nearest right item\n     */\n    MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n    constructor() {\n        this._private__items = [];\n        this._private__minMaxCache = new Map();\n        this._private__rowSearchCache = new Map();\n    }\n    // @returns Last row\n    _internal_last() {\n        return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n    }\n    _internal_firstIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n    }\n    _internal_lastIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt((this._private__items.length - 1)) : null;\n    }\n    _internal_size() {\n        return this._private__items.length;\n    }\n    _internal_isEmpty() {\n        return this._internal_size() === 0;\n    }\n    _internal_contains(index) {\n        return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n    }\n    _internal_valueAt(index) {\n        return this._internal_search(index);\n    }\n    _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n        const pos = this._private__search(index, searchMode);\n        if (pos === null) {\n            return null;\n        }\n        return Object.assign(Object.assign({}, this._private__valueAt(pos)), { _internal_index: this._private__indexAt(pos) });\n    }\n    _internal_rows() {\n        return this._private__items;\n    }\n    _internal_minMaxOnRangeCached(start, end, plots) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        for (const plot of plots) {\n            const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n    _internal_setData(plotRows) {\n        this._private__rowSearchCache.clear();\n        this._private__minMaxCache.clear();\n        this._private__items = plotRows;\n    }\n    _private__indexAt(offset) {\n        return this._private__items[offset]._internal_index;\n    }\n    _private__valueAt(offset) {\n        return this._private__items[offset];\n    }\n    _private__search(index, searchMode) {\n        const exactPos = this._private__bsearch(index);\n        if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n            switch (searchMode) {\n                case -1 /* MismatchDirection.NearestLeft */:\n                    return this._private__searchNearestLeft(index);\n                case 1 /* MismatchDirection.NearestRight */:\n                    return this._private__searchNearestRight(index);\n                default:\n                    throw new TypeError('Unknown search mode');\n            }\n        }\n        return exactPos;\n    }\n    _private__searchNearestLeft(index) {\n        let nearestLeftPos = this._private__lowerbound(index);\n        if (nearestLeftPos > 0) {\n            nearestLeftPos = nearestLeftPos - 1;\n        }\n        return (nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index) ? nearestLeftPos : null;\n    }\n    _private__searchNearestRight(index) {\n        const nearestRightPos = this._private__upperbound(index);\n        return (nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos)) ? nearestRightPos : null;\n    }\n    _private__bsearch(index) {\n        const start = this._private__lowerbound(index);\n        if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n            return start;\n        }\n        return null;\n    }\n    _private__lowerbound(index) {\n        return lowerBound(this._private__items, index, (a, b) => a._internal_index < b);\n    }\n    _private__upperbound(index) {\n        return upperBound(this._private__items, index, (a, b) => a._internal_index > b);\n    }\n    _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n        let result = null;\n        for (let i = startIndex; i < endIndexExclusive; i++) {\n            const values = this._private__items[i]._internal_value;\n            const v = values[plotIndex];\n            if (Number.isNaN(v)) {\n                continue;\n            }\n            if (result === null) {\n                result = { _internal_min: v, _internal_max: v };\n            }\n            else {\n                if (v < result._internal_min) {\n                    result._internal_min = v;\n                }\n                if (v > result._internal_max) {\n                    result._internal_max = v;\n                }\n            }\n        }\n        return result;\n    }\n    _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        // assume that bar indexes only increase\n        const firstIndex = ensureNotNull(this._internal_firstIndex());\n        const lastIndex = ensureNotNull(this._internal_lastIndex());\n        const s = Math.max(start, firstIndex);\n        const e = Math.min(end, lastIndex);\n        const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n        const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n        {\n            const startIndex = this._private__lowerbound(s);\n            const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        let minMaxCache = this._private__minMaxCache.get(plotIndex);\n        if (minMaxCache === undefined) {\n            minMaxCache = new Map();\n            this._private__minMaxCache.set(plotIndex, minMaxCache);\n        }\n        // now go cached\n        for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n            const chunkIndex = Math.floor(c / CHUNK_SIZE);\n            let chunkMinMax = minMaxCache.get(chunkIndex);\n            if (chunkMinMax === undefined) {\n                const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n                const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n                chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n                minMaxCache.set(chunkIndex, chunkMinMax);\n            }\n            result = mergeMinMax(result, chunkMinMax);\n        }\n        // tail\n        {\n            const startIndex = this._private__lowerbound(cachedHigh);\n            const endIndex = this._private__upperbound(e); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n}\nfunction mergeMinMax(first, second) {\n    if (first === null) {\n        return second;\n    }\n    else {\n        if (second === null) {\n            return first;\n        }\n        else {\n            // merge MinMax values\n            const min = Math.min(first._internal_min, second._internal_min);\n            const max = Math.max(first._internal_max, second._internal_max);\n            return { _internal_min: min, _internal_max: max };\n        }\n    }\n}\n\nfunction createSeriesPlotList() {\n    return new PlotList();\n}\n\nclass SeriesPrimitiveRendererWrapper {\n    constructor(baseRenderer) {\n        this._private__baseRenderer = baseRenderer;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__baseRenderer.draw(target);\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        var _a, _b;\n        (_b = (_a = this._private__baseRenderer).drawBackground) === null || _b === void 0 ? void 0 : _b.call(_a, target);\n    }\n}\nclass SeriesPrimitivePaneViewWrapper {\n    constructor(paneView) {\n        this._private__cache = null;\n        this._private__paneView = paneView;\n    }\n    _internal_renderer() {\n        var _a;\n        const baseRenderer = this._private__paneView.renderer();\n        if (baseRenderer === null) {\n            return null;\n        }\n        if (((_a = this._private__cache) === null || _a === void 0 ? void 0 : _a._internal_base) === baseRenderer) {\n            return this._private__cache._internal_wrapper;\n        }\n        const wrapper = new SeriesPrimitiveRendererWrapper(baseRenderer);\n        this._private__cache = {\n            _internal_base: baseRenderer,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_zOrder() {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this._private__paneView).zOrder) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : 'normal';\n    }\n}\nfunction getAxisViewData(baseView) {\n    var _a, _b, _c, _d, _e;\n    return {\n        _internal_text: baseView.text(),\n        _internal_coordinate: baseView.coordinate(),\n        _internal_fixedCoordinate: (_a = baseView.fixedCoordinate) === null || _a === void 0 ? void 0 : _a.call(baseView),\n        _internal_color: baseView.textColor(),\n        _internal_background: baseView.backColor(),\n        _internal_visible: (_c = (_b = baseView.visible) === null || _b === void 0 ? void 0 : _b.call(baseView)) !== null && _c !== void 0 ? _c : true,\n        _internal_tickVisible: (_e = (_d = baseView.tickVisible) === null || _d === void 0 ? void 0 : _d.call(baseView)) !== null && _e !== void 0 ? _e : true,\n    };\n}\nclass SeriesPrimitiveTimeAxisViewWrapper {\n    constructor(baseView, timeScale) {\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__baseView = baseView;\n        this._private__timeScale = timeScale;\n    }\n    _internal_renderer() {\n        this._private__renderer._internal_setData(Object.assign({ _internal_width: this._private__timeScale._internal_width() }, getAxisViewData(this._private__baseView)));\n        return this._private__renderer;\n    }\n}\nclass SeriesPrimitivePriceAxisViewWrapper extends PriceAxisView {\n    constructor(baseView, priceScale) {\n        super();\n        this._private__baseView = baseView;\n        this._private__priceScale = priceScale;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        const data = getAxisViewData(this._private__baseView);\n        commonRendererData._internal_background = data._internal_background;\n        axisRendererData._internal_color = data._internal_color;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        commonRendererData._internal_coordinate = data._internal_coordinate;\n        commonRendererData._internal_fixedCoordinate = data._internal_fixedCoordinate;\n        axisRendererData._internal_text = data._internal_text;\n        axisRendererData._internal_visible = data._internal_visible;\n        axisRendererData._internal_tickVisible = data._internal_tickVisible;\n    }\n}\nclass SeriesPrimitiveWrapper {\n    constructor(primitive, series) {\n        this._private__paneViewsCache = null;\n        this._private__timeAxisViewsCache = null;\n        this._private__priceAxisViewsCache = null;\n        this._private__priceAxisPaneViewsCache = null;\n        this._private__timeAxisPaneViewsCache = null;\n        this._private__primitive = primitive;\n        this._private__series = series;\n    }\n    _internal_primitive() {\n        return this._private__primitive;\n    }\n    _internal_updateAllViews() {\n        var _a, _b;\n        (_b = (_a = this._private__primitive).updateAllViews) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _internal_paneViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).paneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__paneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__paneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__paneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_timeAxisViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).timeAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__timeAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__timeAxisViewsCache._internal_wrapper;\n        }\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const wrapper = base.map((aw) => new SeriesPrimitiveTimeAxisViewWrapper(aw, timeScale));\n        this._private__timeAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).priceAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__priceAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__priceAxisViewsCache._internal_wrapper;\n        }\n        const priceScale = this._private__series._internal_priceScale();\n        const wrapper = base.map((aw) => new SeriesPrimitivePriceAxisViewWrapper(aw, priceScale));\n        this._private__priceAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisPaneViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).priceAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__priceAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__priceAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__priceAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_timeAxisPaneViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).timeAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__timeAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__timeAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__timeAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        var _a, _b, _c;\n        return ((_c = (_b = (_a = this._private__primitive).autoscaleInfo) === null || _b === void 0 ? void 0 : _b.call(_a, startTimePoint, endTimePoint)) !== null && _c !== void 0 ? _c : null);\n    }\n    _internal_hitTest(x, y) {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this._private__primitive).hitTest) === null || _b === void 0 ? void 0 : _b.call(_a, x, y)) !== null && _c !== void 0 ? _c : null;\n    }\n}\n\nfunction extractPrimitivePaneViews(primitives, extractor, zOrder, destination) {\n    primitives.forEach((wrapper) => {\n        extractor(wrapper).forEach((paneView) => {\n            if (paneView._internal_zOrder() !== zOrder) {\n                return;\n            }\n            destination.push(paneView);\n        });\n    });\n}\nfunction primitivePaneViewsExtractor(wrapper) {\n    return wrapper._internal_paneViews();\n}\nfunction primitivePricePaneViewsExtractor(wrapper) {\n    return wrapper._internal_priceAxisPaneViews();\n}\nfunction primitiveTimePaneViewsExtractor(wrapper) {\n    return wrapper._internal_timeAxisPaneViews();\n}\nclass Series extends PriceDataSource {\n    constructor(model, options, seriesType, pane, customPaneView) {\n        super(model);\n        this._private__data = createSeriesPlotList();\n        this._private__priceLineView = new SeriesPriceLinePaneView(this);\n        this._private__customPriceLines = [];\n        this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n        this._private__lastPriceAnimationPaneView = null;\n        this._private__barColorerCache = null;\n        this._private__markers = [];\n        this._private__indexedMarkers = [];\n        this._private__animationTimeoutId = null;\n        this._private__primitives = [];\n        this._private__options = options;\n        this._private__seriesType = seriesType;\n        const priceAxisView = new SeriesPriceAxisView(this);\n        this._private__priceAxisViews = [priceAxisView];\n        this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n        if (seriesType === 'Area' || seriesType === 'Line' || seriesType === 'Baseline') {\n            this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n        }\n        this._private__recreateFormatter();\n        this._private__recreatePaneViews(customPaneView);\n    }\n    _internal_destroy() {\n        if (this._private__animationTimeoutId !== null) {\n            clearTimeout(this._private__animationTimeoutId);\n        }\n    }\n    _internal_priceLineColor(lastBarColor) {\n        return this._private__options.priceLineColor || lastBarColor;\n    }\n    _internal_lastValueData(globalLast) {\n        const noDataRes = { _internal_noData: true };\n        const priceScale = this._internal_priceScale();\n        if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n            return noDataRes;\n        }\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        const firstValue = this._internal_firstValue();\n        if (visibleBars === null || firstValue === null) {\n            return noDataRes;\n        }\n        // find range of bars inside range\n        // TODO: make it more optimal\n        let bar;\n        let lastIndex;\n        if (globalLast) {\n            const lastBar = this._private__data._internal_last();\n            if (lastBar === null) {\n                return noDataRes;\n            }\n            bar = lastBar;\n            lastIndex = lastBar._internal_index;\n        }\n        else {\n            const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n            if (endBar === null) {\n                return noDataRes;\n            }\n            bar = this._private__data._internal_valueAt(endBar._internal_index);\n            if (bar === null) {\n                return noDataRes;\n            }\n            lastIndex = endBar._internal_index;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const barColorer = this._internal_barColorer();\n        const style = barColorer._internal_barStyle(lastIndex, { _internal_value: bar });\n        const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n        return {\n            _internal_noData: false,\n            _internal_price: price,\n            _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n            _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n            _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n            _internal_color: style._internal_barColor,\n            _internal_coordinate: coordinate,\n            _internal_index: lastIndex,\n        };\n    }\n    _internal_barColorer() {\n        if (this._private__barColorerCache !== null) {\n            return this._private__barColorerCache;\n        }\n        this._private__barColorerCache = new SeriesBarColorer(this);\n        return this._private__barColorerCache;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        const targetPriceScaleId = options.priceScaleId;\n        if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n            // series cannot do it itself, ask model\n            this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n        }\n        merge(this._private__options, options);\n        if (options.priceFormat !== undefined) {\n            this._private__recreateFormatter();\n            // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n            // thus we need to force the chart to do a full update to apply changes correctly\n            // full update is quite heavy operation in terms of performance\n            // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n            this._internal_model()._internal_fullUpdate();\n        }\n        this._internal_model()._internal_updateSource(this);\n        // a series might affect crosshair by some options (like crosshair markers)\n        // that's why we need to update crosshair as well\n        this._internal_model()._internal_updateCrosshair();\n        this._private__paneView._internal_update('options');\n    }\n    _internal_setData(data, updateInfo) {\n        this._private__data._internal_setData(data);\n        this._private__recalculateMarkers();\n        this._private__paneView._internal_update('data');\n        this._private__markersPaneView._internal_update('data');\n        if (this._private__lastPriceAnimationPaneView !== null) {\n            if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n                this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n            }\n            else if (data.length === 0) {\n                this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n            }\n        }\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_setMarkers(data) {\n        this._private__markers = data;\n        this._private__recalculateMarkers();\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._private__markersPaneView._internal_update('data');\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_markers() {\n        return this._private__markers;\n    }\n    _internal_indexedMarkers() {\n        return this._private__indexedMarkers;\n    }\n    _internal_createPriceLine(options) {\n        const result = new CustomPriceLine(this, options);\n        this._private__customPriceLines.push(result);\n        this._internal_model()._internal_updateSource(this);\n        return result;\n    }\n    _internal_removePriceLine(line) {\n        const index = this._private__customPriceLines.indexOf(line);\n        if (index !== -1) {\n            this._private__customPriceLines.splice(index, 1);\n        }\n        this._internal_model()._internal_updateSource(this);\n    }\n    _internal_seriesType() {\n        return this._private__seriesType;\n    }\n    _internal_firstValue() {\n        const bar = this._internal_firstBar();\n        if (bar === null) {\n            return null;\n        }\n        return {\n            _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_timePoint: bar._internal_time,\n        };\n    }\n    _internal_firstBar() {\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const startTimePoint = visibleBars._internal_left();\n        return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n    }\n    _internal_bars() {\n        return this._private__data;\n    }\n    _internal_dataAt(time) {\n        const prices = this._private__data._internal_valueAt(time);\n        if (prices === null) {\n            return null;\n        }\n        if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick' || this._private__seriesType === 'Custom') {\n            return {\n                _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n                _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n                _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n                _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */],\n            };\n        }\n        else {\n            return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n        }\n    }\n    _internal_topPaneViews(pane) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'top', res);\n        const animationPaneView = this._private__lastPriceAnimationPaneView;\n        if (animationPaneView === null || !animationPaneView._internal_visible()) {\n            return res;\n        }\n        if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n            this._private__animationTimeoutId = setTimeout(() => {\n                this._private__animationTimeoutId = null;\n                this._internal_model()._internal_cursorUpdate();\n            }, 0);\n        }\n        animationPaneView._internal_invalidateStage();\n        res.push(animationPaneView);\n        return res;\n    }\n    _internal_paneViews() {\n        const res = [];\n        if (!this._private__isOverlay()) {\n            res.push(this._private__baseHorizontalLineView);\n        }\n        res.push(this._private__paneView, this._private__priceLineView, this._private__markersPaneView);\n        const priceLineViews = this._private__customPriceLines.map((line) => line._internal_paneView());\n        res.push(...priceLineViews);\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'normal', res);\n        return res;\n    }\n    _internal_bottomPaneViews() {\n        return this._private__extractPaneViews(primitivePaneViewsExtractor, 'bottom');\n    }\n    _internal_pricePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitivePricePaneViewsExtractor, zOrder);\n    }\n    _internal_timePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitiveTimePaneViewsExtractor, zOrder);\n    }\n    _internal_primitiveHitTest(x, y) {\n        return this._private__primitives\n            .map((primitive) => primitive._internal_hitTest(x, y))\n            .filter((result) => result !== null);\n    }\n    _internal_labelPaneViews(pane) {\n        return [\n            this._private__panePriceAxisView,\n            ...this._private__customPriceLines.map((line) => line._internal_labelPaneView()),\n        ];\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n            return [];\n        }\n        const result = [...this._private__priceAxisViews];\n        for (const customPriceLine of this._private__customPriceLines) {\n            result.push(customPriceLine._internal_priceAxisView());\n        }\n        this._private__primitives.forEach((wrapper) => {\n            result.push(...wrapper._internal_priceAxisViews());\n        });\n        return result;\n    }\n    _internal_timeAxisViews() {\n        const res = [];\n        this._private__primitives.forEach((wrapper) => {\n            res.push(...wrapper._internal_timeAxisViews());\n        });\n        return res;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        if (this._private__options.autoscaleInfoProvider !== undefined) {\n            const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n                const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n                return (res === null) ? null : res._internal_toRaw();\n            });\n            return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n        }\n        return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n    }\n    _internal_minMove() {\n        return this._private__options.priceFormat.minMove;\n    }\n    _internal_formatter() {\n        return this._private__formatter;\n    }\n    _internal_updateAllViews() {\n        var _a;\n        this._private__paneView._internal_update();\n        this._private__markersPaneView._internal_update();\n        for (const priceAxisView of this._private__priceAxisViews) {\n            priceAxisView._internal_update();\n        }\n        for (const customPriceLine of this._private__customPriceLines) {\n            customPriceLine._internal_update();\n        }\n        this._private__priceLineView._internal_update();\n        this._private__baseHorizontalLineView._internal_update();\n        (_a = this._private__lastPriceAnimationPaneView) === null || _a === void 0 ? void 0 : _a._internal_update();\n        this._private__primitives.forEach((wrapper) => wrapper._internal_updateAllViews());\n    }\n    _internal_priceScale() {\n        return ensureNotNull(super._internal_priceScale());\n    }\n    _internal_markerDataAtIndex(index) {\n        const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') &&\n            this._private__options.crosshairMarkerVisible;\n        if (!getValue) {\n            return null;\n        }\n        const bar = this._private__data._internal_valueAt(index);\n        if (bar === null) {\n            return null;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const radius = this._private__markerRadius();\n        const borderColor = this._private__markerBorderColor();\n        const borderWidth = this._private__markerBorderWidth();\n        const backgroundColor = this._private__markerBackgroundColor(index);\n        return { _internal_price: price, _internal_radius: radius, _internal_borderColor: borderColor, _internal_borderWidth: borderWidth, _internal_backgroundColor: backgroundColor };\n    }\n    _internal_title() {\n        return this._private__options.title;\n    }\n    _internal_visible() {\n        return this._private__options.visible;\n    }\n    _internal_attachPrimitive(primitive) {\n        this._private__primitives.push(new SeriesPrimitiveWrapper(primitive, this));\n    }\n    _internal_detachPrimitive(source) {\n        this._private__primitives = this._private__primitives.filter((wrapper) => wrapper._internal_primitive() !== source);\n    }\n    _internal_customSeriesPlotValuesBuilder() {\n        if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_priceValueBuilder(data);\n        };\n    }\n    _internal_customSeriesWhitespaceCheck() {\n        if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_isWhitespace(data);\n        };\n    }\n    _private__isOverlay() {\n        const priceScale = this._internal_priceScale();\n        return !isDefaultPriceScale(priceScale._internal_id());\n    }\n    _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n        if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n            return null;\n        }\n        // TODO: refactor this\n        // series data is strongly hardcoded to keep bars\n        const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram'\n            ? [3 /* PlotRowValueIndex.Close */]\n            : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n        const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n        let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n        if (this._internal_seriesType() === 'Histogram') {\n            const base = this._private__options.base;\n            const rangeWithBase = new PriceRangeImpl(base, base);\n            range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n        }\n        let margins = this._private__markersPaneView._internal_autoScaleMargins();\n        this._private__primitives.forEach((primitive) => {\n            const primitiveAutoscale = primitive._internal_autoscaleInfo(startTimePoint, endTimePoint);\n            if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.priceRange) {\n                const primitiveRange = new PriceRangeImpl(primitiveAutoscale.priceRange.minValue, primitiveAutoscale.priceRange.maxValue);\n                range = range !== null ? range._internal_merge(primitiveRange) : primitiveRange;\n            }\n            if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.margins) {\n                margins = mergeMargins(margins, primitiveAutoscale.margins);\n            }\n        });\n        return new AutoscaleInfoImpl(range, margins);\n    }\n    _private__markerRadius() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerRadius;\n        }\n        return 0;\n    }\n    _private__markerBorderColor() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n                if (crosshairMarkerBorderColor.length !== 0) {\n                    return crosshairMarkerBorderColor;\n                }\n            }\n        }\n        return null;\n    }\n    _private__markerBorderWidth() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerBorderWidth;\n        }\n        return 0;\n    }\n    _private__markerBackgroundColor(index) {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n                if (crosshairMarkerBackgroundColor.length !== 0) {\n                    return crosshairMarkerBackgroundColor;\n                }\n            }\n        }\n        return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n    }\n    _private__recreateFormatter() {\n        switch (this._private__options.priceFormat.type) {\n            case 'custom': {\n                this._private__formatter = { format: this._private__options.priceFormat.formatter };\n                break;\n            }\n            case 'volume': {\n                this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            case 'percent': {\n                this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            default: {\n                const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n                this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n            }\n        }\n        if (this._internal__priceScale !== null) {\n            this._internal__priceScale._internal_updateFormatter();\n        }\n    }\n    _private__recalculateMarkers() {\n        const timeScale = this._internal_model()._internal_timeScale();\n        if (!timeScale._internal_hasPoints() || this._private__data._internal_isEmpty()) {\n            this._private__indexedMarkers = [];\n            return;\n        }\n        const firstDataIndex = ensureNotNull(this._private__data._internal_firstIndex());\n        this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n            // the first find index on the time scale (across all series)\n            const timePointIndex = ensureNotNull(timeScale._internal_timeToIndex(marker.time, true));\n            // and then search that index inside the series data\n            const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n            const seriesDataIndex = ensureNotNull(this._private__data._internal_search(timePointIndex, searchMode))._internal_index;\n            return {\n                time: seriesDataIndex,\n                position: marker.position,\n                shape: marker.shape,\n                color: marker.color,\n                id: marker.id,\n                _internal_internalId: index,\n                text: marker.text,\n                size: marker.size,\n                originalTime: marker.originalTime,\n            };\n        });\n    }\n    _private__recreatePaneViews(customPaneView) {\n        this._private__markersPaneView = new SeriesMarkersPaneView(this, this._internal_model());\n        switch (this._private__seriesType) {\n            case 'Bar': {\n                this._private__paneView = new SeriesBarsPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Candlestick': {\n                this._private__paneView = new SeriesCandlesticksPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Line': {\n                this._private__paneView = new SeriesLinePaneView(this, this._internal_model());\n                break;\n            }\n            case 'Custom': {\n                this._private__paneView = new SeriesCustomPaneView(this, this._internal_model(), ensureDefined(customPaneView));\n                break;\n            }\n            case 'Area': {\n                this._private__paneView = new SeriesAreaPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Baseline': {\n                this._private__paneView = new SeriesBaselinePaneView(this, this._internal_model());\n                break;\n            }\n            case 'Histogram': {\n                this._private__paneView = new SeriesHistogramPaneView(this, this._internal_model());\n                break;\n            }\n            default: throw Error('Unknown chart style assigned: ' + this._private__seriesType);\n        }\n    }\n    _private__extractPaneViews(extractor, zOrder) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, extractor, zOrder, res);\n        return res;\n    }\n}\nfunction mergeMargins(source, additionalMargin) {\n    var _a, _b;\n    return {\n        above: Math.max((_a = source === null || source === void 0 ? void 0 : source.above) !== null && _a !== void 0 ? _a : 0, additionalMargin.above),\n        below: Math.max((_b = source === null || source === void 0 ? void 0 : source.below) !== null && _b !== void 0 ? _b : 0, additionalMargin.below),\n    };\n}\n\nclass Magnet {\n    constructor(options) {\n        this._private__options = options;\n    }\n    _internal_align(price, index, pane) {\n        let res = price;\n        if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n            return res;\n        }\n        const defaultPriceScale = pane._internal_defaultPriceScale();\n        const firstValue = defaultPriceScale._internal_firstValue();\n        if (firstValue === null) {\n            return res;\n        }\n        const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n        // get all serieses from the pane\n        const serieses = pane._internal_dataSources().filter(((ds) => (ds instanceof (Series))));\n        const candidates = serieses.reduce((acc, series) => {\n            if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n                return acc;\n            }\n            const ps = series._internal_priceScale();\n            const bars = series._internal_bars();\n            if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n                return acc;\n            }\n            const bar = bars._internal_valueAt(index);\n            if (bar === null) {\n                return acc;\n            }\n            // convert bar to pixels\n            const firstPrice = ensure(series._internal_firstValue());\n            return acc.concat([ps._internal_priceToCoordinate(bar._internal_value[3 /* PlotRowValueIndex.Close */], firstPrice._internal_value)]);\n        }, []);\n        if (candidates.length === 0) {\n            return res;\n        }\n        candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n        const nearest = candidates[0];\n        res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n        return res;\n    }\n}\n\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        ctx.lineWidth = lineWidth;\n        strokeInPixel(ctx, () => {\n            const data = ensureNotNull(this._private__data);\n            if (data._internal_vertLinesVisible) {\n                ctx.strokeStyle = data._internal_vertLinesColor;\n                setLineStyle(ctx, data._internal_vertLineStyle);\n                ctx.beginPath();\n                for (const timeMark of data._internal_timeMarks) {\n                    const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n                    ctx.moveTo(x, -lineWidth);\n                    ctx.lineTo(x, bitmapSize.height + lineWidth);\n                }\n                ctx.stroke();\n            }\n            if (data._internal_horzLinesVisible) {\n                ctx.strokeStyle = data._internal_horzLinesColor;\n                setLineStyle(ctx, data._internal_horzLineStyle);\n                ctx.beginPath();\n                for (const priceMark of data._internal_priceMarks) {\n                    const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n                    ctx.moveTo(-lineWidth, y);\n                    ctx.lineTo(bitmapSize.width + lineWidth, y);\n                }\n                ctx.stroke();\n            }\n        });\n    }\n}\n\nclass GridPaneView {\n    constructor(pane) {\n        this._private__renderer = new GridRenderer();\n        this._private__invalidated = true;\n        this._private__pane = pane;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n            const data = {\n                _internal_horzLinesVisible: gridOptions.horzLines.visible,\n                _internal_vertLinesVisible: gridOptions.vertLines.visible,\n                _internal_horzLinesColor: gridOptions.horzLines.color,\n                _internal_vertLinesColor: gridOptions.vertLines.color,\n                _internal_horzLineStyle: gridOptions.horzLines.style,\n                _internal_vertLineStyle: gridOptions.vertLines.style,\n                _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n                // need this conversiom because TimeMark is a part of external interface\n                // and fields inside TimeMark are not minified\n                _internal_timeMarks: (this._private__pane._internal_model()._internal_timeScale()._internal_marks() || []).map((tm) => {\n                    return { _internal_coord: tm.coord };\n                }),\n            };\n            this._private__renderer._internal_setData(data);\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n}\n\nclass Grid {\n    constructor(pane) {\n        this._private__paneView = new GridPaneView(pane);\n    }\n    _internal_paneView() {\n        return this._private__paneView;\n    }\n}\n\nconst defLogFormula = {\n    _internal_logicalOffset: 4,\n    _internal_coordOffset: 0.0001,\n};\nfunction fromPercent(value, baseValue) {\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toPercentRange(priceRange, baseValue) {\n    const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n    value -= 100;\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue + 100;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n    const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n    const m = Math.abs(price);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n    return ((price < 0) ? -res : res);\n}\nfunction fromLog(logical, logFormula) {\n    const m = Math.abs(logical);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n    return (logical < 0) ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = toLog(priceRange._internal_minValue(), logFormula);\n    const max = toLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return false;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n    if (range === null) {\n        return defLogFormula;\n    }\n    const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n    if (diff >= 1 || diff < 1e-15) {\n        return defLogFormula;\n    }\n    const digits = Math.ceil(Math.abs(Math.log10(diff)));\n    const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n    const coordOffset = 1 / Math.pow(10, logicalOffset);\n    return {\n        _internal_logicalOffset: logicalOffset,\n        _internal_coordOffset: coordOffset,\n    };\n}\nfunction logFormulasAreSame(f1, f2) {\n    return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\n\nclass PriceTickSpanCalculator {\n    constructor(base, integralDividers) {\n        this._private__base = base;\n        this._private__integralDividers = integralDividers;\n        if (isBaseDecimal(this._private__base)) {\n            this._private__fractionalDividers = [2, 2.5, 2];\n        }\n        else {\n            this._private__fractionalDividers = [];\n            for (let baseRest = this._private__base; baseRest !== 1;) {\n                if ((baseRest % 2) === 0) {\n                    this._private__fractionalDividers.push(2);\n                    baseRest /= 2;\n                }\n                else if ((baseRest % 5) === 0) {\n                    this._private__fractionalDividers.push(2, 2.5);\n                    baseRest /= 5;\n                }\n                else {\n                    throw new Error('unexpected base');\n                }\n                if (this._private__fractionalDividers.length > 100) {\n                    throw new Error('something wrong with base');\n                }\n            }\n        }\n    }\n    _internal_tickSpan(high, low, maxTickSpan) {\n        const minMovement = (this._private__base === 0) ? (0) : (1 / this._private__base);\n        let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(Math.log10(high - low))));\n        let index = 0;\n        let c = this._private__integralDividers[0];\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            // the second part is actual for small with very small values like 1e-10\n            // greaterOrEqual fails for such values\n            const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n            const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n            if (!haveToContinue) {\n                break;\n            }\n            resultTickSpan /= c;\n            c = this._private__integralDividers[++index % this._private__integralDividers.length];\n        }\n        if (resultTickSpan <= (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n            resultTickSpan = minMovement;\n        }\n        resultTickSpan = Math.max(1, resultTickSpan);\n        if ((this._private__fractionalDividers.length > 0) && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n            index = 0;\n            c = this._private__fractionalDividers[0];\n            while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n                resultTickSpan /= c;\n                c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n            }\n        }\n        return resultTickSpan;\n    }\n}\n\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n    constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n        this._private__marks = [];\n        this._private__priceScale = priceScale;\n        this._private__base = base;\n        this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n        this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n    }\n    _internal_tickSpan(high, low) {\n        if (high < low) {\n            throw new Error('high < low');\n        }\n        const scaleHeight = this._private__priceScale._internal_height();\n        const markHeight = this._private__tickMarkHeight();\n        const maxTickSpan = (high - low) * markHeight / scaleHeight;\n        const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n        const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n        const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n        const spans = [];\n        spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n        return min(spans);\n    }\n    _internal_rebuildTickMarks() {\n        const priceScale = this._private__priceScale;\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue === null) {\n            this._private__marks = [];\n            return;\n        }\n        const scaleHeight = priceScale._internal_height();\n        const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n        const top = this._private__coordinateToLogicalFunc(0, firstValue);\n        const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n        const minCoord = extraTopBottomMargin;\n        const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n        const high = Math.max(bottom, top);\n        const low = Math.min(bottom, top);\n        if (high === low) {\n            this._private__marks = [];\n            return;\n        }\n        let span = this._internal_tickSpan(high, low);\n        let mod = high % span;\n        mod += mod < 0 ? span : 0;\n        const sign = (high >= low) ? 1 : -1;\n        let prevCoord = null;\n        let targetIndex = 0;\n        for (let logical = high - mod; logical > low; logical -= span) {\n            const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n            // check if there is place for it\n            // this is required for log scale\n            if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n                continue;\n            }\n            // check if a tick mark is partially visible and skip it if entireTextOnly is true\n            if (coord < minCoord || coord > maxCoord) {\n                continue;\n            }\n            if (targetIndex < this._private__marks.length) {\n                this._private__marks[targetIndex]._internal_coord = coord;\n                this._private__marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n            }\n            else {\n                this._private__marks.push({\n                    _internal_coord: coord,\n                    _internal_label: priceScale._internal_formatLogical(logical),\n                });\n            }\n            targetIndex++;\n            prevCoord = coord;\n            if (priceScale._internal_isLog()) {\n                // recalc span\n                span = this._internal_tickSpan(logical * sign, low);\n            }\n        }\n        this._private__marks.length = targetIndex;\n    }\n    _internal_marks() {\n        return this._private__marks;\n    }\n    _private__fontHeight() {\n        return this._private__priceScale._internal_fontSize();\n    }\n    _private__tickMarkHeight() {\n        return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n    }\n}\n\nfunction sortSources(sources) {\n    return sources.slice().sort((s1, s2) => {\n        return (ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder()));\n    });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n    /**\n     * Price scale shows prices. Price range changes linearly.\n     */\n    PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Price scale shows prices. Price range changes logarithmically.\n     */\n    PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n    /**\n     * Price scale shows percentage values according the first visible value of the price scale.\n     * The first visible value is 0% in this mode.\n     */\n    PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n    /**\n     * The same as percentage mode, but the first value is moved to 100.\n     */\n    PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n    constructor(id, options, layoutOptions, localizationOptions) {\n        this._private__height = 0;\n        this._private__internalHeightCache = null;\n        this._private__priceRange = null;\n        this._private__priceRangeSnapshot = null;\n        this._private__invalidatedForRange = { _internal_isValid: false, _internal_visibleBars: null };\n        this._private__marginAbove = 0;\n        this._private__marginBelow = 0;\n        this._private__onMarksChanged = new Delegate();\n        this._private__modeChanged = new Delegate();\n        this._private__dataSources = [];\n        this._private__cachedOrderedSources = null;\n        this._private__marksCache = null;\n        this._private__scaleStartPoint = null;\n        this._private__scrollStartPoint = null;\n        this._private__formatter = defaultPriceFormatter;\n        this._private__logFormula = logFormulaForPriceRange(null);\n        this._private__id = id;\n        this._private__options = options;\n        this._private__layoutOptions = layoutOptions;\n        this._private__localizationOptions = localizationOptions;\n        this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    }\n    _internal_id() {\n        return this._private__id;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_updateFormatter();\n        if (options.mode !== undefined) {\n            this._internal_setMode({ _internal_mode: options.mode });\n        }\n        if (options.scaleMargins !== undefined) {\n            const top = ensureDefined(options.scaleMargins.top);\n            const bottom = ensureDefined(options.scaleMargins.bottom);\n            if (top < 0 || top > 1) {\n                throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n            }\n            if (bottom < 0 || bottom > 1) {\n                throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n            }\n            if (top + bottom > 1) {\n                throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n            }\n            this._private__invalidateInternalHeightCache();\n            this._private__marksCache = null;\n        }\n    }\n    _internal_isAutoScale() {\n        return this._private__options.autoScale;\n    }\n    _internal_isLog() {\n        return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n    }\n    _internal_isPercentage() {\n        return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n    }\n    _internal_isIndexedTo100() {\n        return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n    }\n    _internal_mode() {\n        return {\n            _internal_autoScale: this._private__options.autoScale,\n            _internal_isInverted: this._private__options.invertScale,\n            _internal_mode: this._private__options.mode,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _internal_setMode(newMode) {\n        const oldMode = this._internal_mode();\n        let priceRange = null;\n        if (newMode._internal_autoScale !== undefined) {\n            this._private__options.autoScale = newMode._internal_autoScale;\n        }\n        if (newMode._internal_mode !== undefined) {\n            this._private__options.mode = newMode._internal_mode;\n            if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n                this._private__options.autoScale = true;\n            }\n            // TODO: Remove after making rebuildTickMarks lazy\n            this._private__invalidatedForRange._internal_isValid = false;\n        }\n        // define which scale converted from\n        if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n                priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n                if (priceRange !== null) {\n                    this._internal_setPriceRange(priceRange);\n                }\n            }\n            else {\n                this._private__options.autoScale = true;\n            }\n        }\n        // define which scale converted to\n        if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n            if (priceRange !== null) {\n                this._internal_setPriceRange(priceRange);\n            }\n        }\n        const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n        if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n            this._internal_updateFormatter();\n        }\n        if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n            this._internal_updateFormatter();\n        }\n        if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n            this._private__options.invertScale = newMode._internal_isInverted;\n            this._private__onIsInvertedChanged();\n        }\n        this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n    }\n    _internal_modeChanged() {\n        return this._private__modeChanged;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setHeight(value) {\n        if (this._private__height === value) {\n            return;\n        }\n        this._private__height = value;\n        this._private__invalidateInternalHeightCache();\n        this._private__marksCache = null;\n    }\n    _internal_internalHeight() {\n        if (this._private__internalHeightCache) {\n            return this._private__internalHeightCache;\n        }\n        const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n        this._private__internalHeightCache = res;\n        return res;\n    }\n    _internal_priceRange() {\n        this._private__makeSureItIsValid();\n        return this._private__priceRange;\n    }\n    _internal_setPriceRange(newPriceRange, isForceSetValue) {\n        const oldPriceRange = this._private__priceRange;\n        if (!isForceSetValue &&\n            !(oldPriceRange === null && newPriceRange !== null) &&\n            (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n            return;\n        }\n        this._private__marksCache = null;\n        this._private__priceRange = newPriceRange;\n    }\n    _internal_isEmpty() {\n        this._private__makeSureItIsValid();\n        return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n    }\n    _internal_invertedCoordinate(coordinate) {\n        return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n    }\n    _internal_priceToCoordinate(price, baseValue) {\n        if (this._internal_isPercentage()) {\n            price = toPercent(price, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            price = toIndexedTo100(price, baseValue);\n        }\n        return this._private__logicalToCoordinate(price, baseValue);\n    }\n    _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? points.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const point = points[i];\n            const price = point._internal_price;\n            if (isNaN(price)) {\n                continue;\n            }\n            let logical = price;\n            if (transformFn !== null) {\n                logical = transformFn(point._internal_price, baseValue);\n            }\n            const invCoordinate = bh + hmm * (logical - min);\n            const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            point._internal_y = coordinate;\n        }\n    }\n    _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? pricesList.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const bar = pricesList[i];\n            let openLogical = bar._internal_open;\n            let highLogical = bar._internal_high;\n            let lowLogical = bar._internal_low;\n            let closeLogical = bar._internal_close;\n            if (transformFn !== null) {\n                openLogical = transformFn(bar._internal_open, baseValue);\n                highLogical = transformFn(bar._internal_high, baseValue);\n                lowLogical = transformFn(bar._internal_low, baseValue);\n                closeLogical = transformFn(bar._internal_close, baseValue);\n            }\n            let invCoordinate = bh + hmm * (openLogical - min);\n            let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_openY = coordinate;\n            invCoordinate = bh + hmm * (highLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_highY = coordinate;\n            invCoordinate = bh + hmm * (lowLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_lowY = coordinate;\n            invCoordinate = bh + hmm * (closeLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_closeY = coordinate;\n        }\n    }\n    _internal_coordinateToPrice(coordinate, baseValue) {\n        const logical = this._private__coordinateToLogical(coordinate, baseValue);\n        return this._internal_logicalToPrice(logical, baseValue);\n    }\n    _internal_logicalToPrice(logical, baseValue) {\n        let value = logical;\n        if (this._internal_isPercentage()) {\n            value = fromPercent(value, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            value = fromIndexedTo100(value, baseValue);\n        }\n        return value;\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources) {\n            return this._private__cachedOrderedSources;\n        }\n        let sources = [];\n        for (let i = 0; i < this._private__dataSources.length; i++) {\n            const ds = this._private__dataSources[i];\n            if (ds._internal_zorder() === null) {\n                ds._internal_setZorder(i + 1);\n            }\n            sources.push(ds);\n        }\n        sources = sortSources(sources);\n        this._private__cachedOrderedSources = sources;\n        return this._private__cachedOrderedSources;\n    }\n    _internal_addDataSource(source) {\n        if (this._private__dataSources.indexOf(source) !== -1) {\n            return;\n        }\n        this._private__dataSources.push(source);\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        if (index === -1) {\n            throw new Error('source is not attached to scale');\n        }\n        this._private__dataSources.splice(index, 1);\n        if (this._private__dataSources.length === 0) {\n            this._internal_setMode({\n                _internal_autoScale: true,\n            });\n            // if no sources on price scale let's clear price range cache as well as enabling auto scale\n            this._internal_setPriceRange(null);\n        }\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_firstValue() {\n        // TODO: cache the result\n        let result = null;\n        for (const source of this._private__dataSources) {\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n                result = firstValue;\n            }\n        }\n        return result === null ? null : result._internal_value;\n    }\n    _internal_isInverted() {\n        return this._private__options.invertScale;\n    }\n    _internal_marks() {\n        const firstValueIsNull = this._internal_firstValue() === null;\n        // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n        // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n        // we could display an empty price scale, but this is not good from UX\n        // so in this case we need to keep an previous marks to display them on the scale\n        // as one of possible examples for this situation could be the following:\n        // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n        // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n        if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n            return this._private__marksCache._internal_marks;\n        }\n        this._private__markBuilder._internal_rebuildTickMarks();\n        const marks = this._private__markBuilder._internal_marks();\n        this._private__marksCache = { _internal_marks: marks, _internal_firstValueIsNull: firstValueIsNull };\n        this._private__onMarksChanged._internal_fire();\n        return marks;\n    }\n    _internal_onMarksChanged() {\n        return this._private__onMarksChanged;\n    }\n    _internal_startScale(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        // invert x\n        this._private__scaleStartPoint = this._private__height - x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scaleTo(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._internal_setMode({\n            _internal_autoScale: false,\n        });\n        // invert x\n        x = this._private__height - x;\n        if (x < 0) {\n            x = 0;\n        }\n        let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        scaleCoeff = Math.max(scaleCoeff, 0.1);\n        newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n        this._internal_setPriceRange(newPriceRange);\n    }\n    _internal_endScale() {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_startScroll(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scrollTo(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n        let pixelDelta = x - this._private__scrollStartPoint;\n        if (this._internal_isInverted()) {\n            pixelDelta *= -1;\n        }\n        const priceDelta = pixelDelta * priceUnitsPerPixel;\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        newPriceRange._internal_shift(priceDelta);\n        this._internal_setPriceRange(newPriceRange, true);\n        this._private__marksCache = null;\n    }\n    _internal_endScroll() {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_formatter() {\n        if (!this._private__formatter) {\n            this._internal_updateFormatter();\n        }\n        return this._private__formatter;\n    }\n    _internal_formatPrice(price, firstValue) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(toPercent(price, firstValue));\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n            default:\n                return this._private__formatPrice(price);\n        }\n    }\n    _internal_formatLogical(logical) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(logical);\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(logical);\n            default:\n                return this._private__formatPrice(logical);\n        }\n    }\n    _internal_formatPriceAbsolute(price) {\n        return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource())._internal_formatter());\n    }\n    _internal_formatPricePercentage(price, baseValue) {\n        price = toPercent(price, baseValue);\n        return this._private__formatPercentage(price, percentageFormatter);\n    }\n    _internal_sourcesForAutoScale() {\n        return this._private__dataSources;\n    }\n    _internal_recalculatePriceRange(visibleBars) {\n        this._private__invalidatedForRange = {\n            _internal_visibleBars: visibleBars,\n            _internal_isValid: false,\n        };\n    }\n    _internal_updateAllViews() {\n        this._private__dataSources.forEach((s) => s._internal_updateAllViews());\n    }\n    _internal_updateFormatter() {\n        this._private__marksCache = null;\n        const formatterSource = this._private__formatterSource();\n        let base = 100;\n        if (formatterSource !== null) {\n            base = Math.round(1 / formatterSource._internal_minMove());\n        }\n        this._private__formatter = defaultPriceFormatter;\n        if (this._internal_isPercentage()) {\n            this._private__formatter = percentageFormatter;\n            base = 100;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            this._private__formatter = new PriceFormatter(100, 1);\n            base = 100;\n        }\n        else {\n            if (formatterSource !== null) {\n                // user\n                this._private__formatter = formatterSource._internal_formatter();\n            }\n        }\n        this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    _internal_invalidateSourcesCache() {\n        this._private__cachedOrderedSources = null;\n    }\n    /**\n     * @returns The {@link IPriceDataSource} that will be used as the \"formatter source\" (take minMove for formatter).\n     */\n    _private__formatterSource() {\n        return this._private__dataSources[0] || null;\n    }\n    _private__topMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow\n            : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n    }\n    _private__bottomMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove\n            : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n    }\n    _private__makeSureItIsValid() {\n        if (!this._private__invalidatedForRange._internal_isValid) {\n            this._private__invalidatedForRange._internal_isValid = true;\n            this._private__recalculatePriceRangeImpl();\n        }\n    }\n    _private__invalidateInternalHeightCache() {\n        this._private__internalHeightCache = null;\n    }\n    _private__logicalToCoordinate(logical, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n        const range = ensureNotNull(this._internal_priceRange());\n        const invCoordinate = this._private__bottomMarginPx() +\n            (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n        const coordinate = this._internal_invertedCoordinate(invCoordinate);\n        return coordinate;\n    }\n    _private__coordinateToLogical(coordinate, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        const invCoordinate = this._internal_invertedCoordinate(coordinate);\n        const range = ensureNotNull(this._internal_priceRange());\n        const logical = range._internal_minValue() + range._internal_length() *\n            ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n        return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n    }\n    _private__onIsInvertedChanged() {\n        this._private__marksCache = null;\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    // eslint-disable-next-line complexity\n    _private__recalculatePriceRangeImpl() {\n        const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n        if (visibleBars === null) {\n            return;\n        }\n        let priceRange = null;\n        const sources = this._internal_sourcesForAutoScale();\n        let marginAbove = 0;\n        let marginBelow = 0;\n        for (const source of sources) {\n            if (!source._internal_visible()) {\n                continue;\n            }\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n            let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n            if (sourceRange !== null) {\n                switch (this._private__options.mode) {\n                    case 1 /* PriceScaleMode.Logarithmic */:\n                        sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n                        break;\n                    case 2 /* PriceScaleMode.Percentage */:\n                        sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n                        break;\n                    case 3 /* PriceScaleMode.IndexedTo100 */:\n                        sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n                        break;\n                }\n                if (priceRange === null) {\n                    priceRange = sourceRange;\n                }\n                else {\n                    priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n                }\n                if (autoScaleInfo !== null) {\n                    const margins = autoScaleInfo._internal_margins();\n                    if (margins !== null) {\n                        marginAbove = Math.max(marginAbove, margins.above);\n                        marginBelow = Math.max(marginAbove, margins.below);\n                    }\n                }\n            }\n        }\n        if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n            this._private__marginAbove = marginAbove;\n            this._private__marginBelow = marginBelow;\n            this._private__marksCache = null;\n            this._private__invalidateInternalHeightCache();\n        }\n        if (priceRange !== null) {\n            // keep current range is new is empty\n            if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n                const formatterSource = this._private__formatterSource();\n                const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n                // if price range is degenerated to 1 point let's extend it by 10 min move values\n                // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n                const extendValue = 5 * minMove;\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                }\n                priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n                }\n            }\n            if (this._internal_isLog()) {\n                const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                const newLogFormula = logFormulaForPriceRange(rawRange);\n                if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n                    const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n                    this._private__logFormula = newLogFormula;\n                    priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n                    if (rawSnapshot !== null) {\n                        this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n                    }\n                }\n            }\n            this._internal_setPriceRange(priceRange);\n        }\n        else {\n            // reset empty to default\n            if (this._private__priceRange === null) {\n                this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n                this._private__logFormula = logFormulaForPriceRange(null);\n            }\n        }\n        this._private__invalidatedForRange._internal_isValid = true;\n    }\n    _private__getCoordinateTransformer() {\n        if (this._internal_isPercentage()) {\n            return toPercent;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            return toIndexedTo100;\n        }\n        else if (this._internal_isLog()) {\n            return (price) => toLog(price, this._private__logFormula);\n        }\n        return null;\n    }\n    _private__formatValue(value, formatter, fallbackFormatter) {\n        if (formatter === undefined) {\n            if (fallbackFormatter === undefined) {\n                fallbackFormatter = this._internal_formatter();\n            }\n            return fallbackFormatter.format(value);\n        }\n        return formatter(value);\n    }\n    _private__formatPrice(price, fallbackFormatter) {\n        return this._private__formatValue(price, this._private__localizationOptions.priceFormatter, fallbackFormatter);\n    }\n    _private__formatPercentage(percentage, fallbackFormatter) {\n        return this._private__formatValue(percentage, this._private__localizationOptions.percentageFormatter, fallbackFormatter);\n    }\n}\n\nconst DEFAULT_STRETCH_FACTOR = 1000;\nclass Pane {\n    constructor(timeScale, model) {\n        this._private__dataSources = [];\n        this._private__overlaySourcesByScaleId = new Map();\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n        this._private__cachedOrderedSources = null;\n        this._private__destroyed = new Delegate();\n        this._private__timeScale = timeScale;\n        this._private__model = model;\n        this._private__grid = new Grid(this);\n        const options = model._internal_options();\n        this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n        this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n        this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n        this._internal_applyScaleOptions(options);\n    }\n    _internal_applyScaleOptions(options) {\n        if (options.leftPriceScale) {\n            this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n        }\n        if (options.rightPriceScale) {\n            this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n        }\n        if (options.localization) {\n            this._private__leftPriceScale._internal_updateFormatter();\n            this._private__rightPriceScale._internal_updateFormatter();\n        }\n        if (options.overlayPriceScales) {\n            const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n            for (const arr of sourceArrays) {\n                const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n                priceScale._internal_applyOptions(options.overlayPriceScales);\n                if (options.localization) {\n                    priceScale._internal_updateFormatter();\n                }\n            }\n        }\n    }\n    _internal_priceScaleById(id) {\n        switch (id) {\n            case \"left\" /* DefaultPriceScaleId.Left */: {\n                return this._private__leftPriceScale;\n            }\n            case \"right\" /* DefaultPriceScaleId.Right */: {\n                return this._private__rightPriceScale;\n            }\n        }\n        if (this._private__overlaySourcesByScaleId.has(id)) {\n            return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n        }\n        return null;\n    }\n    _internal_destroy() {\n        this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__dataSources.forEach((source) => {\n            if (source._internal_destroy) {\n                source._internal_destroy();\n            }\n        });\n        this._private__destroyed._internal_fire();\n    }\n    _internal_stretchFactor() {\n        return this._private__stretchFactor;\n    }\n    _internal_setStretchFactor(factor) {\n        this._private__stretchFactor = factor;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._internal_updateAllSources();\n    }\n    _internal_setHeight(height) {\n        this._private__height = height;\n        this._private__leftPriceScale._internal_setHeight(height);\n        this._private__rightPriceScale._internal_setHeight(height);\n        // process overlays\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                const priceScale = ds._internal_priceScale();\n                if (priceScale !== null) {\n                    priceScale._internal_setHeight(height);\n                }\n            }\n        });\n        this._internal_updateAllSources();\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_isOverlay(source) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale === null) {\n            return true;\n        }\n        return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n    }\n    _internal_addDataSource(source, targetScaleId, zOrder) {\n        const targetZOrder = (zOrder !== undefined) ? zOrder : this._private__getZOrderMinMax()._internal_maxZOrder + 1;\n        this._private__insertDataSource(source, targetScaleId, targetZOrder);\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        assert(index !== -1, 'removeDataSource: invalid data source');\n        this._private__dataSources.splice(index, 1);\n        const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n        if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n            const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n            const overlayIndex = overlaySources.indexOf(source);\n            if (overlayIndex !== -1) {\n                overlaySources.splice(overlayIndex, 1);\n                if (overlaySources.length === 0) {\n                    this._private__overlaySourcesByScaleId.delete(priceScaleId);\n                }\n            }\n        }\n        const priceScale = source._internal_priceScale();\n        // if source has owner, it returns owner's price scale\n        // and it does not have source in their list\n        if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n            priceScale._internal_removeDataSource(source);\n        }\n        if (priceScale !== null) {\n            priceScale._internal_invalidateSourcesCache();\n            this._internal_recalculatePriceScale(priceScale);\n        }\n        this._private__cachedOrderedSources = null;\n    }\n    _internal_priceScalePosition(priceScale) {\n        if (priceScale === this._private__leftPriceScale) {\n            return 'left';\n        }\n        if (priceScale === this._private__rightPriceScale) {\n            return 'right';\n        }\n        return 'overlay';\n    }\n    _internal_leftPriceScale() {\n        return this._private__leftPriceScale;\n    }\n    _internal_rightPriceScale() {\n        return this._private__rightPriceScale;\n    }\n    _internal_startScalePrice(priceScale, x) {\n        priceScale._internal_startScale(x);\n    }\n    _internal_scalePriceTo(priceScale, x) {\n        priceScale._internal_scaleTo(x);\n        // TODO: be more smart and update only affected views\n        this._internal_updateAllSources();\n    }\n    _internal_endScalePrice(priceScale) {\n        priceScale._internal_endScale();\n    }\n    _internal_startScrollPrice(priceScale, x) {\n        priceScale._internal_startScroll(x);\n    }\n    _internal_scrollPriceTo(priceScale, x) {\n        priceScale._internal_scrollTo(x);\n        this._internal_updateAllSources();\n    }\n    _internal_endScrollPrice(priceScale) {\n        priceScale._internal_endScroll();\n    }\n    _internal_updateAllSources() {\n        this._private__dataSources.forEach((source) => {\n            source._internal_updateAllViews();\n        });\n    }\n    _internal_defaultPriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__leftPriceScale;\n        }\n        else if (this._private__dataSources.length !== 0) {\n            priceScale = this._private__dataSources[0]._internal_priceScale();\n        }\n        if (priceScale === null) {\n            priceScale = this._private__rightPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_defaultVisiblePriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible) {\n            priceScale = this._private__leftPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_recalculatePriceScale(priceScale) {\n        if (priceScale === null || !priceScale._internal_isAutoScale()) {\n            return;\n        }\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _internal_resetPriceScale(priceScale) {\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        priceScale._internal_setMode({ _internal_autoScale: true });\n        if (visibleBars !== null) {\n            priceScale._internal_recalculatePriceRange(visibleBars);\n        }\n        this._internal_updateAllSources();\n    }\n    _internal_momentaryAutoScale() {\n        this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n        this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n    }\n    _internal_recalculate() {\n        this._internal_recalculatePriceScale(this._private__leftPriceScale);\n        this._internal_recalculatePriceScale(this._private__rightPriceScale);\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                this._internal_recalculatePriceScale(ds._internal_priceScale());\n            }\n        });\n        this._internal_updateAllSources();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources === null) {\n            this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n        }\n        return this._private__cachedOrderedSources;\n    }\n    _internal_onDestroyed() {\n        return this._private__destroyed;\n    }\n    _internal_grid() {\n        return this._private__grid;\n    }\n    _private__recalculatePriceScaleImpl(priceScale) {\n        // TODO: can use this checks\n        const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n        if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n            const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n            if (visibleBars !== null) {\n                priceScale._internal_recalculatePriceRange(visibleBars);\n            }\n        }\n        priceScale._internal_updateAllViews();\n    }\n    _private__getZOrderMinMax() {\n        const sources = this._internal_orderedSources();\n        if (sources.length === 0) {\n            return { _internal_minZOrder: 0, _internal_maxZOrder: 0 };\n        }\n        let minZOrder = 0;\n        let maxZOrder = 0;\n        for (let j = 0; j < sources.length; j++) {\n            const ds = sources[j];\n            const zOrder = ds._internal_zorder();\n            if (zOrder !== null) {\n                if (zOrder < minZOrder) {\n                    minZOrder = zOrder;\n                }\n                if (zOrder > maxZOrder) {\n                    maxZOrder = zOrder;\n                }\n            }\n        }\n        return { _internal_minZOrder: minZOrder, _internal_maxZOrder: maxZOrder };\n    }\n    _private__insertDataSource(source, priceScaleId, zOrder) {\n        let priceScale = this._internal_priceScaleById(priceScaleId);\n        if (priceScale === null) {\n            priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n        }\n        this._private__dataSources.push(source);\n        if (!isDefaultPriceScale(priceScaleId)) {\n            const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n            overlaySources.push(source);\n            this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n        }\n        priceScale._internal_addDataSource(source);\n        source._internal_setPriceScale(priceScale);\n        source._internal_setZorder(zOrder);\n        this._internal_recalculatePriceScale(priceScale);\n        this._private__cachedOrderedSources = null;\n    }\n    _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n        if (oldMode._internal_mode === newMode._internal_mode) {\n            return;\n        }\n        // momentary auto scale if we toggle percentage/indexedTo100 mode\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _private__createPriceScale(id, options) {\n        const actualOptions = Object.assign({ visible: true, autoScale: true }, clone(options));\n        const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options().layout, this._private__model._internal_options().localization);\n        priceScale._internal_setHeight(this._internal_height());\n        return priceScale;\n    }\n}\n\nclass FormattedLabelsCache {\n    constructor(format, horzScaleBehavior, size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__cache = new Map();\n        this._private__tick2Labels = new Map();\n        this._private__format = format;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__maxSize = size;\n    }\n    _internal_format(tickMark) {\n        const time = tickMark.time;\n        const cacheKey = this._private__horzScaleBehavior.cacheKey(time);\n        const tick = this._private__cache.get(cacheKey);\n        if (tick !== undefined) {\n            return tick._internal_string;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n            this._private__tick2Labels.delete(this._private__oldestTick);\n            this._private__cache.delete(ensureDefined(oldestValue));\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        const str = this._private__format(tickMark);\n        this._private__cache.set(cacheKey, { _internal_string: str, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return str;\n    }\n}\n\nclass RangeImpl {\n    constructor(left, right) {\n        assert(left <= right, 'right should be >= left');\n        this._private__left = left;\n        this._private__right = right;\n    }\n    _internal_left() {\n        return this._private__left;\n    }\n    _internal_right() {\n        return this._private__right;\n    }\n    _internal_count() {\n        return this._private__right - this._private__left + 1;\n    }\n    _internal_contains(index) {\n        return this._private__left <= index && index <= this._private__right;\n    }\n    _internal_equals(other) {\n        return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n    }\n}\nfunction areRangesEqual(first, second) {\n    if (first === null || second === null) {\n        return first === second;\n    }\n    return first._internal_equals(second);\n}\n\nclass TickMarks {\n    constructor() {\n        this._private__marksByWeight = new Map();\n        this._private__cache = null;\n        this._private__uniformDistribution = false;\n    }\n    _internal_setUniformDistribution(val) {\n        this._private__uniformDistribution = val;\n        this._private__cache = null;\n    }\n    _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n        this._private__removeMarksSinceIndex(firstChangedPointIndex);\n        this._private__cache = null;\n        for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n            const point = newPoints[index];\n            let marksForWeight = this._private__marksByWeight.get(point.timeWeight);\n            if (marksForWeight === undefined) {\n                marksForWeight = [];\n                this._private__marksByWeight.set(point.timeWeight, marksForWeight);\n            }\n            marksForWeight.push({\n                index: index,\n                time: point.time,\n                weight: point.timeWeight,\n                originalTime: point.originalTime,\n            });\n        }\n    }\n    _internal_build(spacing, maxWidth) {\n        const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n        if (this._private__cache === null || this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark) {\n            this._private__cache = {\n                _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark),\n                _internal_maxIndexesPerMark: maxIndexesPerMark,\n            };\n        }\n        return this._private__cache._internal_marks;\n    }\n    _private__removeMarksSinceIndex(sinceIndex) {\n        if (sinceIndex === 0) {\n            this._private__marksByWeight.clear();\n            return;\n        }\n        const weightsToClear = [];\n        this._private__marksByWeight.forEach((marks, timeWeight) => {\n            if (sinceIndex <= marks[0].index) {\n                weightsToClear.push(timeWeight);\n            }\n            else {\n                marks.splice(lowerBound(marks, sinceIndex, (tm) => tm.index < sinceIndex), Infinity);\n            }\n        });\n        for (const weight of weightsToClear) {\n            this._private__marksByWeight.delete(weight);\n        }\n    }\n    _private__buildMarksImpl(maxIndexesPerMark) {\n        let marks = [];\n        for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n            if (!this._private__marksByWeight.get(weight)) {\n                continue;\n            }\n            // Built tickMarks are now prevMarks, and marks it as new array\n            const prevMarks = marks;\n            marks = [];\n            const prevMarksLength = prevMarks.length;\n            let prevMarksPointer = 0;\n            const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n            const currentWeightLength = currentWeight.length;\n            let rightIndex = Infinity;\n            let leftIndex = -Infinity;\n            for (let i = 0; i < currentWeightLength; i++) {\n                const mark = currentWeight[i];\n                const currentIndex = mark.index;\n                // Determine indexes with which current index will be compared\n                // All marks to the right is moved to new array\n                while (prevMarksPointer < prevMarksLength) {\n                    const lastMark = prevMarks[prevMarksPointer];\n                    const lastIndex = lastMark.index;\n                    if (lastIndex < currentIndex) {\n                        prevMarksPointer++;\n                        marks.push(lastMark);\n                        leftIndex = lastIndex;\n                        rightIndex = Infinity;\n                    }\n                    else {\n                        rightIndex = lastIndex;\n                        break;\n                    }\n                }\n                if (rightIndex - currentIndex >= maxIndexesPerMark && currentIndex - leftIndex >= maxIndexesPerMark) {\n                    // TickMark fits. Place it into new array\n                    marks.push(mark);\n                    leftIndex = currentIndex;\n                }\n                else {\n                    if (this._private__uniformDistribution) {\n                        return prevMarks;\n                    }\n                }\n            }\n            // Place all unused tickMarks into new array;\n            for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n                marks.push(prevMarks[prevMarksPointer]);\n            }\n        }\n        return marks;\n    }\n}\n\nclass TimeScaleVisibleRange {\n    constructor(logicalRange) {\n        this._private__logicalRange = logicalRange;\n    }\n    _internal_strictRange() {\n        if (this._private__logicalRange === null) {\n            return null;\n        }\n        return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n    }\n    _internal_logicalRange() {\n        return this._private__logicalRange;\n    }\n    static _internal_invalid() {\n        return new TimeScaleVisibleRange(null);\n    }\n}\n\nconst defaultTickMarkMaxCharacterLength = 8;\nfunction markWithGreaterWeight(a, b) {\n    return a.weight > b.weight ? a : b;\n}\nclass TimeScale {\n    constructor(model, options, localizationOptions, horzScaleBehavior) {\n        this._private__width = 0;\n        this._private__baseIndexOrNull = null;\n        this._private__points = [];\n        this._private__scrollStartPoint = null;\n        this._private__scaleStartPoint = null;\n        this._private__tickMarks = new TickMarks();\n        this._private__formattedByWeight = new Map();\n        this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n        this._private__visibleRangeInvalidated = true;\n        this._private__visibleBarsChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__optionsApplied = new Delegate();\n        this._private__commonTransitionStartState = null;\n        this._private__timeMarksCache = null;\n        this._private__labels = [];\n        this._private__options = options;\n        this._private__localizationOptions = localizationOptions;\n        this._private__rightOffset = options.rightOffset;\n        this._private__barSpacing = options.barSpacing;\n        this._private__model = model;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__updateDateTimeFormatter();\n        this._private__tickMarks._internal_setUniformDistribution(options.uniformDistribution);\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyLocalizationOptions(localizationOptions) {\n        merge(this._private__localizationOptions, localizationOptions);\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n    }\n    _internal_applyOptions(options, localizationOptions) {\n        var _a;\n        merge(this._private__options, options);\n        if (this._private__options.fixLeftEdge) {\n            this._private__doFixLeftEdge();\n        }\n        if (this._private__options.fixRightEdge) {\n            this._private__doFixRightEdge();\n        }\n        // note that bar spacing should be applied before right offset\n        // because right offset depends on bar spacing\n        if (options.barSpacing !== undefined) {\n            this._private__model._internal_setBarSpacing(options.barSpacing);\n        }\n        if (options.rightOffset !== undefined) {\n            this._private__model._internal_setRightOffset(options.rightOffset);\n        }\n        if (options.minBarSpacing !== undefined) {\n            // yes, if we apply min bar spacing then we need to correct bar spacing\n            // the easiest way is to apply it once again\n            this._private__model._internal_setBarSpacing((_a = options.barSpacing) !== null && _a !== void 0 ? _a : this._private__barSpacing);\n        }\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n        this._private__optionsApplied._internal_fire();\n    }\n    _internal_indexToTime(index) {\n        var _a, _b;\n        return (_b = (_a = this._private__points[index]) === null || _a === void 0 ? void 0 : _a.time) !== null && _b !== void 0 ? _b : null;\n    }\n    _internal_indexToTimeScalePoint(index) {\n        var _a;\n        return (_a = this._private__points[index]) !== null && _a !== void 0 ? _a : null;\n    }\n    _internal_timeToIndex(time, findNearest) {\n        if (this._private__points.length < 1) {\n            // no time points available\n            return null;\n        }\n        if (this._private__horzScaleBehavior.key(time) > this._private__horzScaleBehavior.key(this._private__points[this._private__points.length - 1].time)) {\n            // special case\n            return findNearest ? this._private__points.length - 1 : null;\n        }\n        const index = lowerBound(this._private__points, this._private__horzScaleBehavior.key(time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        if (this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(this._private__points[index].time)) {\n            return findNearest ? index : null;\n        }\n        return index;\n    }\n    _internal_isEmpty() {\n        return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n    }\n    _internal_hasPoints() {\n        return this._private__points.length > 0;\n    }\n    // strict range: integer indices of the bars in the visible range rounded in more wide direction\n    _internal_visibleStrictRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_strictRange();\n    }\n    _internal_visibleLogicalRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_logicalRange();\n    }\n    _internal_visibleTimeRange() {\n        const visibleBars = this._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const range = {\n            from: visibleBars._internal_left(),\n            to: visibleBars._internal_right(),\n        };\n        return this._internal_timeRangeForLogicalRange(range);\n    }\n    _internal_timeRangeForLogicalRange(range) {\n        const from = Math.round(range.from);\n        const to = Math.round(range.to);\n        const firstIndex = ensureNotNull(this._private__firstIndex());\n        const lastIndex = ensureNotNull(this._private__lastIndex());\n        return {\n            from: ensureNotNull(this._internal_indexToTimeScalePoint(Math.max(firstIndex, from))),\n            to: ensureNotNull(this._internal_indexToTimeScalePoint(Math.min(lastIndex, to))),\n        };\n    }\n    _internal_logicalRangeForTimeRange(range) {\n        return {\n            from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n            to: ensureNotNull(this._internal_timeToIndex(range.to, true)),\n        };\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_setWidth(newWidth) {\n        if (!isFinite(newWidth) || newWidth <= 0) {\n            return;\n        }\n        if (this._private__width === newWidth) {\n            return;\n        }\n        // when we change the width and we need to correct visible range because of fixing left edge\n        // we need to check the previous visible range rather than the new one\n        // because it might be updated by changing width, bar spacing, etc\n        // but we need to try to keep the same range\n        const previousVisibleRange = this._internal_visibleLogicalRange();\n        const oldWidth = this._private__width;\n        this._private__width = newWidth;\n        this._private__visibleRangeInvalidated = true;\n        if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n            // recalculate bar spacing\n            const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n            this._private__barSpacing = newBarSpacing;\n        }\n        // if time scale is scrolled to the end of data and we have fixed right edge\n        // keep left edge instead of right\n        // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n        if (this._private__options.fixLeftEdge) {\n            // note that logical left range means not the middle of a bar (it's the left border)\n            if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n                const delta = oldWidth - newWidth;\n                // reduce  _rightOffset means move right\n                // we could move more than required - this will be fixed by _correctOffset()\n                this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n        // updating bar spacing should be first because right offset depends on it\n        this._private__correctBarSpacing();\n        this._private__correctOffset();\n    }\n    _internal_indexToCoordinate(index) {\n        if (this._internal_isEmpty() || !isInteger(index)) {\n            return 0;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const deltaFromRight = baseIndex + this._private__rightOffset - index;\n        const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n        return coordinate;\n    }\n    _internal_indexesToCoordinates(points, visibleRange) {\n        const baseIndex = this._internal_baseIndex();\n        const indexFrom = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const indexTo = (visibleRange === undefined) ? points.length : visibleRange.to;\n        for (let i = indexFrom; i < indexTo; i++) {\n            const index = points[i]._internal_time;\n            const deltaFromRight = baseIndex + this._private__rightOffset - index;\n            const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n            points[i]._internal_x = coordinate;\n        }\n    }\n    _internal_coordinateToIndex(x) {\n        return Math.ceil(this._private__coordinateToFloatIndex(x));\n    }\n    _internal_setRightOffset(offset) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__rightOffset = offset;\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_barSpacing() {\n        return this._private__barSpacing;\n    }\n    _internal_setBarSpacing(newBarSpacing) {\n        this._private__setBarSpacing(newBarSpacing);\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_rightOffset() {\n        return this._private__rightOffset;\n    }\n    // eslint-disable-next-line complexity\n    _internal_marks() {\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        if (this._private__timeMarksCache !== null) {\n            return this._private__timeMarksCache;\n        }\n        const spacing = this._private__barSpacing;\n        const fontSize = this._private__model._internal_options().layout.fontSize;\n        const pixelsPer8Characters = (fontSize + 4) * 5;\n        const pixelsPerCharacter = pixelsPer8Characters / defaultTickMarkMaxCharacterLength;\n        const maxLabelWidth = pixelsPerCharacter * (this._private__options.tickMarkMaxCharacterLength || defaultTickMarkMaxCharacterLength);\n        const indexPerLabel = Math.round(maxLabelWidth / spacing);\n        const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n        const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n        const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n        const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth);\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n        const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n        const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n        const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n        const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n        const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n        let targetIndex = 0;\n        for (const tm of items) {\n            if (!(firstBar <= tm.index && tm.index <= lastBar)) {\n                continue;\n            }\n            let label;\n            if (targetIndex < this._private__labels.length) {\n                label = this._private__labels[targetIndex];\n                label.coord = this._internal_indexToCoordinate(tm.index);\n                label.label = this._private__formatLabel(tm);\n                label.weight = tm.weight;\n            }\n            else {\n                label = {\n                    needAlignCoordinate: false,\n                    coord: this._internal_indexToCoordinate(tm.index),\n                    label: this._private__formatLabel(tm),\n                    weight: tm.weight,\n                };\n                this._private__labels.push(label);\n            }\n            if (this._private__barSpacing > (maxLabelWidth / 2) && !isAllScalingAndScrollingDisabled) {\n                // if there is enough space then let's show all tick marks as usual\n                label.needAlignCoordinate = false;\n            }\n            else {\n                // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n                // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n                label.needAlignCoordinate = (isLeftEdgeFixed && tm.index <= earliestIndexOfSecondLabel) || (isRightEdgeFixed && tm.index >= indexOfSecondLastLabel);\n            }\n            targetIndex++;\n        }\n        this._private__labels.length = targetIndex;\n        this._private__timeMarksCache = this._private__labels;\n        return this._private__labels;\n    }\n    _internal_restoreDefault() {\n        this._private__visibleRangeInvalidated = true;\n        this._internal_setBarSpacing(this._private__options.barSpacing);\n        this._internal_setRightOffset(this._private__options.rightOffset);\n    }\n    _internal_setBaseIndex(baseIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__baseIndexOrNull = baseIndex;\n        this._private__correctOffset();\n        this._private__doFixLeftEdge();\n    }\n    /**\n     * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n     *\n     * @param zoomPoint - X coordinate of the point to apply the zoom.\n     * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n     * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n     * Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoom(zoomPoint, scale) {\n        const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n        const barSpacing = this._internal_barSpacing();\n        const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n        // zoom in/out bar spacing\n        this._internal_setBarSpacing(newBarSpacing);\n        if (!this._private__options.rightBarStaysOnScroll) {\n            // and then correct right offset to move index under zoomPoint back to its coordinate\n            this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n        }\n    }\n    _internal_startScale(x) {\n        if (this._private__scrollStartPoint) {\n            this._internal_endScroll();\n        }\n        if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scaleStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scaleTo(x) {\n        if (this._private__commonTransitionStartState === null) {\n            return;\n        }\n        const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n        const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n        if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n            return;\n        }\n        this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n    }\n    _internal_endScale() {\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_startScroll(x) {\n        if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scrollTo(x) {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n        this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n        this._private__visibleRangeInvalidated = true;\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n    }\n    _internal_endScroll() {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_scrollToRealTime() {\n        this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n    }\n    _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n        if (!isFinite(offset)) {\n            throw new RangeError('offset is required and must be finite number');\n        }\n        if (!isFinite(animationDuration) || animationDuration <= 0) {\n            throw new RangeError('animationDuration (optional) must be finite positive number');\n        }\n        const source = this._private__rightOffset;\n        const animationStart = performance.now();\n        this._private__model._internal_setTimeScaleAnimation({\n            _internal_finished: (time) => (time - animationStart) / animationDuration >= 1,\n            _internal_getPosition: (time) => {\n                const animationProgress = (time - animationStart) / animationDuration;\n                const finishAnimation = animationProgress >= 1;\n                return finishAnimation ? offset : source + (offset - source) * animationProgress;\n            },\n        });\n    }\n    _internal_update(newPoints, firstChangedPointIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__points = newPoints;\n        this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n        this._private__correctOffset();\n    }\n    _internal_visibleBarsChanged() {\n        return this._private__visibleBarsChanged;\n    }\n    _internal_logicalRangeChanged() {\n        return this._private__logicalRangeChanged;\n    }\n    _internal_optionsApplied() {\n        return this._private__optionsApplied;\n    }\n    _internal_baseIndex() {\n        // null is used to known that baseIndex is not set yet\n        // so in methods which should known whether it is set or not\n        // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n        // see minRightOffset for example\n        return this._private__baseIndexOrNull || 0;\n    }\n    _internal_setVisibleRange(range) {\n        const length = range._internal_count();\n        this._private__setBarSpacing(this._private__width / length);\n        this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n        this._private__correctOffset();\n        this._private__visibleRangeInvalidated = true;\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_fitContent() {\n        const first = this._private__firstIndex();\n        const last = this._private__lastIndex();\n        if (first === null || last === null) {\n            return;\n        }\n        this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n    }\n    _internal_setLogicalRange(range) {\n        const barRange = new RangeImpl(range.from, range.to);\n        this._internal_setVisibleRange(barRange);\n    }\n    _internal_formatDateTime(timeScalePoint) {\n        if (this._private__localizationOptions.timeFormatter !== undefined) {\n            return this._private__localizationOptions.timeFormatter(timeScalePoint.originalTime);\n        }\n        return this._private__horzScaleBehavior.formatHorzItem(timeScalePoint.time);\n    }\n    _private__isAllScalingAndScrollingDisabled() {\n        const { handleScroll, handleScale } = this._private__model._internal_options();\n        return !handleScroll.horzTouchDrag\n            && !handleScroll.mouseWheel\n            && !handleScroll.pressedMouseMove\n            && !handleScroll.vertTouchDrag\n            && !handleScale.axisDoubleClickReset.time\n            && !handleScale.axisPressedMouseMove.time\n            && !handleScale.mouseWheel\n            && !handleScale.pinch;\n    }\n    _private__firstIndex() {\n        return this._private__points.length === 0 ? null : 0;\n    }\n    _private__lastIndex() {\n        return this._private__points.length === 0 ? null : (this._private__points.length - 1);\n    }\n    _private__rightOffsetForCoordinate(x) {\n        return (this._private__width - 1 - x) / this._private__barSpacing;\n    }\n    _private__coordinateToFloatIndex(x) {\n        const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n        const baseIndex = this._internal_baseIndex();\n        const index = baseIndex + this._private__rightOffset - deltaFromRight;\n        // JavaScript uses very strange rounding\n        // we need rounding to avoid problems with calculation errors\n        return Math.round(index * 1000000) / 1000000;\n    }\n    _private__setBarSpacing(newBarSpacing) {\n        const oldBarSpacing = this._private__barSpacing;\n        this._private__barSpacing = newBarSpacing;\n        this._private__correctBarSpacing();\n        // this._barSpacing might be changed in _correctBarSpacing\n        if (oldBarSpacing !== this._private__barSpacing) {\n            this._private__visibleRangeInvalidated = true;\n            this._private__resetTimeMarksCache();\n        }\n    }\n    _private__updateVisibleRange() {\n        if (!this._private__visibleRangeInvalidated) {\n            return;\n        }\n        this._private__visibleRangeInvalidated = false;\n        if (this._internal_isEmpty()) {\n            this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n            return;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const newBarsLength = this._private__width / this._private__barSpacing;\n        const rightBorder = this._private__rightOffset + baseIndex;\n        const leftBorder = rightBorder - newBarsLength + 1;\n        const logicalRange = new RangeImpl(leftBorder, rightBorder);\n        this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n    }\n    _private__correctBarSpacing() {\n        const minBarSpacing = this._private__minBarSpacing();\n        if (this._private__barSpacing < minBarSpacing) {\n            this._private__barSpacing = minBarSpacing;\n            this._private__visibleRangeInvalidated = true;\n        }\n        if (this._private__width !== 0) {\n            // make sure that this (1 / Constants.MinVisibleBarsCount) >= coeff in max bar spacing (it's 0.5 here)\n            const maxBarSpacing = this._private__width * 0.5;\n            if (this._private__barSpacing > maxBarSpacing) {\n                this._private__barSpacing = maxBarSpacing;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n    }\n    _private__minBarSpacing() {\n        // if both options are enabled then limit bar spacing so that zooming-out is not possible\n        // if it would cause either the first or last points to move too far from an edge\n        if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n            return this._private__width / this._private__points.length;\n        }\n        return this._private__options.minBarSpacing;\n    }\n    _private__correctOffset() {\n        // block scrolling of to future\n        const maxRightOffset = this._private__maxRightOffset();\n        if (this._private__rightOffset > maxRightOffset) {\n            this._private__rightOffset = maxRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n        // block scrolling of to past\n        const minRightOffset = this._private__minRightOffset();\n        if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n            this._private__rightOffset = minRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n    }\n    _private__minRightOffset() {\n        const firstIndex = this._private__firstIndex();\n        const baseIndex = this._private__baseIndexOrNull;\n        if (firstIndex === null || baseIndex === null) {\n            return null;\n        }\n        const barsEstimation = this._private__options.fixLeftEdge\n            ? this._private__width / this._private__barSpacing\n            : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n        return firstIndex - baseIndex - 1 + barsEstimation;\n    }\n    _private__maxRightOffset() {\n        return this._private__options.fixRightEdge\n            ? 0\n            : (this._private__width / this._private__barSpacing) - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    }\n    _private__saveCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = {\n            _internal_barSpacing: this._internal_barSpacing(),\n            _internal_rightOffset: this._internal_rightOffset(),\n        };\n    }\n    _private__clearCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = null;\n    }\n    _private__formatLabel(tickMark) {\n        let formatter = this._private__formattedByWeight.get(tickMark.weight);\n        if (formatter === undefined) {\n            formatter = new FormattedLabelsCache((mark) => {\n                return this._private__formatLabelImpl(mark);\n            }, this._private__horzScaleBehavior);\n            this._private__formattedByWeight.set(tickMark.weight, formatter);\n        }\n        return formatter._internal_format(tickMark);\n    }\n    _private__formatLabelImpl(tickMark) {\n        return this._private__horzScaleBehavior.formatTickmark(tickMark, this._private__localizationOptions);\n    }\n    _private__setVisibleRange(newVisibleRange) {\n        const oldVisibleRange = this._private__visibleRange;\n        this._private__visibleRange = newVisibleRange;\n        if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n            this._private__visibleBarsChanged._internal_fire();\n        }\n        if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n            this._private__logicalRangeChanged._internal_fire();\n        }\n        // TODO: reset only coords in case when this._visibleBars has not been changed\n        this._private__resetTimeMarksCache();\n    }\n    _private__resetTimeMarksCache() {\n        this._private__timeMarksCache = null;\n    }\n    _private__invalidateTickMarks() {\n        this._private__resetTimeMarksCache();\n        this._private__formattedByWeight.clear();\n    }\n    _private__updateDateTimeFormatter() {\n        this._private__horzScaleBehavior.updateFormatter(this._private__localizationOptions);\n    }\n    _private__doFixLeftEdge() {\n        if (!this._private__options.fixLeftEdge) {\n            return;\n        }\n        const firstIndex = this._private__firstIndex();\n        if (firstIndex === null) {\n            return;\n        }\n        const visibleRange = this._internal_visibleStrictRange();\n        if (visibleRange === null) {\n            return;\n        }\n        const delta = visibleRange._internal_left() - firstIndex;\n        if (delta < 0) {\n            const leftEdgeOffset = this._private__rightOffset - delta - 1;\n            this._internal_setRightOffset(leftEdgeOffset);\n        }\n        this._private__correctBarSpacing();\n    }\n    _private__doFixRightEdge() {\n        this._private__correctOffset();\n        this._private__correctBarSpacing();\n    }\n}\n\nclass WatermarkRenderer extends MediaCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__metricsCache = new Map();\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) { }\n    _internal__drawBackgroundImpl(renderingScope) {\n        if (!this._private__data._internal_visible) {\n            return;\n        }\n        const { context: ctx, mediaSize } = renderingScope;\n        let textHeight = 0;\n        for (const line of this._private__data._internal_lines) {\n            if (line._internal_text.length === 0) {\n                continue;\n            }\n            ctx.font = line._internal_font;\n            const textWidth = this._private__metrics(ctx, line._internal_text);\n            if (textWidth > mediaSize.width) {\n                line._internal_zoom = mediaSize.width / textWidth;\n            }\n            else {\n                line._internal_zoom = 1;\n            }\n            textHeight += line._internal_lineHeight * line._internal_zoom;\n        }\n        let vertOffset = 0;\n        switch (this._private__data._internal_vertAlign) {\n            case 'top':\n                vertOffset = 0;\n                break;\n            case 'center':\n                vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n                break;\n            case 'bottom':\n                vertOffset = Math.max((mediaSize.height - textHeight), 0);\n                break;\n        }\n        ctx.fillStyle = this._private__data._internal_color;\n        for (const line of this._private__data._internal_lines) {\n            ctx.save();\n            let horzOffset = 0;\n            switch (this._private__data._internal_horzAlign) {\n                case 'left':\n                    ctx.textAlign = 'left';\n                    horzOffset = line._internal_lineHeight / 2;\n                    break;\n                case 'center':\n                    ctx.textAlign = 'center';\n                    horzOffset = mediaSize.width / 2;\n                    break;\n                case 'right':\n                    ctx.textAlign = 'right';\n                    horzOffset = mediaSize.width - 1 - line._internal_lineHeight / 2;\n                    break;\n            }\n            ctx.translate(horzOffset, vertOffset);\n            ctx.textBaseline = 'top';\n            ctx.font = line._internal_font;\n            ctx.scale(line._internal_zoom, line._internal_zoom);\n            ctx.fillText(line._internal_text, 0, line._internal_vertOffset);\n            ctx.restore();\n            vertOffset += line._internal_lineHeight * line._internal_zoom;\n        }\n    }\n    _private__metrics(ctx, text) {\n        const fontCache = this._private__fontCache(ctx.font);\n        let result = fontCache.get(text);\n        if (result === undefined) {\n            result = ctx.measureText(text).width;\n            fontCache.set(text, result);\n        }\n        return result;\n    }\n    _private__fontCache(font) {\n        let fontCache = this._private__metricsCache.get(font);\n        if (fontCache === undefined) {\n            fontCache = new Map();\n            this._private__metricsCache.set(font, fontCache);\n        }\n        return fontCache;\n    }\n}\n\nclass WatermarkPaneView {\n    constructor(source) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_color: '',\n            _internal_lines: [],\n            _internal_vertAlign: 'center',\n            _internal_horzAlign: 'center',\n        };\n        this._private__renderer = new WatermarkRenderer(this._private__rendererData);\n        this._private__source = source;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const options = this._private__source._internal_options();\n        const data = this._private__rendererData;\n        data._internal_visible = options.visible;\n        if (!data._internal_visible) {\n            return;\n        }\n        data._internal_color = options.color;\n        data._internal_horzAlign = options.horzAlign;\n        data._internal_vertAlign = options.vertAlign;\n        data._internal_lines = [\n            {\n                _internal_text: options.text,\n                _internal_font: makeFont(options.fontSize, options.fontFamily, options.fontStyle),\n                _internal_lineHeight: options.fontSize * 1.2,\n                _internal_vertOffset: 0,\n                _internal_zoom: 0,\n            },\n        ];\n    }\n}\n\nclass Watermark extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__options = options;\n        this._private__paneView = new WatermarkPaneView(this);\n    }\n    _internal_priceAxisViews() {\n        return [];\n    }\n    _internal_paneViews() {\n        return [this._private__paneView];\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n    /**\n     * Tracking Mode will be deactivated on touch end event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n    /**\n     * Tracking Mode will be deactivated on the next tap event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nclass ChartModel {\n    constructor(invalidateHandler, options, horzScaleBehavior) {\n        this._private__panes = [];\n        this._private__serieses = [];\n        this._private__width = 0;\n        this._private__hoveredSource = null;\n        this._private__priceScalesOptionsChanged = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__gradientColorsCache = null;\n        this._private__invalidateHandler = invalidateHandler;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n        this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization, horzScaleBehavior);\n        this._private__crosshair = new Crosshair(this, options.crosshair);\n        this._private__magnet = new Magnet(options.crosshair);\n        this._private__watermark = new Watermark(this, options.watermark);\n        this._internal_createPane();\n        this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    }\n    _internal_fullUpdate() {\n        this._private__invalidate(InvalidateMask._internal_full());\n    }\n    _internal_lightUpdate() {\n        this._private__invalidate(InvalidateMask._internal_light());\n    }\n    _internal_cursorUpdate() {\n        this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n    }\n    _internal_updateSource(source) {\n        const inv = this._private__invalidationMaskForSource(source);\n        this._private__invalidate(inv);\n    }\n    _internal_hoveredSource() {\n        return this._private__hoveredSource;\n    }\n    _internal_setHoveredSource(source) {\n        const prevSource = this._private__hoveredSource;\n        this._private__hoveredSource = source;\n        if (prevSource !== null) {\n            this._internal_updateSource(prevSource._internal_source);\n        }\n        if (source !== null) {\n            this._internal_updateSource(source._internal_source);\n        }\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._private__panes.forEach((p) => p._internal_applyScaleOptions(options));\n        if (options.timeScale !== undefined) {\n            this._private__timeScale._internal_applyOptions(options.timeScale);\n        }\n        if (options.localization !== undefined) {\n            this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n        }\n        if (options.leftPriceScale || options.rightPriceScale) {\n            this._private__priceScalesOptionsChanged._internal_fire();\n        }\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n        this._internal_fullUpdate();\n    }\n    _internal_applyPriceScaleOptions(priceScaleId, options) {\n        if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n            this._internal_applyOptions({\n                leftPriceScale: options,\n            });\n            return;\n        }\n        else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n            this._internal_applyOptions({\n                rightPriceScale: options,\n            });\n            return;\n        }\n        const res = this._internal_findPriceScale(priceScaleId);\n        if (res === null) {\n            {\n                throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n            }\n        }\n        res._internal_priceScale._internal_applyOptions(options);\n        this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    _internal_findPriceScale(priceScaleId) {\n        for (const pane of this._private__panes) {\n            const priceScale = pane._internal_priceScaleById(priceScaleId);\n            if (priceScale !== null) {\n                return {\n                    _internal_pane: pane,\n                    _internal_priceScale: priceScale,\n                };\n            }\n        }\n        return null;\n    }\n    _internal_timeScale() {\n        return this._private__timeScale;\n    }\n    _internal_panes() {\n        return this._private__panes;\n    }\n    _internal_watermarkSource() {\n        return this._private__watermark;\n    }\n    _internal_crosshairSource() {\n        return this._private__crosshair;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_setPaneHeight(pane, height) {\n        pane._internal_setHeight(height);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._private__timeScale._internal_setWidth(this._private__width);\n        this._private__panes.forEach((pane) => pane._internal_setWidth(width));\n        this._internal_recalculateAllPanes();\n    }\n    _internal_createPane(index) {\n        const pane = new Pane(this._private__timeScale, this);\n        if (index !== undefined) {\n            this._private__panes.splice(index, 0, pane);\n        }\n        else {\n            // adding to the end - common case\n            this._private__panes.push(pane);\n        }\n        const actualIndex = (index === undefined) ? this._private__panes.length - 1 : index;\n        // we always do autoscaling on the creation\n        // if autoscale option is true, it is ok, just recalculate by invalidation mask\n        // if autoscale option is false, autoscale anyway on the first draw\n        // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n        const mask = InvalidateMask._internal_full();\n        mask._internal_invalidatePane(actualIndex, {\n            _internal_level: 0 /* InvalidationLevel.None */,\n            _internal_autoScale: true,\n        });\n        this._private__invalidate(mask);\n        return pane;\n    }\n    _internal_startScalePrice(pane, priceScale, x) {\n        pane._internal_startScalePrice(priceScale, x);\n    }\n    _internal_scalePriceTo(pane, priceScale, x) {\n        pane._internal_scalePriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScalePrice(pane, priceScale) {\n        pane._internal_endScalePrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScrollPrice(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_startScrollPrice(priceScale, x);\n    }\n    _internal_scrollPriceTo(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_scrollPriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScrollPrice(pane, priceScale) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_endScrollPrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_resetPriceScale(pane, priceScale) {\n        pane._internal_resetPriceScale(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScaleTime(position) {\n        this._private__timeScale._internal_startScale(position);\n    }\n    /**\n     * Zoom in/out the chart (depends on scale value).\n     *\n     * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n     * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoomTime(pointX, scale) {\n        const timeScale = this._internal_timeScale();\n        if (timeScale._internal_isEmpty() || scale === 0) {\n            return;\n        }\n        const timeScaleWidth = timeScale._internal_width();\n        pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n        timeScale._internal_zoom(pointX, scale);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_scrollChart(x) {\n        this._internal_startScrollTime(0);\n        this._internal_scrollTimeTo(x);\n        this._internal_endScrollTime();\n    }\n    _internal_scaleTimeTo(x) {\n        this._private__timeScale._internal_scaleTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScaleTime() {\n        this._private__timeScale._internal_endScale();\n        this._internal_lightUpdate();\n    }\n    _internal_startScrollTime(x) {\n        this._private__timeScale._internal_startScroll(x);\n    }\n    _internal_scrollTimeTo(x) {\n        this._private__timeScale._internal_scrollTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScrollTime() {\n        this._private__timeScale._internal_endScroll();\n        this._internal_lightUpdate();\n    }\n    _internal_serieses() {\n        return this._private__serieses;\n    }\n    _internal_setAndSaveCurrentPosition(x, y, event, pane, skipEvent) {\n        this._private__crosshair._internal_saveOriginCoord(x, y);\n        let price = NaN;\n        let index = this._private__timeScale._internal_coordinateToIndex(x);\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        if (visibleBars !== null) {\n            index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n        }\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue !== null) {\n            price = priceScale._internal_coordinateToPrice(y, firstValue);\n        }\n        price = this._private__magnet._internal_align(price, index, pane);\n        this._private__crosshair._internal_setPosition(index, price, pane);\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), { x, y }, event);\n        }\n    }\n    // A position provided external (not from an internal event listener)\n    _internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane) {\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        const y = priceScale._internal_priceToCoordinate(price, ensureNotNull(firstValue));\n        const index = this._private__timeScale._internal_timeToIndex(horizontalPosition, true);\n        const x = this._private__timeScale._internal_indexToCoordinate(ensureNotNull(index));\n        this._internal_setAndSaveCurrentPosition(x, y, null, pane, true);\n    }\n    _internal_clearCurrentPosition(skipEvent) {\n        const crosshair = this._internal_crosshairSource();\n        crosshair._internal_clearPosition();\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            this._private__crosshairMoved._internal_fire(null, null, null);\n        }\n    }\n    _internal_updateCrosshair() {\n        // apply magnet\n        const pane = this._private__crosshair._internal_pane();\n        if (pane !== null) {\n            const x = this._private__crosshair._internal_originCoordX();\n            const y = this._private__crosshair._internal_originCoordY();\n            this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n        }\n        this._private__crosshair._internal_updateAllViews();\n    }\n    _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n        const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n        if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n            this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n        }\n        const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n        const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n        // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n        // (and actually we cannot)\n        if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n            const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n            const isLeftBarShiftToLeft = this._private__horzScaleBehavior.key(oldFirstTime) > this._private__horzScaleBehavior.key(newFirstTime);\n            const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n            const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n            const allowShiftWhenReplacingWhitespace = this._private__timeScale._internal_options().allowShiftVisibleRangeOnWhitespaceReplacement;\n            const replacedExistingWhitespace = firstChangedPointIndex === undefined;\n            const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && (!replacedExistingWhitespace || allowShiftWhenReplacingWhitespace) && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n            if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n                const compensationShift = newBaseIndex - currentBaseIndex;\n                this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n            }\n        }\n        this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n    }\n    _internal_recalculatePane(pane) {\n        if (pane !== null) {\n            pane._internal_recalculate();\n        }\n    }\n    _internal_paneForSource(source) {\n        const pane = this._private__panes.find((p) => p._internal_orderedSources().includes(source));\n        return pane === undefined ? null : pane;\n    }\n    _internal_recalculateAllPanes() {\n        this._private__watermark._internal_updateAllViews();\n        this._private__panes.forEach((p) => p._internal_recalculate());\n        this._internal_updateCrosshair();\n    }\n    _internal_destroy() {\n        this._private__panes.forEach((p) => p._internal_destroy());\n        this._private__panes.length = 0;\n        // to avoid memleaks\n        this._private__options.localization.priceFormatter = undefined;\n        this._private__options.localization.percentageFormatter = undefined;\n        this._private__options.localization.timeFormatter = undefined;\n    }\n    _internal_rendererOptionsProvider() {\n        return this._private__rendererOptionsProvider;\n    }\n    _internal_priceAxisRendererOptions() {\n        return this._private__rendererOptionsProvider._internal_options();\n    }\n    _internal_priceScalesOptionsChanged() {\n        return this._private__priceScalesOptionsChanged;\n    }\n    _internal_createSeries(seriesType, options, customPaneView) {\n        const pane = this._private__panes[0];\n        const series = this._private__createSeries(options, seriesType, pane, customPaneView);\n        this._private__serieses.push(series);\n        if (this._private__serieses.length === 1) {\n            // call fullUpdate to recalculate chart's parts geometry\n            this._internal_fullUpdate();\n        }\n        else {\n            this._internal_lightUpdate();\n        }\n        return series;\n    }\n    _internal_removeSeries(series) {\n        const pane = this._internal_paneForSource(series);\n        const seriesIndex = this._private__serieses.indexOf(series);\n        assert(seriesIndex !== -1, 'Series not found');\n        this._private__serieses.splice(seriesIndex, 1);\n        ensureNotNull(pane)._internal_removeDataSource(series);\n        if (series._internal_destroy) {\n            series._internal_destroy();\n        }\n    }\n    _internal_moveSeriesToScale(series, targetScaleId) {\n        const pane = ensureNotNull(this._internal_paneForSource(series));\n        pane._internal_removeDataSource(series);\n        // check if targetScaleId exists\n        const target = this._internal_findPriceScale(targetScaleId);\n        if (target === null) {\n            // new scale on the same pane\n            const zOrder = series._internal_zorder();\n            pane._internal_addDataSource(series, targetScaleId, zOrder);\n        }\n        else {\n            // if move to the new scale of the same pane, keep zorder\n            // if move to new pane\n            const zOrder = (target._internal_pane === pane) ? series._internal_zorder() : undefined;\n            target._internal_pane._internal_addDataSource(series, targetScaleId, zOrder);\n        }\n    }\n    _internal_fitContent() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setFitContent();\n        this._private__invalidate(mask);\n    }\n    _internal_setTargetLogicalRange(range) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_applyRange(range);\n        this._private__invalidate(mask);\n    }\n    _internal_resetTimeScale() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_resetTimeScale();\n        this._private__invalidate(mask);\n    }\n    _internal_setBarSpacing(spacing) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setBarSpacing(spacing);\n        this._private__invalidate(mask);\n    }\n    _internal_setRightOffset(offset) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setRightOffset(offset);\n        this._private__invalidate(mask);\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setTimeScaleAnimation(animation);\n        this._private__invalidate(mask);\n    }\n    _internal_stopTimeScaleAnimation() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_stopTimeScaleAnimation();\n        this._private__invalidate(mask);\n    }\n    _internal_defaultVisiblePriceScaleId() {\n        return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n    }\n    _internal_backgroundBottomColor() {\n        return this._private__backgroundBottomColor;\n    }\n    _internal_backgroundTopColor() {\n        return this._private__backgroundTopColor;\n    }\n    _internal_backgroundColorAtYPercentFromTop(percent) {\n        const bottomColor = this._private__backgroundBottomColor;\n        const topColor = this._private__backgroundTopColor;\n        if (bottomColor === topColor) {\n            // solid background\n            return bottomColor;\n        }\n        // gradient background\n        // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n        percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n        if (this._private__gradientColorsCache === null ||\n            this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n            this._private__gradientColorsCache = {\n                _internal_topColor: topColor,\n                _internal_bottomColor: bottomColor,\n                _internal_colors: new Map(),\n            };\n        }\n        else {\n            const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n            if (cachedValue !== undefined) {\n                return cachedValue;\n            }\n        }\n        const result = gradientColorAtPercent(topColor, bottomColor, percent / 100);\n        this._private__gradientColorsCache._internal_colors.set(percent, result);\n        return result;\n    }\n    _private__paneInvalidationMask(pane, level) {\n        const inv = new InvalidateMask(level);\n        if (pane !== null) {\n            const index = this._private__panes.indexOf(pane);\n            inv._internal_invalidatePane(index, {\n                _internal_level: level,\n            });\n        }\n        return inv;\n    }\n    _private__invalidationMaskForSource(source, invalidateType) {\n        if (invalidateType === undefined) {\n            invalidateType = 2 /* InvalidationLevel.Light */;\n        }\n        return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n    }\n    _private__invalidate(mask) {\n        if (this._private__invalidateHandler) {\n            this._private__invalidateHandler(mask);\n        }\n        this._private__panes.forEach((pane) => pane._internal_grid()._internal_paneView()._internal_update());\n    }\n    _private__createSeries(options, seriesType, pane, customPaneView) {\n        const series = new Series(this, options, seriesType, pane, customPaneView);\n        const targetScaleId = options.priceScaleId !== undefined ? options.priceScaleId : this._internal_defaultVisiblePriceScaleId();\n        pane._internal_addDataSource(series, targetScaleId);\n        if (!isDefaultPriceScale(targetScaleId)) {\n            // let's apply that options again to apply margins\n            series._internal_applyOptions(options);\n        }\n        return series;\n    }\n    _private__getBackgroundColor(side) {\n        const layoutOptions = this._private__options.layout;\n        if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n            return side === 0 /* BackgroundColorSide.Top */ ?\n                layoutOptions.background.topColor :\n                layoutOptions.background.bottomColor;\n        }\n        return layoutOptions.background.color;\n    }\n}\n\nfunction fillUpDownCandlesticksColors(options) {\n    if (options.borderColor !== undefined) {\n        options.borderUpColor = options.borderColor;\n        options.borderDownColor = options.borderColor;\n    }\n    if (options.wickColor !== undefined) {\n        options.wickUpColor = options.wickColor;\n        options.wickDownColor = options.wickColor;\n    }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n    /**\n     * Animation is always disabled\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n     * Animation is always enabled.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n    /**\n     * Animation is active after new data.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n    if (minMove >= 1) {\n        return 0;\n    }\n    let i = 0;\n    for (; i < 8; i++) {\n        const intPart = Math.round(minMove);\n        const fractPart = Math.abs(intPart - minMove);\n        if (fractPart < 1e-8) {\n            return i;\n        }\n        minMove = minMove * 10;\n    }\n    return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n    /**\n     * Use the last bar data.\n     */\n    PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n    /**\n     * Use the last visible data of the chart viewport.\n     */\n    PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n    /** Solid color */\n    ColorType[\"Solid\"] = \"solid\";\n    /** Vertical gradient color */\n    ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n    return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n    return isNumber(time);\n}\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n    /**\n     * The start of the year (e.g. it's the first tick mark in a year).\n     */\n    TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n    /**\n     * The start of the month (e.g. it's the first tick mark in a month).\n     */\n    TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n    /**\n     * A day of the month.\n     */\n    TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n    /**\n     * A time without seconds.\n     */\n    TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n    /**\n     * A time with seconds.\n     */\n    TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\n\nconst getMonth = (date) => date.getUTCMonth() + 1;\nconst getDay = (date) => date.getUTCDate();\nconst getYear = (date) => date.getUTCFullYear();\nconst dd = (date) => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'long' });\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'short' });\nconst MM = (date) => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = (date) => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = (date) => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n    return format\n        .replace(/yyyy/g, yyyy(date))\n        .replace(/yy/g, yy(date))\n        .replace(/MMMM/g, MMMM(date, locale))\n        .replace(/MMM/g, MMM(date, locale))\n        .replace(/MM/g, MM(date))\n        .replace(/dd/g, dd(date));\n}\n\nclass DateFormatter {\n    constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n        this._private__dateFormat = dateFormat;\n        this._private__locale = locale;\n    }\n    _internal_format(date) {\n        return formatDate(date, this._private__dateFormat, this._private__locale);\n    }\n}\n\nclass TimeFormatter {\n    constructor(format) {\n        this._private__formatStr = format || '%h:%m:%s';\n    }\n    _internal_format(date) {\n        return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).\n            replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).\n            replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n    }\n}\n\nconst defaultParams = {\n    _internal_dateFormat: 'yyyy-MM-dd',\n    _internal_timeFormat: '%h:%m:%s',\n    _internal_dateTimeSeparator: ' ',\n    _internal_locale: 'default',\n};\nclass DateTimeFormatter {\n    constructor(params = {}) {\n        const formatterParams = Object.assign(Object.assign({}, defaultParams), params);\n        this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n        this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n        this._private__separator = formatterParams._internal_dateTimeSeparator;\n    }\n    _internal_format(dateTime) {\n        return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n    }\n}\n\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n    const formatOptions = {};\n    switch (tickMarkType) {\n        case 0 /* TickMarkType.Year */:\n            formatOptions.year = 'numeric';\n            break;\n        case 1 /* TickMarkType.Month */:\n            formatOptions.month = 'short';\n            break;\n        case 2 /* TickMarkType.DayOfMonth */:\n            formatOptions.day = 'numeric';\n            break;\n        case 3 /* TickMarkType.Time */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            break;\n        case 4 /* TickMarkType.TimeWithSeconds */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            formatOptions.second = '2-digit';\n            break;\n    }\n    const date = timePoint._internal_businessDay === undefined\n        ? new Date(timePoint._internal_timestamp * 1000)\n        : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n    // from given date we should use only as UTC date or timestamp\n    // but to format as locale date we can convert UTC date to local date\n    const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n    return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\n\nfunction hours(count) {\n    return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n    return count * 60 * 1000;\n}\nfunction seconds(count) {\n    return count * 1000;\n}\nconst intradayWeightDivisors = [\n    { _internal_divisor: seconds(1), _internal_weight: 10 /* TickMarkWeight.Second */ },\n    { _internal_divisor: minutes(1), _internal_weight: 20 /* TickMarkWeight.Minute1 */ },\n    { _internal_divisor: minutes(5), _internal_weight: 21 /* TickMarkWeight.Minute5 */ },\n    { _internal_divisor: minutes(30), _internal_weight: 22 /* TickMarkWeight.Minute30 */ },\n    { _internal_divisor: hours(1), _internal_weight: 30 /* TickMarkWeight.Hour1 */ },\n    { _internal_divisor: hours(3), _internal_weight: 31 /* TickMarkWeight.Hour3 */ },\n    { _internal_divisor: hours(6), _internal_weight: 32 /* TickMarkWeight.Hour6 */ },\n    { _internal_divisor: hours(12), _internal_weight: 33 /* TickMarkWeight.Hour12 */ },\n];\nfunction weightByTime(currentDate, prevDate) {\n    if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n        return 70 /* TickMarkWeight.Year */;\n    }\n    else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n        return 60 /* TickMarkWeight.Month */;\n    }\n    else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n        return 50 /* TickMarkWeight.Day */;\n    }\n    for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n        if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n            return intradayWeightDivisors[i]._internal_weight;\n        }\n    }\n    return 0 /* TickMarkWeight.LessThanSecond */;\n}\nfunction cast(t) {\n    return t;\n}\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n    if (sortedTimePoints.length === 0) {\n        return;\n    }\n    let prevTime = startIndex === 0 ? null : cast(sortedTimePoints[startIndex - 1].time)._internal_timestamp;\n    let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n    let totalTimeDiff = 0;\n    for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n        const currentPoint = sortedTimePoints[index];\n        const currentDate = new Date(cast(currentPoint.time)._internal_timestamp * 1000);\n        if (prevDate !== null) {\n            currentPoint.timeWeight = weightByTime(currentDate, prevDate);\n        }\n        totalTimeDiff += cast(currentPoint.time)._internal_timestamp - (prevTime || cast(currentPoint.time)._internal_timestamp);\n        prevTime = cast(currentPoint.time)._internal_timestamp;\n        prevDate = currentDate;\n    }\n    if (startIndex === 0 && sortedTimePoints.length > 1) {\n        // let's guess a weight for the first point\n        // let's say the previous point was average time back in the history\n        const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n        const approxPrevDate = new Date((cast(sortedTimePoints[0].time)._internal_timestamp - averageTimeDiff) * 1000);\n        sortedTimePoints[0].timeWeight = weightByTime(new Date(cast(sortedTimePoints[0].time)._internal_timestamp * 1000), approxPrevDate);\n    }\n}\n\nfunction businessDayConverter(time) {\n    let businessDay = time;\n    if (isString(time)) {\n        businessDay = stringToBusinessDay(time);\n    }\n    if (!isBusinessDay(businessDay)) {\n        throw new Error('time must be of type BusinessDay');\n    }\n    const date = new Date(Date.UTC(businessDay.year, businessDay.month - 1, businessDay.day, 0, 0, 0, 0));\n    return {\n        _internal_timestamp: Math.round(date.getTime() / 1000),\n        _internal_businessDay: businessDay,\n    };\n}\nfunction timestampConverter(time) {\n    if (!isUTCTimestamp(time)) {\n        throw new Error('time must be of type isUTCTimestamp');\n    }\n    return {\n        _internal_timestamp: time,\n    };\n}\nfunction selectTimeConverter(data) {\n    if (data.length === 0) {\n        return null;\n    }\n    if (isBusinessDay(data[0].time) || isString(data[0].time)) {\n        return businessDayConverter;\n    }\n    return timestampConverter;\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction convertTime(time) {\n    if (isUTCTimestamp(time)) {\n        return timestampConverter(time);\n    }\n    if (!isBusinessDay(time)) {\n        return businessDayConverter(stringToBusinessDay(time));\n    }\n    return businessDayConverter(time);\n}\nfunction stringToBusinessDay(value) {\n    {\n        // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n        // but parses them in 'implementation specific' way\n        // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are 'valid' date strings)\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n        // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n        // but let's do this in development build only because of perf\n        if (!validDateRegex.test(value)) {\n            throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n        }\n    }\n    const d = new Date(value);\n    if (isNaN(d.getTime())) {\n        throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n    return {\n        day: d.getUTCDate(),\n        month: d.getUTCMonth() + 1,\n        year: d.getUTCFullYear(),\n    };\n}\nfunction convertStringToBusinessDay(value) {\n    if (isString(value.time)) {\n        value.time = stringToBusinessDay(value.time);\n    }\n}\nfunction convertStringsToBusinessDays(data) {\n    return data.forEach(convertStringToBusinessDay);\n}\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n    switch (weight) {\n        case 0 /* TickMarkWeight.LessThanSecond */:\n        case 10 /* TickMarkWeight.Second */:\n            return timeVisible\n                ? (secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */)\n                : 2 /* TickMarkType.DayOfMonth */;\n        case 20 /* TickMarkWeight.Minute1 */:\n        case 21 /* TickMarkWeight.Minute5 */:\n        case 22 /* TickMarkWeight.Minute30 */:\n        case 30 /* TickMarkWeight.Hour1 */:\n        case 31 /* TickMarkWeight.Hour3 */:\n        case 32 /* TickMarkWeight.Hour6 */:\n        case 33 /* TickMarkWeight.Hour12 */:\n            return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n        case 50 /* TickMarkWeight.Day */:\n            return 2 /* TickMarkType.DayOfMonth */;\n        case 60 /* TickMarkWeight.Month */:\n            return 1 /* TickMarkType.Month */;\n        case 70 /* TickMarkWeight.Year */:\n            return 0 /* TickMarkType.Year */;\n    }\n}\nclass HorzScaleBehaviorTime {\n    options() {\n        return this._private__options;\n    }\n    setOptions(options) {\n        this._private__options = options;\n        this.updateFormatter(options.localization);\n    }\n    preprocessData(data) {\n        if (Array.isArray(data)) {\n            convertStringsToBusinessDays(data);\n        }\n        else {\n            convertStringToBusinessDay(data);\n        }\n    }\n    createConverterToInternalObj(data) {\n        return ensureNotNull(selectTimeConverter(data));\n    }\n    key(item) {\n        // eslint-disable-next-line no-restricted-syntax\n        if (typeof item === 'object' && \"_internal_timestamp\" in item) {\n            return item._internal_timestamp;\n        }\n        else {\n            return this.key(this.convertHorzItemToInternal(item));\n        }\n    }\n    cacheKey(item) {\n        const time = item;\n        return time._internal_businessDay === undefined\n            ? new Date(time._internal_timestamp * 1000).getTime()\n            : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n    }\n    convertHorzItemToInternal(item) {\n        return convertTime(item);\n    }\n    updateFormatter(options) {\n        if (!this._private__options) {\n            return;\n        }\n        const dateFormat = options.dateFormat;\n        if (this._private__options.timeScale.timeVisible) {\n            this._private__dateTimeFormatter = new DateTimeFormatter({\n                _internal_dateFormat: dateFormat,\n                _internal_timeFormat: this._private__options.timeScale.secondsVisible ? '%h:%m:%s' : '%h:%m',\n                _internal_dateTimeSeparator: '   ',\n                _internal_locale: options.locale,\n            });\n        }\n        else {\n            this._private__dateTimeFormatter = new DateFormatter(dateFormat, options.locale);\n        }\n    }\n    formatHorzItem(item) {\n        const tp = item;\n        return this._private__dateTimeFormatter._internal_format(new Date(tp._internal_timestamp * 1000));\n    }\n    formatTickmark(tickMark, localizationOptions) {\n        const tickMarkType = weightToTickMarkType(tickMark.weight, this._private__options.timeScale.timeVisible, this._private__options.timeScale.secondsVisible);\n        const options = this._private__options.timeScale;\n        if (options.tickMarkFormatter !== undefined) {\n            const tickMarkString = options.tickMarkFormatter(tickMark.originalTime, tickMarkType, localizationOptions.locale);\n            if (tickMarkString !== null) {\n                return tickMarkString;\n            }\n        }\n        return defaultTickMarkFormatter(tickMark.time, tickMarkType, localizationOptions.locale);\n    }\n    maxTickMarkWeight(tickMarks) {\n        let maxWeight = tickMarks.reduce(markWithGreaterWeight, tickMarks[0]).weight;\n        // special case: it looks strange if 15:00 is bold but 14:00 is not\n        // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n        if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n            maxWeight = 30 /* TickMarkWeight.Hour1 */;\n        }\n        return maxWeight;\n    }\n    fillWeightsForPoints(sortedTimePoints, startIndex) {\n        fillWeightsForPoints(sortedTimePoints, startIndex);\n    }\n    static _internal_applyDefaults(options) {\n        return merge({ localization: { dateFormat: 'dd MMM \\'yy' } }, options !== null && options !== void 0 ? options : {});\n    }\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\n\nfunction isFF() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n    var _a;\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // more accurate if available\n    if ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.userAgentData) === null || _a === void 0 ? void 0 : _a.platform) {\n        return navigator.userAgentData.platform === 'Windows';\n    }\n    return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    if (!navigator.userAgentData) {\n        return false;\n    }\n    return navigator.userAgentData.brands.some((brand) => {\n        return brand.brand.includes('Chromium');\n    });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n    {\n        // eslint-disable-next-line no-console\n        console.warn(msg);\n    }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n    const integerWidth = Math.floor(originalSize.width);\n    const integerHeight = Math.floor(originalSize.height);\n    const width = integerWidth - (integerWidth % 2);\n    const height = integerHeight - (integerHeight % 2);\n    return size$1({ width, height });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n    return originalHeight + (originalHeight % 2);\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n    return originalWidth + (originalWidth % 2);\n}\n\nfunction distanceBetweenPoints(pos1, pos2) {\n    return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n    const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n    return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n    const lnDumpingCoeff = Math.log(dumpingCoeff);\n    return Math.log((1 /* Constants.EpsilonDistance */ * lnDumpingCoeff) / -speed) / (lnDumpingCoeff);\n}\nclass KineticAnimation {\n    constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n        this._private__position1 = null;\n        this._private__position2 = null;\n        this._private__position3 = null;\n        this._private__position4 = null;\n        this._private__animationStartPosition = null;\n        this._private__durationMsecs = 0;\n        this._private__speedPxPerMsec = 0;\n        this._private__minSpeed = minSpeed;\n        this._private__maxSpeed = maxSpeed;\n        this._private__dumpingCoeff = dumpingCoeff;\n        this._private__minMove = minMove;\n    }\n    _internal_addPosition(position, time) {\n        if (this._private__position1 !== null) {\n            if (this._private__position1._internal_time === time) {\n                this._private__position1._internal_position = position;\n                return;\n            }\n            if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n                return;\n            }\n        }\n        this._private__position4 = this._private__position3;\n        this._private__position3 = this._private__position2;\n        this._private__position2 = this._private__position1;\n        this._private__position1 = { _internal_time: time, _internal_position: position };\n    }\n    _internal_start(position, time) {\n        if (this._private__position1 === null || this._private__position2 === null) {\n            return;\n        }\n        if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n            return;\n        }\n        // To calculate all the rest parameters we should calculate the speed af first\n        let totalDistance = 0;\n        const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n        const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n        // We're calculating weighted average speed\n        // Than more distance for a segment, than more its weight\n        const speedItems = [speed1];\n        const distanceItems = [distance1];\n        totalDistance += distance1;\n        if (this._private__position3 !== null) {\n            const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n            // stop at this moment if direction of the segment is opposite\n            if (Math.sign(speed2) === Math.sign(speed1)) {\n                const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n                speedItems.push(speed2);\n                distanceItems.push(distance2);\n                totalDistance += distance2;\n                if (this._private__position4 !== null) {\n                    const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n                    if (Math.sign(speed3) === Math.sign(speed1)) {\n                        const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n                        speedItems.push(speed3);\n                        distanceItems.push(distance3);\n                        totalDistance += distance3;\n                    }\n                }\n            }\n        }\n        let resultSpeed = 0;\n        for (let i = 0; i < speedItems.length; ++i) {\n            resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n        }\n        if (Math.abs(resultSpeed) < this._private__minSpeed) {\n            return;\n        }\n        this._private__animationStartPosition = { _internal_position: position, _internal_time: time };\n        this._private__speedPxPerMsec = resultSpeed;\n        this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n    }\n    _internal_getPosition(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const durationMsecs = time - startPosition._internal_time;\n        return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / (Math.log(this._private__dumpingCoeff));\n    }\n    _internal_finished(time) {\n        return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n    }\n    _private__progressDuration(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const progress = time - startPosition._internal_time;\n        return Math.min(progress, this._private__durationMsecs);\n    }\n}\n\nfunction createBoundCanvas(parentElement, size) {\n    const doc = ensureNotNull(parentElement.ownerDocument);\n    const canvas = doc.createElement('canvas');\n    parentElement.appendChild(canvas);\n    const binding = bindCanvasElementBitmapSizeTo(canvas, {\n        type: 'device-pixel-content-box',\n        options: {\n            allowResizeObserver: false,\n        },\n        transform: (bitmapSize, canvasElementClientSize) => ({\n            width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n            height: Math.max(bitmapSize.height, canvasElementClientSize.height),\n        }),\n    });\n    binding.resizeCanvasElement(size);\n    return binding;\n}\nfunction releaseCanvas(canvas) {\n    var _a;\n    // This function fixes the iOS Safari error \"Total canvas memory use exceeds the maximum limit\".\n    // Seems that iOS Safari stores canvas elements for some additional time internally.\n    // So if we create/destroy a lot of canvas elements in a short period of time we can get this error.\n    // We resize the canvas to 1x1 pixels to force it to release memmory resources.\n    canvas.width = 1;\n    canvas.height = 1;\n    (_a = canvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.clearRect(0, 0, 1, 1);\n}\n\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n    if (renderer._internal_drawBackground) {\n        renderer._internal_drawBackground(target, isHovered, hitTestData);\n    }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n    renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, pane) {\n    const paneViews = paneViewsGetter(source, pane);\n    for (const paneView of paneViews) {\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null) {\n            drawRendererFn(renderer);\n        }\n    }\n}\n\nfunction preventScrollByWheelClick(el) {\n    if (!isChrome()) {\n        return;\n    }\n    el.addEventListener('mousedown', (e) => {\n        if (e.button === 1 /* MouseEventButton.Middle */) {\n            // prevent incorrect scrolling event\n            e.preventDefault();\n            return false;\n        }\n        return undefined;\n    });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n    constructor(target, handler, options) {\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__longTapTimeoutId = null;\n        this._private__longTapActive = false;\n        this._private__mouseMoveStartPosition = null;\n        this._private__touchMoveStartPosition = null;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__cancelClick = false;\n        this._private__cancelTap = false;\n        this._private__unsubscribeOutsideMouseEvents = null;\n        this._private__unsubscribeOutsideTouchEvents = null;\n        this._private__unsubscribeMobileSafariEvents = null;\n        this._private__unsubscribeMousemove = null;\n        this._private__unsubscribeRootMouseEvents = null;\n        this._private__unsubscribeRootTouchEvents = null;\n        this._private__startPinchMiddlePoint = null;\n        this._private__startPinchDistance = 0;\n        this._private__pinchPrevented = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__mousePressed = false;\n        this._private__lastTouchEventTimeStamp = 0;\n        // for touchstart/touchmove/touchend events we handle only first touch\n        // i.e. we don't support several active touches at the same time (except pinch event)\n        this._private__activeTouchId = null;\n        // accept all mouse leave events if it's not an iOS device\n        // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n        this._private__acceptMouseLeave = !isIOS();\n        /**\n         * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n         * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n         * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n         */\n        this._private__onFirefoxOutsideMouseUp = (mouseUpEvent) => {\n            this._private__mouseUpHandler(mouseUpEvent);\n        };\n        /**\n         * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n         * There are two possible solutions:\n         * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n         * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n         * https://developer.apple.com/forums/thread/125073\n         */\n        this._private__onMobileSafariDoubleClick = (dblClickEvent) => {\n            if (this._private__firesTouchEvents(dblClickEvent)) {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__tapCount;\n                if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n                    if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n                    }\n                    this._private__resetTapTimeout();\n                }\n            }\n            else {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__clickCount;\n                if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n                    if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n                    }\n                    this._private__resetClickTimeout();\n                }\n            }\n        };\n        this._private__target = target;\n        this._private__handler = handler;\n        this._private__options = options;\n        this._private__init();\n    }\n    _internal_destroy() {\n        if (this._private__unsubscribeOutsideMouseEvents !== null) {\n            this._private__unsubscribeOutsideMouseEvents();\n            this._private__unsubscribeOutsideMouseEvents = null;\n        }\n        if (this._private__unsubscribeOutsideTouchEvents !== null) {\n            this._private__unsubscribeOutsideTouchEvents();\n            this._private__unsubscribeOutsideTouchEvents = null;\n        }\n        if (this._private__unsubscribeMousemove !== null) {\n            this._private__unsubscribeMousemove();\n            this._private__unsubscribeMousemove = null;\n        }\n        if (this._private__unsubscribeRootMouseEvents !== null) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (this._private__unsubscribeRootTouchEvents !== null) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        if (this._private__unsubscribeMobileSafariEvents !== null) {\n            this._private__unsubscribeMobileSafariEvents();\n            this._private__unsubscribeMobileSafariEvents = null;\n        }\n        this._private__clearLongTapTimeout();\n        this._private__resetClickTimeout();\n    }\n    _private__mouseEnterHandler(enterEvent) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n        this._private__unsubscribeMousemove = () => {\n            this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n        };\n        this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n        if (this._private__firesTouchEvents(enterEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(enterEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__resetClickTimeout() {\n        if (this._private__clickTimeoutId !== null) {\n            clearTimeout(this._private__clickTimeoutId);\n        }\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__resetTapTimeout() {\n        if (this._private__tapTimeoutId !== null) {\n            clearTimeout(this._private__tapTimeoutId);\n        }\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__mouseMoveHandler(moveEvent) {\n        if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n            return;\n        }\n        if (this._private__firesTouchEvents(moveEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(moveEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__touchMoveHandler(moveEvent) {\n        const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n        if (this._private__startPinchMiddlePoint !== null) {\n            return;\n        }\n        if (this._private__preventTouchDragProcess) {\n            return;\n        }\n        // prevent pinch if move event comes faster than the second touch\n        this._private__pinchPrevented = true;\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n        const { _internal_xOffset: xOffset, _internal_yOffset: yOffset, _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n            return;\n        }\n        if (!this._private__touchMoveExceededManhattanDistance) {\n            // first time when current position exceeded manhattan distance\n            // vertical drag is more important than horizontal drag\n            // because we scroll the page vertically often than horizontally\n            const correctedXOffset = xOffset * 0.5;\n            // a drag can be only if touch page scroll isn't allowed\n            const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n            const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n            // if drag event happened then we should revert preventDefault state to original one\n            // and try to process the drag event\n            // else we shouldn't prevent default of the event and ignore processing the drag event\n            if (!isVertDrag && !isHorzDrag) {\n                this._private__preventTouchDragProcess = true;\n            }\n            this._private__touchMoveExceededManhattanDistance = true;\n            // if manhattan distance is more that 5 - we should cancel tap event\n            this._private__cancelTap = true;\n            this._private__clearLongTapTimeout();\n            this._private__resetTapTimeout();\n        }\n        if (!this._private__preventTouchDragProcess) {\n            const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n            // we should prevent default in case of touch only\n            // to prevent scroll of the page\n            preventDefault(moveEvent);\n        }\n    }\n    _private__mouseMoveWithDownHandler(moveEvent) {\n        if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n        const { _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n            // if manhattan distance is more that 5 - we should cancel click event\n            this._private__cancelClick = true;\n            this._private__resetClickTimeout();\n        }\n        if (this._private__cancelClick) {\n            // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n            const compatEvent = this._private__makeCompatEvent(moveEvent);\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n        }\n    }\n    _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n        const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n        const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n        const manhattanDistance = xOffset + yOffset;\n        return {\n            _internal_xOffset: xOffset,\n            _internal_yOffset: yOffset,\n            _internal_manhattanDistance: manhattanDistance,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _private__touchEndHandler(touchEndEvent) {\n        let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null && touchEndEvent.touches.length === 0) {\n            // something went wrong, somehow we missed the required touchend event\n            // probably the browser has not sent this event\n            touch = touchEndEvent.changedTouches[0];\n        }\n        if (touch === null) {\n            return;\n        }\n        this._private__activeTouchId = null;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n        this._private__clearLongTapTimeout();\n        this._private__touchMoveStartPosition = null;\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n            if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n            }\n            this._private__resetTapTimeout();\n        }\n        else {\n            if (!this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n                // do not fire mouse events if tap handler was executed\n                // prevent click event on new dom element (who appeared after tap)\n                if (this._private__handler._internal_tapEvent) {\n                    preventDefault(touchEndEvent);\n                }\n            }\n        }\n        // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n        // we handle mouseDoubleClickEvent here ourselves\n        if (this._private__tapCount === 0) {\n            preventDefault(touchEndEvent);\n        }\n        if (touchEndEvent.touches.length === 0) {\n            if (this._private__longTapActive) {\n                this._private__longTapActive = false;\n                // prevent native click event\n                preventDefault(touchEndEvent);\n            }\n        }\n    }\n    _private__mouseUpHandler(mouseUpEvent) {\n        if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n        this._private__mouseMoveStartPosition = null;\n        this._private__mousePressed = false;\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (isFF()) {\n            const rootElement = this._private__target.ownerDocument.documentElement;\n            rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        if (this._private__firesTouchEvents(mouseUpEvent)) {\n            return;\n        }\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n            if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n            }\n            this._private__resetClickTimeout();\n        }\n        else {\n            if (!this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n            }\n        }\n    }\n    _private__clearLongTapTimeout() {\n        if (this._private__longTapTimeoutId === null) {\n            return;\n        }\n        clearTimeout(this._private__longTapTimeoutId);\n        this._private__longTapTimeoutId = null;\n    }\n    _private__touchStartHandler(downEvent) {\n        if (this._private__activeTouchId !== null) {\n            return;\n        }\n        const touch = downEvent.changedTouches[0];\n        this._private__activeTouchId = touch.identifier;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        this._private__cancelTap = false;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__touchMoveStartPosition = getPosition(touch);\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        {\n            const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n            const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n            this._private__unsubscribeRootTouchEvents = () => {\n                rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n                rootElement.removeEventListener('touchend', boundTouchEndHandler);\n            };\n            rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, { passive: false });\n            rootElement.addEventListener('touchend', boundTouchEndHandler, { passive: false });\n            this._private__clearLongTapTimeout();\n            this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n        if (!this._private__tapTimeoutId) {\n            this._private__tapCount = 0;\n            this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__tapPosition = getPosition(touch);\n        }\n    }\n    _private__mouseDownHandler(downEvent) {\n        if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        if (isFF()) {\n            rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        this._private__cancelClick = false;\n        this._private__mouseMoveStartPosition = getPosition(downEvent);\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        {\n            const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n            const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n            this._private__unsubscribeRootMouseEvents = () => {\n                rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n                rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n            };\n            rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n            rootElement.addEventListener('mouseup', boundMouseUpHandler);\n        }\n        this._private__mousePressed = true;\n        if (this._private__firesTouchEvents(downEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n        if (!this._private__clickTimeoutId) {\n            this._private__clickCount = 0;\n            this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__clickPosition = getPosition(downEvent);\n        }\n    }\n    _private__init() {\n        this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n        // Do not show context menu when something went wrong\n        this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n        {\n            const doc = this._private__target.ownerDocument;\n            const outsideHandler = (event) => {\n                if (!this._private__handler._internal_mouseDownOutsideEvent) {\n                    return;\n                }\n                if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n                    return;\n                }\n                if (event.target && this._private__target.contains(event.target)) {\n                    return;\n                }\n                this._private__handler._internal_mouseDownOutsideEvent();\n            };\n            this._private__unsubscribeOutsideTouchEvents = () => {\n                doc.removeEventListener('touchstart', outsideHandler);\n            };\n            this._private__unsubscribeOutsideMouseEvents = () => {\n                doc.removeEventListener('mousedown', outsideHandler);\n            };\n            doc.addEventListener('mousedown', outsideHandler);\n            doc.addEventListener('touchstart', outsideHandler, { passive: true });\n        }\n        if (isIOS()) {\n            this._private__unsubscribeMobileSafariEvents = () => {\n                this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n            };\n            this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n        }\n        this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n        this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), { passive: true });\n        preventScrollByWheelClick(this._private__target);\n        this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n        this._private__initPinch();\n        // Hey mobile Safari, what's up?\n        // If mobile Safari doesn't have any touchmove handler with passive=false\n        // it treats a touchstart and the following touchmove events as cancelable=false,\n        // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n        // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n        this._private__target.addEventListener('touchmove', () => { }, { passive: false });\n    }\n    _private__initPinch() {\n        if (this._private__handler._internal_pinchStartEvent === undefined &&\n            this._private__handler._internal_pinchEvent === undefined &&\n            this._private__handler._internal_pinchEndEvent === undefined) {\n            return;\n        }\n        this._private__target.addEventListener('touchstart', (event) => this._private__checkPinchState(event.touches), { passive: true });\n        this._private__target.addEventListener('touchmove', (event) => {\n            if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n                return;\n            }\n            if (this._private__handler._internal_pinchEvent !== undefined) {\n                const currentDistance = getDistance(event.touches[0], event.touches[1]);\n                const scale = currentDistance / this._private__startPinchDistance;\n                this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n                preventDefault(event);\n            }\n        }, { passive: false });\n        this._private__target.addEventListener('touchend', (event) => {\n            this._private__checkPinchState(event.touches);\n        });\n    }\n    _private__checkPinchState(touches) {\n        if (touches.length === 1) {\n            this._private__pinchPrevented = false;\n        }\n        if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n            this._private__stopPinch();\n        }\n        else {\n            this._private__startPinch(touches);\n        }\n    }\n    _private__startPinch(touches) {\n        const box = getBoundingClientRect(this._private__target);\n        this._private__startPinchMiddlePoint = {\n            _internal_x: ((touches[0].clientX - box.left) + (touches[1].clientX - box.left)) / 2,\n            _internal_y: ((touches[0].clientY - box.top) + (touches[1].clientY - box.top)) / 2,\n        };\n        this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n        if (this._private__handler._internal_pinchStartEvent !== undefined) {\n            this._private__handler._internal_pinchStartEvent();\n        }\n        this._private__clearLongTapTimeout();\n    }\n    _private__stopPinch() {\n        if (this._private__startPinchMiddlePoint === null) {\n            return;\n        }\n        this._private__startPinchMiddlePoint = null;\n        if (this._private__handler._internal_pinchEndEvent !== undefined) {\n            this._private__handler._internal_pinchEndEvent();\n        }\n    }\n    _private__mouseLeaveHandler(event) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        if (this._private__firesTouchEvents(event)) {\n            return;\n        }\n        if (!this._private__acceptMouseLeave) {\n            // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n            // just ignore this event if there was no mouse move or mouse enter events\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n        // accept all mouse leave events if it's not an iOS device\n        this._private__acceptMouseLeave = !isIOS();\n    }\n    _private__longTapHandler(event) {\n        const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n        this._private__cancelTap = true;\n        // long tap is active until touchend event with 0 touches occurred\n        this._private__longTapActive = true;\n    }\n    _private__firesTouchEvents(e) {\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n            return e.sourceCapabilities.firesTouchEvents;\n        }\n        return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n    }\n    _private__processTouchEvent(event, callback) {\n        if (callback) {\n            callback.call(this._private__handler, event);\n        }\n    }\n    _private__processMouseEvent(event, callback) {\n        if (!callback) {\n            return;\n        }\n        callback.call(this._private__handler, event);\n    }\n    _private__makeCompatEvent(event, touch) {\n        // TouchEvent has no clientX/Y coordinates:\n        // We have to use the last Touch instead\n        const eventLike = touch || event;\n        const box = this._private__target.getBoundingClientRect() || { left: 0, top: 0 };\n        return {\n            clientX: eventLike.clientX,\n            clientY: eventLike.clientY,\n            pageX: eventLike.pageX,\n            pageY: eventLike.pageY,\n            screenX: eventLike.screenX,\n            screenY: eventLike.screenY,\n            localX: (eventLike.clientX - box.left),\n            localY: (eventLike.clientY - box.top),\n            ctrlKey: event.ctrlKey,\n            altKey: event.altKey,\n            shiftKey: event.shiftKey,\n            metaKey: event.metaKey,\n            _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n            _internal_srcType: event.type,\n            _internal_target: eventLike.target,\n            _internal_view: event.view,\n            _internal_preventDefault: () => {\n                if (event.type !== 'touchstart') {\n                    // touchstart is passive and cannot be prevented\n                    preventDefault(event);\n                }\n            },\n        };\n    }\n}\nfunction getBoundingClientRect(element) {\n    return element.getBoundingClientRect() || { left: 0, top: 0 };\n}\nfunction getDistance(p1, p2) {\n    const xDiff = p1.clientX - p2.clientX;\n    const yDiff = p1.clientY - p2.clientY;\n    return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n    if (event.cancelable) {\n        event.preventDefault();\n    }\n}\nfunction getPosition(eventLike) {\n    return {\n        _internal_x: eventLike.pageX,\n        _internal_y: eventLike.pageY,\n    };\n}\nfunction eventTimeStamp(e) {\n    // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n    return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n    for (let i = 0; i < touches.length; ++i) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return null;\n}\n\n// returns true if item is above reference\nfunction comparePrimitiveZOrder(item, reference) {\n    return (!reference ||\n        (item === 'top' && reference !== 'top') ||\n        (item === 'normal' && reference === 'bottom'));\n}\nfunction findBestPrimitiveHitTest(sources, x, y) {\n    var _a, _b;\n    let bestPrimitiveHit;\n    let bestHitSource;\n    for (const source of sources) {\n        const primitiveHitResults = (_b = (_a = source._internal_primitiveHitTest) === null || _a === void 0 ? void 0 : _a.call(source, x, y)) !== null && _b !== void 0 ? _b : [];\n        for (const hitResult of primitiveHitResults) {\n            if (comparePrimitiveZOrder(hitResult.zOrder, bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit.zOrder)) {\n                bestPrimitiveHit = hitResult;\n                bestHitSource = source;\n            }\n        }\n    }\n    if (!bestPrimitiveHit || !bestHitSource) {\n        return null;\n    }\n    return {\n        _internal_hit: bestPrimitiveHit,\n        _internal_source: bestHitSource,\n    };\n}\nfunction convertPrimitiveHitResult(primitiveHit) {\n    return {\n        _internal_source: primitiveHit._internal_source,\n        _internal_object: {\n            _internal_externalId: primitiveHit._internal_hit.externalId,\n        },\n        _internal_cursorStyle: primitiveHit._internal_hit.cursorStyle,\n    };\n}\n/**\n * Performs a hit test on a collection of pane views to determine which view and object\n * is located at a given coordinate (x, y) and returns the matching pane view and\n * hit-tested result object, or null if no match is found.\n */\nfunction hitTestPaneView(paneViews, x, y) {\n    for (const paneView of paneViews) {\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null && renderer._internal_hitTest) {\n            const result = renderer._internal_hitTest(x, y);\n            if (result !== null) {\n                return {\n                    _internal_view: paneView,\n                    _internal_object: result,\n                };\n            }\n        }\n    }\n    return null;\n}\nfunction hitTestPane(pane, x, y) {\n    const sources = pane._internal_orderedSources();\n    const bestPrimitiveHit = findBestPrimitiveHitTest(sources, x, y);\n    if ((bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit.zOrder) === 'top') {\n        // a primitive hit on the 'top' layer will always beat the built-in hit tests\n        // (on normal layer) so we can return early here.\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    for (const source of sources) {\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && !bestPrimitiveHit._internal_hit.isBackground) {\n            // a primitive will be drawn above a built-in item like a series marker\n            // therefore it takes precedence here.\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n        const sourceResult = hitTestPaneView(source._internal_paneViews(pane), x, y);\n        if (sourceResult !== null) {\n            return {\n                _internal_source: source,\n                _internal_view: sourceResult._internal_view,\n                _internal_object: sourceResult._internal_object,\n            };\n        }\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && bestPrimitiveHit._internal_hit.isBackground) {\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n    }\n    if (bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit) {\n        // return primitive hits for the 'bottom' layer\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    return null;\n}\n\nfunction buildPriceAxisViewsGetter(zOrder, priceScaleId) {\n    return (source) => {\n        var _a, _b, _c, _d;\n        const psId = (_b = (_a = source._internal_priceScale()) === null || _a === void 0 ? void 0 : _a._internal_id()) !== null && _b !== void 0 ? _b : '';\n        if (psId !== priceScaleId) {\n            // exclude if source is using a different price scale.\n            return [];\n        }\n        return (_d = (_c = source._internal_pricePaneViews) === null || _c === void 0 ? void 0 : _c.call(source, zOrder)) !== null && _d !== void 0 ? _d : [];\n    };\n}\nclass PriceAxisWidget {\n    constructor(pane, options, rendererOptionsProvider, side) {\n        this._private__priceScale = null;\n        this._private__size = null;\n        this._private__mousedown = false;\n        this._private__widthCache = new TextWidthCache(200);\n        this._private__font = null;\n        this._private__prevOptimalWidth = 0;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__pane = pane;\n        this._private__options = options;\n        this._private__layoutOptions = options.layout;\n        this._private__rendererOptionsProvider = rendererOptionsProvider;\n        this._private__isLeft = side === 'left';\n        this._private__sourcePaneViews = buildPriceAxisViewsGetter('normal', side);\n        this._private__sourceTopPaneViews = buildPriceAxisViewsGetter('top', side);\n        this._private__sourceBottomPaneViews = buildPriceAxisViewsGetter('bottom', side);\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.left = '0';\n        this._private__cell.style.position = 'relative';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        const handler = {\n            _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n            _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n            _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n            _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n            _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n            _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n            _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this),\n        };\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n            _internal_treatVertTouchDragAsPageScroll: () => !this._private__options.handleScroll.vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => true,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = null;\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_rendererOptions() {\n        const options = this._private__rendererOptionsProvider._internal_options();\n        const isFontChanged = this._private__font !== options._internal_font;\n        if (isFontChanged) {\n            this._private__widthCache._internal_reset();\n            this._private__font = options._internal_font;\n        }\n        return options;\n    }\n    _internal_optimalWidth() {\n        if (this._private__priceScale === null) {\n            return 0;\n        }\n        let tickMarkMaxWidth = 0;\n        const rendererOptions = this._internal_rendererOptions();\n        const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d'));\n        ctx.save();\n        const tickMarks = this._private__priceScale._internal_marks();\n        ctx.font = this._private__baseFont();\n        if (tickMarks.length > 0) {\n            tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n        }\n        const views = this._private__backLabels();\n        for (let j = views.length; j--;) {\n            const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n            if (width > tickMarkMaxWidth) {\n                tickMarkMaxWidth = width;\n            }\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (firstValue !== null && this._private__size !== null) {\n            const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n            const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n            tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n        }\n        ctx.restore();\n        const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n        const res = Math.ceil(rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingInner +\n            rendererOptions._internal_paddingOuter +\n            5 /* Constants.LabelOffset */ +\n            resultTickMarksMaxWidth);\n        // make it even, remove this after migration to perfect fancy canvas\n        return suggestPriceScaleWidth(res);\n    }\n    _internal_setSize(newSize) {\n        if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__topCanvasBinding.resizeCanvasElement(newSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n        }\n    }\n    _internal_getWidth() {\n        return ensureNotNull(this._private__size).width;\n    }\n    _internal_setPriceScale(priceScale) {\n        if (this._private__priceScale === priceScale) {\n            return;\n        }\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = priceScale;\n        priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n    }\n    _internal_priceScale() {\n        return this._private__priceScale;\n    }\n    _internal_reset() {\n        const pane = this._private__pane._internal_state();\n        const model = this._private__pane._internal_chart()._internal_model();\n        model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n    }\n    _internal_paint(type) {\n        if (this._private__size === null) {\n            return;\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__alignLabels();\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                });\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourceBottomPaneViews);\n                this._private__drawTickMarks(target);\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourcePaneViews);\n                this._private__drawBackLabels(target);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshairLabel(topTarget);\n            this._private__pane._internal_drawAdditionalSources(topTarget, this._private__sourceTopPaneViews);\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_update() {\n        var _a;\n        // this call has side-effect - it regenerates marks on the price scale\n        (_a = this._private__priceScale) === null || _a === void 0 ? void 0 : _a._internal_marks();\n    }\n    _private__mouseDownEvent(e) {\n        if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = true;\n        model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n    }\n    _private__pressedMouseMoveEvent(e) {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        model._internal_scalePriceTo(pane, priceScale, e.localY);\n    }\n    _private__mouseDownOutsideEvent() {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        if (this._private__mousedown) {\n            this._private__mousedown = false;\n            model._internal_endScalePrice(pane, priceScale);\n        }\n    }\n    _private__mouseUpEvent(e) {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = false;\n        model._internal_endScalePrice(pane, this._private__priceScale);\n    }\n    _private__mouseDoubleClickEvent(e) {\n        if (this._private__options.handleScale.axisDoubleClickReset.price) {\n            this._internal_reset();\n        }\n    }\n    _private__mouseEnterEvent(e) {\n        if (this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        if (model._internal_options().handleScale.axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n            this._private__setCursor(1 /* CursorType.NsResize */);\n        }\n    }\n    _private__mouseLeaveEvent(e) {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _private__backLabels() {\n        const res = [];\n        const priceScale = (this._private__priceScale === null) ? undefined : this._private__priceScale;\n        const addViewsForSources = (sources) => {\n            for (let i = 0; i < sources.length; ++i) {\n                const source = sources[i];\n                const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n                for (let j = 0; j < views.length; j++) {\n                    res.push(views[j]);\n                }\n            }\n        };\n        // calculate max and min coordinates for views on selection\n        // crosshair individually\n        addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n        return res;\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__pane._internal_state()._internal_model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, topColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio }) {\n        if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n            return;\n        }\n        ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n        const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n        let left;\n        if (this._private__isLeft) {\n            left = bitmapSize.width - borderSize;\n        }\n        else {\n            left = 0;\n        }\n        ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n    }\n    _private__drawTickMarks(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const tickMarks = this._private__priceScale._internal_marks();\n        const priceScaleOptions = this._private__priceScale._internal_options();\n        const rendererOptions = this._internal_rendererOptions();\n        const tickMarkLeftX = this._private__isLeft ?\n            (this._private__size.width - rendererOptions._internal_tickLength) :\n            0;\n        if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.fillStyle = priceScaleOptions.borderColor;\n                const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n                const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n                const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n                ctx.beginPath();\n                for (const tickMark of tickMarks) {\n                    ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            var _a;\n            ctx.font = this._private__baseFont();\n            ctx.fillStyle = (_a = priceScaleOptions.textColor) !== null && _a !== void 0 ? _a : this._private__layoutOptions.textColor;\n            ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            const textLeftX = this._private__isLeft ?\n                Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) :\n                Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n            const yMidCorrections = tickMarks.map((mark) => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n            for (let i = tickMarks.length; i--;) {\n                const tickMark = tickMarks[i];\n                ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n            }\n        });\n    }\n    _private__alignLabels() {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        let center = this._private__size.height / 2;\n        const views = [];\n        const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n        const pane = this._private__pane;\n        const paneState = pane._internal_state();\n        const rendererOptions = this._internal_rendererOptions();\n        // if we are default price scale, append labels from no-scale\n        const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n        if (isDefault) {\n            this._private__pane._internal_state()._internal_orderedSources().forEach((source) => {\n                if (paneState._internal_isOverlay(source)) {\n                    orderedSources.push(source);\n                }\n            });\n        }\n        // we can use any, but let's use the first source as \"center\" one\n        const centerSource = this._private__priceScale._internal_dataSources()[0];\n        const priceScale = this._private__priceScale;\n        const updateForSources = (sources) => {\n            sources.forEach((source) => {\n                const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n                // never align selected sources\n                sourceViews.forEach((view) => {\n                    view._internal_setFixedCoordinate(null);\n                    if (view._internal_isVisible()) {\n                        views.push(view);\n                    }\n                });\n                if (centerSource === source && sourceViews.length > 0) {\n                    center = sourceViews[0]._internal_coordinate();\n                }\n            });\n        };\n        // crosshair individually\n        updateForSources(orderedSources);\n        views.forEach((view) => view._internal_setFixedCoordinate(view._internal_coordinate()));\n        const options = this._private__priceScale._internal_options();\n        if (!options.alignLabels) {\n            return;\n        }\n        this._private__fixLabelOverlap(views, rendererOptions, center);\n    }\n    _private__fixLabelOverlap(views, rendererOptions, center) {\n        if (this._private__size === null) {\n            return;\n        }\n        // split into two parts\n        const top = views.filter((view) => view._internal_coordinate() <= center);\n        const bottom = views.filter((view) => view._internal_coordinate() > center);\n        // sort top from center to top\n        top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n        // share center label\n        if (top.length && bottom.length) {\n            bottom.push(top[0]);\n        }\n        bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n        for (const view of views) {\n            const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n            const coordinate = view._internal_coordinate();\n            if (coordinate > -halfHeight && coordinate < halfHeight) {\n                view._internal_setFixedCoordinate(halfHeight);\n            }\n            if (coordinate > (this._private__size.height - halfHeight) && coordinate < this._private__size.height + halfHeight) {\n                view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n            }\n        }\n        for (let i = 1; i < top.length; i++) {\n            const view = top[i];\n            const prev = top[i - 1];\n            const height = prev._internal_height(rendererOptions, false);\n            const coordinate = view._internal_coordinate();\n            const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n            if (coordinate > prevFixedCoordinate - height) {\n                view._internal_setFixedCoordinate(prevFixedCoordinate - height);\n            }\n        }\n        for (let j = 1; j < bottom.length; j++) {\n            const view = bottom[j];\n            const prev = bottom[j - 1];\n            const height = prev._internal_height(rendererOptions, true);\n            const coordinate = view._internal_coordinate();\n            const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n            if (coordinate < prevFixedCoordinate + height) {\n                view._internal_setFixedCoordinate(prevFixedCoordinate + height);\n            }\n        }\n    }\n    _private__drawBackLabels(target) {\n        if (this._private__size === null) {\n            return;\n        }\n        const views = this._private__backLabels();\n        const rendererOptions = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((view) => {\n            if (view._internal_isAxisLabelVisible()) {\n                const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n                renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n            }\n        });\n    }\n    _private__drawCrosshairLabel(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const views = []; // array of arrays\n        const pane = this._private__pane._internal_state();\n        const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n        if (v.length) {\n            views.push(v);\n        }\n        const ro = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((arr) => {\n            arr.forEach((view) => {\n                view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n            });\n        });\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n    }\n    _private__onMarksChanged() {\n        const width = this._internal_optimalWidth();\n        // avoid price scale is shrunk\n        // using < instead !== to avoid infinite changes\n        if (this._private__prevOptimalWidth < width) {\n            this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n        }\n        this._private__prevOptimalWidth = width;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n    }\n}\n\nfunction sourceBottomPaneViews$1(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_bottomPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourcePaneViews$1(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_paneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceLabelPaneViews(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_labelPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceTopPaneViews$1(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_topPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nclass PaneWidget {\n    constructor(chart, state) {\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__leftPriceAxisWidget = null;\n        this._private__rightPriceAxisWidget = null;\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__prevPinchScale = 0;\n        this._private__longTap = false;\n        this._private__startTrackPoint = null;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__initCrosshairPosition = null;\n        this._private__scrollXAnimation = null;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__chart = chart;\n        this._private__state = state;\n        this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n        this._private__paneCell = document.createElement('td');\n        this._private__paneCell.style.padding = '0';\n        this._private__paneCell.style.position = 'relative';\n        const paneWrapper = document.createElement('div');\n        paneWrapper.style.width = '100%';\n        paneWrapper.style.height = '100%';\n        paneWrapper.style.position = 'relative';\n        paneWrapper.style.overflow = 'hidden';\n        this._private__leftAxisCell = document.createElement('td');\n        this._private__leftAxisCell.style.padding = '0';\n        this._private__rightAxisCell = document.createElement('td');\n        this._private__rightAxisCell.style.padding = '0';\n        this._private__paneCell.appendChild(paneWrapper);\n        this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__rowElement = document.createElement('tr');\n        this._private__rowElement.appendChild(this._private__leftAxisCell);\n        this._private__rowElement.appendChild(this._private__paneCell);\n        this._private__rowElement.appendChild(this._private__rightAxisCell);\n        this._internal_updatePriceAxisWidgetsStates();\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_destroy();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_destroy();\n        }\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__mouseEventHandler._internal_destroy();\n    }\n    _internal_state() {\n        return ensureNotNull(this._private__state);\n    }\n    _internal_setState(pane) {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = pane;\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n        }\n        this._internal_updatePriceAxisWidgetsStates();\n    }\n    _internal_chart() {\n        return this._private__chart;\n    }\n    _internal_getElement() {\n        return this._private__rowElement;\n    }\n    _internal_updatePriceAxisWidgetsStates() {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__recreatePriceAxisWidgets();\n        if (this._private__model()._internal_serieses().length === 0) {\n            return;\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            const leftPriceScale = this._private__state._internal_leftPriceScale();\n            this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            const rightPriceScale = this._private__state._internal_rightPriceScale();\n            this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n        }\n    }\n    _internal_updatePriceAxisWidgets() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_update();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_update();\n        }\n    }\n    _internal_stretchFactor() {\n        return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n    }\n    _internal_setStretchFactor(stretchFactor) {\n        if (this._private__state) {\n            this._private__state._internal_setStretchFactor(stretchFactor);\n        }\n    }\n    _internal_mouseEnterEvent(event) {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n    }\n    _internal_mouseDownEvent(event) {\n        this._private__onMouseEvent();\n        this._private__mouseTouchDownEvent();\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseMoveEvent(event) {\n        var _a;\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n        const hitTest = this._internal_hitTest(x, y);\n        this._private__chart._internal_setCursorStyle((_a = hitTest === null || hitTest === void 0 ? void 0 : hitTest._internal_cursorStyle) !== null && _a !== void 0 ? _a : null);\n        this._private__model()._internal_setHoveredSource(hitTest && { _internal_source: hitTest._internal_source, _internal_object: hitTest._internal_object });\n    }\n    _internal_mouseClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_mouseDoubleClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireMouseClickDelegate(this._private__dblClicked, event);\n    }\n    _internal_doubleTapEvent(event) {\n        this._internal_mouseDoubleClickEvent(event);\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        this._private__onMouseEvent();\n        this._private__pressedMouseTouchMoveEvent(event);\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseUpEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__longTap = false;\n        this._private__endScroll(event);\n    }\n    _internal_tapEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_longTapEvent(event) {\n        this._private__longTap = true;\n        if (this._private__startTrackPoint === null) {\n            const point = { x: event.localX, y: event.localY };\n            this._private__startTrackingMode(point, point, event);\n        }\n    }\n    _internal_mouseLeaveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__state._internal_model()._internal_setHoveredSource(null);\n        this._private__clearCrosshairPosition();\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_pinchStartEvent() {\n        this._private__prevPinchScale = 1;\n        this._private__model()._internal_stopTimeScaleAnimation();\n    }\n    _internal_pinchEvent(middlePoint, scale) {\n        if (!this._private__chart._internal_options().handleScale.pinch) {\n            return;\n        }\n        const zoomScale = (scale - this._private__prevPinchScale) * 5;\n        this._private__prevPinchScale = scale;\n        this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n    }\n    _internal_touchStartEvent(event) {\n        this._private__longTap = false;\n        this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n        this._private__mouseTouchDownEvent();\n        const crosshair = this._private__model()._internal_crosshairSource();\n        if (this._private__startTrackPoint !== null && crosshair._internal_visible()) {\n            this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n            this._private__startTrackPoint = { x: event.localX, y: event.localY };\n        }\n    }\n    _internal_touchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const x = event.localX;\n        const y = event.localY;\n        if (this._private__startTrackPoint !== null) {\n            // tracking mode: move crosshair\n            this._private__exitTrackingModeOnNextTry = false;\n            const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n            const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n            const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n            this._private__setCrosshairPosition(newX, newY, event);\n            return;\n        }\n        this._private__pressedMouseTouchMoveEvent(event);\n    }\n    _internal_touchEndEvent(event) {\n        if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n            this._private__exitTrackingModeOnNextTry = true;\n        }\n        this._private__tryExitTrackingMode();\n        this._private__endScroll(event);\n    }\n    _internal_hitTest(x, y) {\n        const state = this._private__state;\n        if (state === null) {\n            return null;\n        }\n        return hitTestPane(state, x, y);\n    }\n    _internal_setPriceAxisSize(width, position) {\n        const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n        ensureNotNull(priceAxisWidget)._internal_setSize(size$1({ width, height: this._private__size.height }));\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (equalSizes(this._private__size, newSize)) {\n            return;\n        }\n        this._private__size = newSize;\n        this._private__isSettingSize = true;\n        this._private__canvasBinding.resizeCanvasElement(newSize);\n        this._private__topCanvasBinding.resizeCanvasElement(newSize);\n        this._private__isSettingSize = false;\n        this._private__paneCell.style.width = newSize.width + 'px';\n        this._private__paneCell.style.height = newSize.height + 'px';\n    }\n    _internal_recalculatePriceScales() {\n        const pane = ensureNotNull(this._private__state);\n        pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n        pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n        for (const source of pane._internal_dataSources()) {\n            if (pane._internal_isOverlay(source)) {\n                const priceScale = source._internal_priceScale();\n                if (priceScale !== null) {\n                    pane._internal_recalculatePriceScale(priceScale);\n                }\n                // for overlay drawings price scale is owner's price scale\n                // however owner's price scale could not contain ds\n                source._internal_updateAllViews();\n            }\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (this._private__state === null) {\n            return;\n        }\n        if (type > 1 /* InvalidationLevel.Cursor */) {\n            this._internal_recalculatePriceScales();\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_paint(type);\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_paint(type);\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                });\n                if (this._private__state) {\n                    this._private__drawSources(target, sourceBottomPaneViews$1);\n                    this._private__drawGrid(target);\n                    this._private__drawWatermark(target);\n                    this._private__drawSources(target, sourcePaneViews$1);\n                    this._private__drawSources(target, sourceLabelPaneViews);\n                }\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshair(topTarget);\n            this._private__drawSources(topTarget, sourceTopPaneViews$1);\n        }\n    }\n    _internal_leftPriceAxisWidget() {\n        return this._private__leftPriceAxisWidget;\n    }\n    _internal_rightPriceAxisWidget() {\n        return this._private__rightPriceAxisWidget;\n    }\n    _internal_drawAdditionalSources(target, paneViewsGetter) {\n        this._private__drawSources(target, paneViewsGetter);\n    }\n    _private__onStateDestroyed() {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = null;\n    }\n    _private__fireClickedDelegate(event) {\n        this._private__fireMouseClickDelegate(this._private__clicked, event);\n    }\n    _private__fireMouseClickDelegate(delegate, event) {\n        const x = event.localX;\n        const y = event.localY;\n        if (delegate._internal_hasListeners()) {\n            delegate._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), { x, y }, event);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, bottomColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawGrid(target) {\n        const state = ensureNotNull(this._private__state);\n        const paneView = state._internal_grid()._internal_paneView();\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null) {\n            renderer._internal_draw(target, false);\n        }\n    }\n    _private__drawWatermark(target) {\n        const source = this._private__model()._internal_watermarkSource();\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawBackground, source);\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, source);\n    }\n    _private__drawCrosshair(target) {\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, this._private__model()._internal_crosshairSource());\n    }\n    _private__drawSources(target, paneViewsGetter) {\n        const state = ensureNotNull(this._private__state);\n        const sources = state._internal_orderedSources();\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n        }\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n        }\n    }\n    _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n        const state = ensureNotNull(this._private__state);\n        const hoveredSource = state._internal_model()._internal_hoveredSource();\n        const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n        const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_hitTestData\n            : undefined;\n        const drawRendererFn = (renderer) => drawFn(renderer, target, isHovered, objecId);\n        drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, state);\n    }\n    _private__recreatePriceAxisWidgets() {\n        if (this._private__state === null) {\n            return;\n        }\n        const chart = this._private__chart;\n        const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n        const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n        if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n            this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n            this._private__leftPriceAxisWidget._internal_destroy();\n            this._private__leftPriceAxisWidget = null;\n        }\n        if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n            this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n            this._private__rightPriceAxisWidget._internal_destroy();\n            this._private__rightPriceAxisWidget = null;\n        }\n        const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n        if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n            this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n            this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n        }\n        if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n            this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n            this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n        }\n    }\n    _private__preventScroll(event) {\n        return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n    }\n    _private__correctXCoord(x) {\n        return Math.max(0, Math.min(x, this._private__size.width - 1));\n    }\n    _private__correctYCoord(y) {\n        return Math.max(0, Math.min(y, this._private__size.height - 1));\n    }\n    _private__setCrosshairPosition(x, y, event) {\n        this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n    }\n    _private__clearCrosshairPosition() {\n        this._private__model()._internal_clearCurrentPosition();\n    }\n    _private__tryExitTrackingMode() {\n        if (this._private__exitTrackingModeOnNextTry) {\n            this._private__startTrackPoint = null;\n            this._private__clearCrosshairPosition();\n        }\n    }\n    _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n        this._private__startTrackPoint = startTrackPoint;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n        const crosshair = this._private__model()._internal_crosshairSource();\n        this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n    }\n    _private__model() {\n        return this._private__chart._internal_model();\n    }\n    _private__endScroll(event) {\n        if (!this._private__isScrolling) {\n            return;\n        }\n        const model = this._private__model();\n        const state = this._internal_state();\n        model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        model._internal_endScrollTime();\n        if (this._private__scrollXAnimation !== null) {\n            const startAnimationTime = performance.now();\n            const timeScale = model._internal_timeScale();\n            this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n            if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n                model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n            }\n        }\n    }\n    _private__onMouseEvent() {\n        this._private__startTrackPoint = null;\n    }\n    _private__mouseTouchDownEvent() {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__model()._internal_stopTimeScaleAnimation();\n        if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n            // If any focusable element except the page itself is focused, remove the focus\n            ensureNotNull(document.activeElement).blur();\n        }\n        else {\n            // Clear selection\n            const selection = document.getSelection();\n            if (selection !== null) {\n                selection.removeAllRanges();\n            }\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n            return;\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__pressedMouseTouchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const model = this._private__model();\n        const timeScale = model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        const chartOptions = this._private__chart._internal_options();\n        const scrollOptions = chartOptions.handleScroll;\n        const kineticScrollOptions = chartOptions.kineticScroll;\n        if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) &&\n            (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n            return;\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        const now = performance.now();\n        if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n            this._private__startScrollingPos = {\n                x: event.clientX,\n                y: event.clientY,\n                _internal_timestamp: now,\n                _internal_localX: event.localX,\n                _internal_localY: event.localY,\n            };\n        }\n        if (this._private__startScrollingPos !== null &&\n            !this._private__isScrolling &&\n            (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n            if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n                const barSpacing = timeScale._internal_barSpacing();\n                this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n            }\n            else {\n                this._private__scrollXAnimation = null;\n            }\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n            }\n            model._internal_startScrollTime(event.localX);\n            this._private__isScrolling = true;\n        }\n        if (this._private__isScrolling) {\n            // this allows scrolling not default price scales\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n            }\n            model._internal_scrollTimeTo(event.localX);\n            if (this._private__scrollXAnimation !== null) {\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n            }\n        }\n    }\n}\n\nclass PriceAxisStub {\n    constructor(side, options, params, borderVisible, bottomColor) {\n        this._private__invalidated = true;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n        this._private__isLeft = side === 'left';\n        this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n        this._private__options = options;\n        this._private__borderVisible = borderVisible;\n        this._private__bottomColor = bottomColor;\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    }\n    _internal_destroy() {\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (!equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n            this._private__invalidated = true;\n        }\n    }\n    _internal_paint(type) {\n        if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n            return;\n        }\n        if (this._private__size.width === 0 || this._private__size.height === 0) {\n            return;\n        }\n        this._private__invalidated = false;\n        this._private__canvasBinding.applySuggestedBitmapSize();\n        const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n        if (target !== null) {\n            target.useBitmapCoordinateSpace((scope) => {\n                this._private__drawBackground(scope);\n                this._private__drawBorder(scope);\n            });\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (!this._private__borderVisible()) {\n            return;\n        }\n        ctx.fillStyle = this._private__options.timeScale.borderColor;\n        const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n        const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n        const left = (this._private__isLeft) ? bitmapSize.width - horzBorderSize : 0;\n        ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n    }\n}\n\nfunction buildTimeAxisViewsGetter(zOrder) {\n    return (source) => { var _a, _b; return (_b = (_a = source._internal_timePaneViews) === null || _a === void 0 ? void 0 : _a.call(source, zOrder)) !== null && _b !== void 0 ? _b : []; };\n}\nconst sourcePaneViews = buildTimeAxisViewsGetter('normal');\nconst sourceTopPaneViews = buildTimeAxisViewsGetter('top');\nconst sourceBottomPaneViews = buildTimeAxisViewsGetter('bottom');\nclass TimeAxisWidget {\n    constructor(chartWidget, horzScaleBehavior) {\n        this._private__leftStub = null;\n        this._private__rightStub = null;\n        this._private__rendererOptions = null;\n        this._private__mouseDown = false;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__sizeChanged = new Delegate();\n        this._private__widthCache = new TextWidthCache(5);\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__chart = chartWidget;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__options = chartWidget._internal_options().layout;\n        this._private__element = document.createElement('tr');\n        this._private__leftStubCell = document.createElement('td');\n        this._private__leftStubCell.style.padding = '0';\n        this._private__rightStubCell = document.createElement('td');\n        this._private__rightStubCell.style.padding = '0';\n        this._private__cell = document.createElement('td');\n        this._private__cell.style.height = '25px';\n        this._private__cell.style.padding = '0';\n        this._private__dv = document.createElement('div');\n        this._private__dv.style.width = '100%';\n        this._private__dv.style.height = '100%';\n        this._private__dv.style.position = 'relative';\n        this._private__dv.style.overflow = 'hidden';\n        this._private__cell.appendChild(this._private__dv);\n        this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__element.appendChild(this._private__leftStubCell);\n        this._private__element.appendChild(this._private__cell);\n        this._private__element.appendChild(this._private__rightStubCell);\n        this._private__recreateStubs();\n        this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => true,\n            _internal_treatHorzTouchDragAsPageScroll: () => !this._private__chart._internal_options().handleScroll.horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_destroy();\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_destroy();\n        }\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__element;\n    }\n    _internal_leftStub() {\n        return this._private__leftStub;\n    }\n    _internal_rightStub() {\n        return this._private__rightStub;\n    }\n    _internal_mouseDownEvent(event) {\n        if (this._private__mouseDown) {\n            return;\n        }\n        this._private__mouseDown = true;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_startScaleTime(event.localX);\n    }\n    _internal_touchStartEvent(event) {\n        this._internal_mouseDownEvent(event);\n    }\n    _internal_mouseDownOutsideEvent() {\n        const model = this._private__chart._internal_model();\n        if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n            this._private__mouseDown = false;\n            if (this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n                model._internal_endScaleTime();\n            }\n        }\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_scaleTimeTo(event.localX);\n    }\n    _internal_touchMoveEvent(event) {\n        this._internal_pressedMouseMoveEvent(event);\n    }\n    _internal_mouseUpEvent() {\n        this._private__mouseDown = false;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_endScaleTime();\n    }\n    _internal_touchEndEvent() {\n        this._internal_mouseUpEvent();\n    }\n    _internal_mouseDoubleClickEvent() {\n        if (this._private__chart._internal_options().handleScale.axisDoubleClickReset.time) {\n            this._private__chart._internal_model()._internal_resetTimeScale();\n        }\n    }\n    _internal_doubleTapEvent() {\n        this._internal_mouseDoubleClickEvent();\n    }\n    _internal_mouseEnterEvent() {\n        if (this._private__chart._internal_model()._internal_options().handleScale.axisPressedMouseMove.time) {\n            this._private__setCursor(1 /* CursorType.EwResize */);\n        }\n    }\n    _internal_mouseLeaveEvent() {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_sizeChanged() {\n        return this._private__sizeChanged;\n    }\n    _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n        if (!equalSizes(this._private__size, timeAxisSize)) {\n            this._private__size = timeAxisSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${timeAxisSize.width}px`;\n            this._private__cell.style.height = `${timeAxisSize.height}px`;\n            this._private__sizeChanged._internal_fire(timeAxisSize);\n        }\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_setSize(size$1({ width: leftStubWidth, height: timeAxisSize.height }));\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_setSize(size$1({ width: rightStubWidth, height: timeAxisSize.height }));\n        }\n    }\n    _internal_optimalHeight() {\n        const rendererOptions = this._private__getRendererOptions();\n        return Math.ceil(\n        // rendererOptions.offsetSize +\n        rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_paddingBottom +\n            rendererOptions._internal_labelBottomOffset);\n    }\n    _internal_update() {\n        // this call has side-effect - it regenerates marks on the time scale\n        this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                    this._private__drawAdditionalSources(target, sourceBottomPaneViews);\n                });\n                this._private__drawTickMarks(target);\n                this._private__drawAdditionalSources(target, sourcePaneViews);\n                // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n                // so let's don't call this code at all for now\n                // this._drawLabels(this._chart.model().dataSources(), target);\n            }\n            if (this._private__leftStub !== null) {\n                this._private__leftStub._internal_paint(type);\n            }\n            if (this._private__rightStub !== null) {\n                this._private__rightStub._internal_paint(type);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawLabels([...this._private__chart._internal_model()._internal_serieses(), this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n            this._private__drawAdditionalSources(topTarget, sourceTopPaneViews);\n        }\n    }\n    _private__drawAdditionalSources(target, axisViewsGetter) {\n        const sources = this._private__chart._internal_model()._internal_serieses();\n        for (const source of sources) {\n            drawSourcePaneViews(axisViewsGetter, (renderer) => drawBackground(renderer, target, false, undefined), source, undefined);\n        }\n        for (const source of sources) {\n            drawSourcePaneViews(axisViewsGetter, (renderer) => drawForeground(renderer, target, false, undefined), source, undefined);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, verticalPixelRatio }) {\n        if (this._private__chart._internal_options().timeScale.borderVisible) {\n            ctx.fillStyle = this._private__lineColor();\n            const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n            ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n        }\n    }\n    _private__drawTickMarks(target) {\n        const timeScale = this._private__chart._internal_model()._internal_timeScale();\n        const tickMarks = timeScale._internal_marks();\n        if (!tickMarks || tickMarks.length === 0) {\n            return;\n        }\n        const maxWeight = this._private__horzScaleBehavior.maxTickMarkWeight(tickMarks);\n        const rendererOptions = this._private__getRendererOptions();\n        const options = timeScale._internal_options();\n        if (options.borderVisible && options.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.strokeStyle = this._private__lineColor();\n                ctx.fillStyle = this._private__lineColor();\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.beginPath();\n                const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n                for (let index = tickMarks.length; index--;) {\n                    const x = Math.round(tickMarks[index].coord * horizontalPixelRatio);\n                    ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const yText = (rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2);\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = this._private__textColor();\n            // draw base marks\n            ctx.font = this._private__baseFont();\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight < maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n            ctx.font = this._private__baseBoldFont();\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight >= maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n        });\n    }\n    _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n        const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n        const labelWidthHalf = labelWidth / 2;\n        const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (leftTextCoordinate < 0) {\n            coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n        }\n        else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n            coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n        }\n        return coordinate;\n    }\n    _private__drawLabels(sources, target) {\n        const rendererOptions = this._private__getRendererOptions();\n        for (const source of sources) {\n            for (const view of source._internal_timeAxisViews()) {\n                view._internal_renderer()._internal_draw(target, rendererOptions);\n            }\n        }\n    }\n    _private__lineColor() {\n        return this._private__chart._internal_options().timeScale.borderColor;\n    }\n    _private__textColor() {\n        return this._private__options.textColor;\n    }\n    _private__fontSize() {\n        return this._private__options.fontSize;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n    }\n    _private__baseBoldFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n    }\n    _private__getRendererOptions() {\n        if (this._private__rendererOptions === null) {\n            this._private__rendererOptions = {\n                _internal_borderSize: 1 /* Constants.BorderSize */,\n                _internal_baselineOffset: NaN,\n                _internal_paddingTop: NaN,\n                _internal_paddingBottom: NaN,\n                _internal_paddingHorizontal: NaN,\n                _internal_tickLength: 5 /* Constants.TickLength */,\n                _internal_fontSize: NaN,\n                _internal_font: '',\n                _internal_widthCache: new TextWidthCache(),\n                _internal_labelBottomOffset: 0,\n            };\n        }\n        const rendererOptions = this._private__rendererOptions;\n        const newFont = this._private__baseFont();\n        if (rendererOptions._internal_font !== newFont) {\n            const fontSize = this._private__fontSize();\n            rendererOptions._internal_fontSize = fontSize;\n            rendererOptions._internal_font = newFont;\n            rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n            rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n            rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n            rendererOptions._internal_baselineOffset = 0;\n            rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n            rendererOptions._internal_widthCache._internal_reset();\n        }\n        return this._private__rendererOptions;\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n    }\n    _private__recreateStubs() {\n        const model = this._private__chart._internal_model();\n        const options = model._internal_options();\n        if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n            this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n            this._private__leftStub._internal_destroy();\n            this._private__leftStub = null;\n        }\n        if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n            this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n            this._private__rightStub._internal_destroy();\n            this._private__rightStub = null;\n        }\n        const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n        const params = {\n            _internal_rendererOptionsProvider: rendererOptionsProvider,\n        };\n        const borderVisibleGetter = () => {\n            return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n        };\n        const bottomColorGetter = () => model._internal_backgroundBottomColor();\n        if (options.leftPriceScale.visible && this._private__leftStub === null) {\n            this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n        }\n        if (options.rightPriceScale.visible && this._private__rightStub === null) {\n            this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n        }\n    }\n}\n\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n    constructor(container, options, horzScaleBehavior) {\n        this._private__paneWidgets = [];\n        this._private__drawRafId = 0;\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__leftPriceAxisWidth = 0;\n        this._private__rightPriceAxisWidth = 0;\n        this._private__invalidateMask = null;\n        this._private__drawPlanned = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__observer = null;\n        this._private__cursorStyleOverride = null;\n        this._private__container = container;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__element = document.createElement('div');\n        this._private__element.classList.add('tv-lightweight-charts');\n        this._private__element.style.overflow = 'hidden';\n        this._private__element.style.direction = 'ltr';\n        this._private__element.style.width = '100%';\n        this._private__element.style.height = '100%';\n        disableSelection(this._private__element);\n        this._private__tableElement = document.createElement('table');\n        this._private__tableElement.setAttribute('cellspacing', '0');\n        this._private__element.appendChild(this._private__tableElement);\n        this._private__onWheelBound = this._private__onMousewheel.bind(this);\n        if (shouldSubscribeMouseWheel(this._private__options)) {\n            this._private__setMouseWheelEventListener(true);\n        }\n        this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options, horzScaleBehavior);\n        this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n        this._private__timeAxisWidget = new TimeAxisWidget(this, this._private__horzScaleBehavior);\n        this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n        const usedObserver = options.autoSize && this._private__installObserver();\n        // observer could not fire event immediately for some cases\n        // so we have to set initial size manually\n        let width = this._private__options.width;\n        let height = this._private__options.height;\n        // ignore width/height options if observer has actually been used\n        // however respect options if installing resize observer failed\n        if (usedObserver || width === 0 || height === 0) {\n            const containerRect = container.getBoundingClientRect();\n            width = width || containerRect.width;\n            height = height || containerRect.height;\n        }\n        // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n        // or after but with adjustSize to properly update time scale\n        this._internal_resize(width, height);\n        this._private__syncGuiWithModel();\n        container.appendChild(this._private__element);\n        this._private__updateTimeAxisVisibility();\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneWidgets() {\n        return this._private__paneWidgets;\n    }\n    _internal_timeAxisWidget() {\n        return this._private__timeAxisWidget;\n    }\n    _internal_destroy() {\n        this._private__setMouseWheelEventListener(false);\n        if (this._private__drawRafId !== 0) {\n            window.cancelAnimationFrame(this._private__drawRafId);\n        }\n        this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__model._internal_destroy();\n        for (const paneWidget of this._private__paneWidgets) {\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n        }\n        this._private__paneWidgets = [];\n        // for (const paneSeparator of this._paneSeparators) {\n        // \tthis._destroySeparator(paneSeparator);\n        // }\n        // this._paneSeparators = [];\n        ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n        if (this._private__element.parentElement !== null) {\n            this._private__element.parentElement.removeChild(this._private__element);\n        }\n        this._private__crosshairMoved._internal_destroy();\n        this._private__clicked._internal_destroy();\n        this._private__dblClicked._internal_destroy();\n        this._private__uninstallObserver();\n    }\n    _internal_resize(width, height, forceRepaint = false) {\n        if (this._private__height === height && this._private__width === width) {\n            return;\n        }\n        const sizeHint = suggestChartSize(size$1({ width, height }));\n        this._private__height = sizeHint.height;\n        this._private__width = sizeHint.width;\n        const heightStr = this._private__height + 'px';\n        const widthStr = this._private__width + 'px';\n        ensureNotNull(this._private__element).style.height = heightStr;\n        ensureNotNull(this._private__element).style.width = widthStr;\n        this._private__tableElement.style.height = heightStr;\n        this._private__tableElement.style.width = widthStr;\n        if (forceRepaint) {\n            this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n        }\n        else {\n            this._private__model._internal_fullUpdate();\n        }\n    }\n    _internal_paint(invalidateMask) {\n        if (invalidateMask === undefined) {\n            invalidateMask = InvalidateMask._internal_full();\n        }\n        for (let i = 0; i < this._private__paneWidgets.length; i++) {\n            this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n        }\n        if (this._private__options.timeScale.visible) {\n            this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n        }\n    }\n    _internal_applyOptions(options) {\n        const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        // we don't need to merge options here because it's done in chart model\n        // and since both model and widget share the same object it will be done automatically for widget as well\n        // not ideal solution for sure, but it work's for now Â¯\\_(ãƒ„)_/Â¯\n        this._private__model._internal_applyOptions(options);\n        const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n            this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__applyAutoSizeOptions(options);\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_takeScreenshot() {\n        if (this._private__invalidateMask !== null) {\n            this._private__drawImpl(this._private__invalidateMask, performance.now());\n            this._private__invalidateMask = null;\n        }\n        const screeshotBitmapSize = this._private__traverseLayout(null);\n        const screenshotCanvas = document.createElement('canvas');\n        screenshotCanvas.width = screeshotBitmapSize.width;\n        screenshotCanvas.height = screeshotBitmapSize.height;\n        const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n        this._private__traverseLayout(ctx);\n        return screenshotCanvas;\n    }\n    _internal_getPriceAxisWidth(position) {\n        if (position === 'left' && !this._private__isLeftAxisVisible()) {\n            return 0;\n        }\n        if (position === 'right' && !this._private__isRightAxisVisible()) {\n            return 0;\n        }\n        if (this._private__paneWidgets.length === 0) {\n            return 0;\n        }\n        // we don't need to worry about exactly pane widget here\n        // because all pane widgets have the same width of price axis widget\n        // see _adjustSizeImpl\n        const priceAxisWidget = position === 'left'\n            ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget()\n            : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n        return ensureNotNull(priceAxisWidget)._internal_getWidth();\n    }\n    _internal_autoSizeActive() {\n        return this._private__options.autoSize && this._private__observer !== null;\n    }\n    _internal_element() {\n        return this._private__element;\n    }\n    _internal_setCursorStyle(style) {\n        this._private__cursorStyleOverride = style;\n        if (this._private__cursorStyleOverride) {\n            this._internal_element().style.setProperty('cursor', style);\n        }\n        else {\n            this._internal_element().style.removeProperty('cursor');\n        }\n    }\n    _internal_getCursorOverrideStyle() {\n        return this._private__cursorStyleOverride;\n    }\n    _internal_paneSize() {\n        // we currently only support a single pane.\n        return ensureDefined(this._private__paneWidgets[0])._internal_getSize();\n    }\n    // eslint-disable-next-line complexity\n    _private__applyAutoSizeOptions(options) {\n        if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n            warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n            return;\n        }\n        if (options.autoSize && !this._private__observer) {\n            // installing observer will override resize if successful\n            this._private__installObserver();\n        }\n        if (options.autoSize === false && this._private__observer !== null) {\n            this._private__uninstallObserver();\n        }\n        if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n            this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n        }\n    }\n    /**\n     * Traverses the widget's layout (pane and axis child widgets),\n     * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n     *\n     * @param ctx - if passed, used to draw the screenshot of widget\n     * @returns screenshot bitmap size\n     */\n    _private__traverseLayout(ctx) {\n        let totalWidth = 0;\n        let totalHeight = 0;\n        const firstPane = this._private__paneWidgets[0];\n        const drawPriceAxises = (position, targetX) => {\n            let targetY = 0;\n            for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n                const paneWidget = this._private__paneWidgets[paneIndex];\n                const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n                const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n                if (ctx !== null) {\n                    priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n                }\n                targetY += bitmapSize.height;\n                // if (paneIndex < this._paneWidgets.length - 1) {\n                // \tconst separator = this._paneSeparators[paneIndex];\n                // \tconst separatorBitmapSize = separator.getBitmapSize();\n                // \tif (ctx !== null) {\n                // \t\tseparator.drawBitmap(ctx, targetX, targetY);\n                // \t}\n                // \ttargetY += separatorBitmapSize.height;\n                // }\n            }\n        };\n        // draw left price scale if exists\n        if (this._private__isLeftAxisVisible()) {\n            drawPriceAxises('left', 0);\n            const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += leftAxisBitmapWidth;\n        }\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            const bitmapSize = paneWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n            }\n            totalHeight += bitmapSize.height;\n            // if (paneIndex < this._paneWidgets.length - 1) {\n            // \tconst separator = this._paneSeparators[paneIndex];\n            // \tconst separatorBitmapSize = separator.getBitmapSize();\n            // \tif (ctx !== null) {\n            // \t\tseparator.drawBitmap(ctx, totalWidth, totalHeight);\n            // \t}\n            // \ttotalHeight += separatorBitmapSize.height;\n            // }\n        }\n        const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n        totalWidth += firstPaneBitmapWidth;\n        // draw right price scale if exists\n        if (this._private__isRightAxisVisible()) {\n            drawPriceAxises('right', totalWidth);\n            const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += rightAxisBitmapWidth;\n        }\n        const drawStub = (position, targetX, targetY) => {\n            const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n            stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n        };\n        // draw time scale and stubs\n        if (this._private__options.timeScale.visible) {\n            const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                let targetX = 0;\n                if (this._private__isLeftAxisVisible()) {\n                    drawStub('left', targetX, totalHeight);\n                    targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n                }\n                this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n                targetX += timeAxisBitmapSize.width;\n                if (this._private__isRightAxisVisible()) {\n                    drawStub('right', targetX, totalHeight);\n                }\n            }\n            totalHeight += timeAxisBitmapSize.height;\n        }\n        return size$1({\n            width: totalWidth,\n            height: totalHeight,\n        });\n    }\n    // eslint-disable-next-line complexity\n    _private__adjustSizeImpl() {\n        let totalStretch = 0;\n        let leftPriceAxisWidth = 0;\n        let rightPriceAxisWidth = 0;\n        for (const paneWidget of this._private__paneWidgets) {\n            if (this._private__isLeftAxisVisible()) {\n                leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth(), this._private__options.leftPriceScale.minimumWidth);\n            }\n            if (this._private__isRightAxisVisible()) {\n                rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth(), this._private__options.rightPriceScale.minimumWidth);\n            }\n            totalStretch += paneWidget._internal_stretchFactor();\n        }\n        leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n        rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n        const width = this._private__width;\n        const height = this._private__height;\n        const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n        // const separatorCount = this._paneSeparators.length;\n        // const separatorHeight = SEPARATOR_HEIGHT;\n        const separatorsHeight = 0; // separatorHeight * separatorCount;\n        const timeAxisVisible = this._private__options.timeScale.visible;\n        let timeAxisHeight = timeAxisVisible ? Math.max(this._private__timeAxisWidget._internal_optimalHeight(), this._private__options.timeScale.minimumHeight) : 0;\n        timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n        const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n        const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n        const stretchPixels = totalPaneHeight / totalStretch;\n        let accumulatedHeight = 0;\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n            let paneHeight = 0;\n            let calculatePaneHeight = 0;\n            if (paneIndex === this._private__paneWidgets.length - 1) {\n                calculatePaneHeight = totalPaneHeight - accumulatedHeight;\n            }\n            else {\n                calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels);\n            }\n            paneHeight = Math.max(calculatePaneHeight, 2);\n            accumulatedHeight += paneHeight;\n            paneWidget._internal_setSize(size$1({ width: paneWidth, height: paneHeight }));\n            if (this._private__isLeftAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n            }\n            if (this._private__isRightAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n            }\n            if (paneWidget._internal_state()) {\n                this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n            }\n        }\n        this._private__timeAxisWidget._internal_setSizes(size$1({ width: timeAxisVisible ? paneWidth : 0, height: timeAxisHeight }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n        this._private__model._internal_setWidth(paneWidth);\n        if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n            this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n        }\n        if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n            this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n        }\n    }\n    _private__setMouseWheelEventListener(add) {\n        if (add) {\n            this._private__element.addEventListener('wheel', this._private__onWheelBound, { passive: false });\n            return;\n        }\n        this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n    }\n    _private__determineWheelSpeedAdjustment(event) {\n        switch (event.deltaMode) {\n            case event.DOM_DELTA_PAGE:\n                // one screen at time scroll mode\n                return 120;\n            case event.DOM_DELTA_LINE:\n                // one line at time scroll mode\n                return 32;\n        }\n        if (!windowsChrome) {\n            return 1;\n        }\n        // Chromium on Windows has a bug where the scroll speed isn't correctly\n        // adjusted for high density displays. We need to correct for this so that\n        // scroll speed is consistent between browsers.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n        return (1 / window.devicePixelRatio);\n    }\n    _private__onMousewheel(event) {\n        if ((event.deltaX === 0 || !this._private__options.handleScroll.mouseWheel) &&\n            (event.deltaY === 0 || !this._private__options.handleScale.mouseWheel)) {\n            return;\n        }\n        const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n        const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n        const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        if (deltaY !== 0 && this._private__options.handleScale.mouseWheel) {\n            const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n            const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n            this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n        }\n        if (deltaX !== 0 && this._private__options.handleScroll.mouseWheel) {\n            this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n        }\n    }\n    _private__drawImpl(invalidateMask, time) {\n        var _a;\n        const invalidationType = invalidateMask._internal_fullInvalidation();\n        // actions for full invalidation ONLY (not shared with light)\n        if (invalidationType === 3 /* InvalidationLevel.Full */) {\n            this._private__updateGui();\n        }\n        // light or full invalidate actions\n        if (invalidationType === 3 /* InvalidationLevel.Full */ ||\n            invalidationType === 2 /* InvalidationLevel.Light */) {\n            this._private__applyMomentaryAutoScale(invalidateMask);\n            this._private__applyTimeScaleInvalidations(invalidateMask, time);\n            this._private__timeAxisWidget._internal_update();\n            this._private__paneWidgets.forEach((pane) => {\n                pane._internal_updatePriceAxisWidgets();\n            });\n            // In the case a full invalidation has been postponed during the draw, reapply\n            // the timescale invalidations. A full invalidation would mean there is a change\n            // in the timescale width (caused by price scale changes) that needs to be drawn\n            // right away to avoid flickering.\n            if (((_a = this._private__invalidateMask) === null || _a === void 0 ? void 0 : _a._internal_fullInvalidation()) === 3 /* InvalidationLevel.Full */) {\n                this._private__invalidateMask._internal_merge(invalidateMask);\n                this._private__updateGui();\n                this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n                this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n                invalidateMask = this._private__invalidateMask;\n                this._private__invalidateMask = null;\n            }\n        }\n        this._internal_paint(invalidateMask);\n    }\n    _private__applyTimeScaleInvalidations(invalidateMask, time) {\n        for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n        }\n    }\n    _private__applyMomentaryAutoScale(invalidateMask) {\n        const panes = this._private__model._internal_panes();\n        for (let i = 0; i < panes.length; i++) {\n            if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n                panes[i]._internal_momentaryAutoScale();\n            }\n        }\n    }\n    _private__applyTimeScaleInvalidation(invalidation, time) {\n        const timeScale = this._private__model._internal_timeScale();\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                timeScale._internal_fitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                timeScale._internal_setLogicalRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                timeScale._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                timeScale._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                timeScale._internal_restoreDefault();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                if (!invalidation._internal_value._internal_finished(time)) {\n                    timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n                }\n                break;\n        }\n    }\n    _private__invalidateHandler(invalidateMask) {\n        if (this._private__invalidateMask !== null) {\n            this._private__invalidateMask._internal_merge(invalidateMask);\n        }\n        else {\n            this._private__invalidateMask = invalidateMask;\n        }\n        if (!this._private__drawPlanned) {\n            this._private__drawPlanned = true;\n            this._private__drawRafId = window.requestAnimationFrame((time) => {\n                this._private__drawPlanned = false;\n                this._private__drawRafId = 0;\n                if (this._private__invalidateMask !== null) {\n                    const mask = this._private__invalidateMask;\n                    this._private__invalidateMask = null;\n                    this._private__drawImpl(mask, time);\n                    for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n                        if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n                            this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n                            break;\n                        }\n                    }\n                }\n            });\n        }\n    }\n    _private__updateGui() {\n        this._private__syncGuiWithModel();\n    }\n    // private _destroySeparator(separator: PaneSeparator): void {\n    // \tthis._tableElement.removeChild(separator.getElement());\n    // \tseparator.destroy();\n    // }\n    _private__syncGuiWithModel() {\n        const panes = this._private__model._internal_panes();\n        const targetPaneWidgetsCount = panes.length;\n        const actualPaneWidgetsCount = this._private__paneWidgets.length;\n        // Remove (if needed) pane widgets and separators\n        for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n            const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n            // const paneSeparator = this._paneSeparators.pop();\n            // if (paneSeparator !== undefined) {\n            // \tthis._destroySeparator(paneSeparator);\n            // }\n        }\n        // Create (if needed) new pane widgets and separators\n        for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n            const paneWidget = new PaneWidget(this, panes[i]);\n            paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this), this);\n            paneWidget._internal_dblClicked()._internal_subscribe(this._private__onPaneWidgetDblClicked.bind(this), this);\n            this._private__paneWidgets.push(paneWidget);\n            // create and insert separator\n            // if (i > 1) {\n            // \tconst paneSeparator = new PaneSeparator(this, i - 1, i, true);\n            // \tthis._paneSeparators.push(paneSeparator);\n            // \tthis._tableElement.insertBefore(paneSeparator.getElement(), this._timeAxisWidget.getElement());\n            // }\n            // insert paneWidget\n            this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n        }\n        for (let i = 0; i < targetPaneWidgetsCount; i++) {\n            const state = panes[i];\n            const paneWidget = this._private__paneWidgets[i];\n            if (paneWidget._internal_state() !== state) {\n                paneWidget._internal_setState(state);\n            }\n            else {\n                paneWidget._internal_updatePriceAxisWidgetsStates();\n            }\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__adjustSizeImpl();\n    }\n    _private__getMouseEventParamsImpl(index, point, event) {\n        var _a;\n        const seriesData = new Map();\n        if (index !== null) {\n            const serieses = this._private__model._internal_serieses();\n            serieses.forEach((s) => {\n                // TODO: replace with search left\n                const data = s._internal_bars()._internal_search(index);\n                if (data !== null) {\n                    seriesData.set(s, data);\n                }\n            });\n        }\n        let clientTime;\n        if (index !== null) {\n            const timePoint = (_a = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)) === null || _a === void 0 ? void 0 : _a.originalTime;\n            if (timePoint !== undefined) {\n                clientTime = timePoint;\n            }\n        }\n        const hoveredSource = this._internal_model()._internal_hoveredSource();\n        const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series\n            ? hoveredSource._internal_source\n            : undefined;\n        const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_externalId\n            : undefined;\n        return {\n            _internal_originalTime: clientTime,\n            _internal_index: index !== null && index !== void 0 ? index : undefined,\n            _internal_point: point !== null && point !== void 0 ? point : undefined,\n            _internal_hoveredSeries: hoveredSeries,\n            _internal_seriesData: seriesData,\n            _internal_hoveredObject: hoveredObject,\n            _internal_touchMouseEventData: event !== null && event !== void 0 ? event : undefined,\n        };\n    }\n    _private__onPaneWidgetClicked(time, point, event) {\n        this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__onPaneWidgetDblClicked(time, point, event) {\n        this._private__dblClicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__onPaneWidgetCrosshairMoved(time, point, event) {\n        this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__updateTimeAxisVisibility() {\n        const display = this._private__options.timeScale.visible ? '' : 'none';\n        this._private__timeAxisWidget._internal_getElement().style.display = display;\n    }\n    _private__isLeftAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n    }\n    _private__isRightAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n    }\n    _private__installObserver() {\n        // eslint-disable-next-line no-restricted-syntax\n        if (!('ResizeObserver' in window)) {\n            warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n            return false;\n        }\n        else {\n            this._private__observer = new ResizeObserver((entries) => {\n                const containerEntry = entries.find((entry) => entry.target === this._private__container);\n                if (!containerEntry) {\n                    return;\n                }\n                this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n            });\n            this._private__observer.observe(this._private__container, { box: 'border-box' });\n            return true;\n        }\n    }\n    _private__uninstallObserver() {\n        if (this._private__observer !== null) {\n            this._private__observer.disconnect();\n        }\n        this._private__observer = null;\n    }\n}\nfunction disableSelection(element) {\n    element.style.userSelect = 'none';\n    // eslint-disable-next-line deprecation/deprecation\n    element.style.webkitUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.msUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.MozUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n    return Boolean(options.handleScroll.mouseWheel || options.handleScale.mouseWheel);\n}\n\nfunction isWhitespaceData(data) {\n    return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n    return (data.open !== undefined ||\n        data.value !== undefined);\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.lineColor !== undefined) {\n        res._internal_lineColor = item.lineColor;\n    }\n    if (item.topColor !== undefined) {\n        res._internal_topColor = item.topColor;\n    }\n    if (item.bottomColor !== undefined) {\n        res._internal_bottomColor = item.bottomColor;\n    }\n    return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.topLineColor !== undefined) {\n        res._internal_topLineColor = item.topLineColor;\n    }\n    if (item.bottomLineColor !== undefined) {\n        res._internal_bottomLineColor = item.bottomLineColor;\n    }\n    if (item.topFillColor1 !== undefined) {\n        res._internal_topFillColor1 = item.topFillColor1;\n    }\n    if (item.topFillColor2 !== undefined) {\n        res._internal_topFillColor2 = item.topFillColor2;\n    }\n    if (item.bottomFillColor1 !== undefined) {\n        res._internal_bottomFillColor1 = item.bottomFillColor1;\n    }\n    if (item.bottomFillColor2 !== undefined) {\n        res._internal_bottomFillColor2 = item.bottomFillColor2;\n    }\n    return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    if (item.borderColor !== undefined) {\n        res._internal_borderColor = item.borderColor;\n    }\n    if (item.wickColor !== undefined) {\n        res._internal_wickColor = item.wickColor;\n    }\n    return res;\n}\nfunction getCustomSeriesPlotRow(time, index, item, originalTime, dataToPlotRow) {\n    const values = ensureDefined(dataToPlotRow)(item);\n    const max = Math.max(...values);\n    const min = Math.min(...values);\n    const last = values[values.length - 1];\n    const value = [last, max, min, last];\n    const _a = item, { time: excludedTime, color } = _a, data = __rest(_a, [\"time\", \"color\"]);\n    return { _internal_index: index, _internal_time: time, _internal_value: value, _internal_originalTime: originalTime, _internal_data: data, _internal_color: color };\n}\nfunction isSeriesPlotRow(row) {\n    return row._internal_value !== undefined;\n}\nfunction wrapCustomValues(plotRow, bar) {\n    if (bar.customValues !== undefined) {\n        plotRow._internal_customValues = bar.customValues;\n    }\n    return plotRow;\n}\nfunction isWhitespaceDataWithCustomCheck(bar, customIsWhitespace) {\n    if (customIsWhitespace) {\n        return customIsWhitespace(bar);\n    }\n    return isWhitespaceData(bar);\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n    return (time, index, bar, originalTime, dataToPlotRow, customIsWhitespace) => {\n        if (isWhitespaceDataWithCustomCheck(bar, customIsWhitespace)) {\n            return wrapCustomValues({ _internal_time: time, _internal_index: index, _internal_originalTime: originalTime }, bar);\n        }\n        return wrapCustomValues(createPlotRowFn(time, index, bar, originalTime, dataToPlotRow), bar);\n    };\n}\nfunction getSeriesPlotRowCreator(seriesType) {\n    const seriesPlotRowFnMap = {\n        Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n        Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n        Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n        Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n        Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Custom: wrapWhitespaceData(getCustomSeriesPlotRow),\n    };\n    return seriesPlotRowFnMap[seriesType];\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction createEmptyTimePointData(timePoint) {\n    return { _internal_index: 0, _internal_mapping: new Map(), _internal_timePoint: timePoint };\n}\nfunction seriesRowsFirstAndLastTime(seriesRows, bh) {\n    if (seriesRows === undefined || seriesRows.length === 0) {\n        return undefined;\n    }\n    return {\n        _internal_firstTime: bh.key(seriesRows[0]._internal_time),\n        _internal_lastTime: bh.key(seriesRows[seriesRows.length - 1]._internal_time),\n    };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows, bh) {\n    const firstAndLastTime = seriesRowsFirstAndLastTime(seriesRows, bh);\n    const prevFirstAndLastTime = seriesRowsFirstAndLastTime(prevSeriesRows, bh);\n    if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n        return {\n            _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime &&\n                firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime,\n        };\n    }\n    return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n    let result;\n    mergedPointData.forEach((v) => {\n        if (result === undefined) {\n            result = v._internal_originalTime;\n        }\n    });\n    return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n    if (data._internal_originalTime === undefined) {\n        data._internal_originalTime = data.time;\n    }\n}\nclass DataLayer {\n    constructor(horzScaleBehavior) {\n        // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n        // it's just different kind of maps to make usages/perf better\n        this._private__pointDataByTimePoint = new Map();\n        this._private__seriesRowsBySeries = new Map();\n        this._private__seriesLastTimePoint = new Map();\n        // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n        this._private__sortedTimePoints = [];\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__pointDataByTimePoint.clear();\n        this._private__seriesRowsBySeries.clear();\n        this._private__seriesLastTimePoint.clear();\n        this._private__sortedTimePoints = [];\n    }\n    _internal_setSeriesData(series, data) {\n        let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n        let isTimeScaleAffected = false;\n        // save previous series rows data before it's replaced inside this._setRowsToSeries\n        const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n        if (prevSeriesRows !== undefined) {\n            if (this._private__seriesRowsBySeries.size === 1) {\n                needCleanupPoints = false;\n                isTimeScaleAffected = true;\n                // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n                this._private__pointDataByTimePoint.clear();\n            }\n            else {\n                // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n                // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n                for (const point of this._private__sortedTimePoints) {\n                    if (point.pointData._internal_mapping.delete(series)) {\n                        isTimeScaleAffected = true;\n                    }\n                }\n            }\n        }\n        let seriesRows = [];\n        if (data.length !== 0) {\n            const originalTimes = data.map((d) => d.time);\n            const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj(data);\n            const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n            const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n            const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n            seriesRows = data.map((item, index) => {\n                const time = timeConverter(item.time);\n                const horzItemKey = this._private__horzScaleBehavior.key(time);\n                let timePointData = this._private__pointDataByTimePoint.get(horzItemKey);\n                if (timePointData === undefined) {\n                    // the indexes will be sync later\n                    timePointData = createEmptyTimePointData(time);\n                    this._private__pointDataByTimePoint.set(horzItemKey, timePointData);\n                    isTimeScaleAffected = true;\n                }\n                const row = createPlotRow(time, timePointData._internal_index, item, originalTimes[index], dataToPlotRow, customWhitespaceChecker);\n                timePointData._internal_mapping.set(series, row);\n                return row;\n            });\n        }\n        if (needCleanupPoints) {\n            // we deleted the old data from mapping and added the new ones\n            // so there might be empty points now, let's remove them first\n            this._private__cleanupPointsData();\n        }\n        this._private__setRowsToSeries(series, seriesRows);\n        let firstChangedPointIndex = -1;\n        if (isTimeScaleAffected) {\n            // then generate the time scale points\n            // timeWeight will be updates in _updateTimeScalePoints later\n            const newTimeScalePoints = [];\n            this._private__pointDataByTimePoint.forEach((pointData) => {\n                newTimeScalePoints.push({\n                    timeWeight: 0,\n                    time: pointData._internal_timePoint,\n                    pointData,\n                    originalTime: timeScalePointTime(pointData._internal_mapping),\n                });\n            });\n            newTimeScalePoints.sort((t1, t2) => this._private__horzScaleBehavior.key(t1.time) - this._private__horzScaleBehavior.key(t2.time));\n            firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n        }\n        return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows, this._private__horzScaleBehavior));\n    }\n    _internal_removeSeries(series) {\n        return this._internal_setSeriesData(series, []);\n    }\n    _internal_updateSeriesData(series, data) {\n        const extendedData = data;\n        saveOriginalTime(extendedData);\n        // convertStringToBusinessDay(data);\n        this._private__horzScaleBehavior.preprocessData(data);\n        const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj([data]);\n        const time = timeConverter(data.time);\n        const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n        if (lastSeriesTime !== undefined && this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(lastSeriesTime)) {\n            throw new Error(`Cannot update oldest data, last time=${lastSeriesTime}, new time=${time}`);\n        }\n        let pointDataAtTime = this._private__pointDataByTimePoint.get(this._private__horzScaleBehavior.key(time));\n        // if no point data found for the new data item\n        // that means that we need to update scale\n        const affectsTimeScale = pointDataAtTime === undefined;\n        if (pointDataAtTime === undefined) {\n            // the indexes will be sync later\n            pointDataAtTime = createEmptyTimePointData(time);\n            this._private__pointDataByTimePoint.set(this._private__horzScaleBehavior.key(time), pointDataAtTime);\n        }\n        const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n        const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n        const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n        const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime, dataToPlotRow, customWhitespaceChecker);\n        pointDataAtTime._internal_mapping.set(series, plotRow);\n        this._private__updateLastSeriesRow(series, plotRow);\n        const info = { _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow) };\n        // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n        if (!affectsTimeScale) {\n            return this._private__getUpdateResponse(series, -1, info);\n        }\n        const newPoint = {\n            timeWeight: 0,\n            time: pointDataAtTime._internal_timePoint,\n            pointData: pointDataAtTime,\n            originalTime: timeScalePointTime(pointDataAtTime._internal_mapping),\n        };\n        const insertIndex = lowerBound(this._private__sortedTimePoints, this._private__horzScaleBehavior.key(newPoint.time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        // yes, I know that this array is readonly and this change is intended to make it performative\n        // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n        // but this place is exceptional case due performance reasons, sorry\n        this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n        for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n            assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n        }\n        this._private__horzScaleBehavior.fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n        return this._private__getUpdateResponse(series, insertIndex, info);\n    }\n    _private__updateLastSeriesRow(series, plotRow) {\n        let seriesData = this._private__seriesRowsBySeries.get(series);\n        if (seriesData === undefined) {\n            seriesData = [];\n            this._private__seriesRowsBySeries.set(series, seriesData);\n        }\n        const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n        if (lastSeriesRow === null || this._private__horzScaleBehavior.key(plotRow._internal_time) > this._private__horzScaleBehavior.key(lastSeriesRow._internal_time)) {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData.push(plotRow);\n            }\n        }\n        else {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData[seriesData.length - 1] = plotRow;\n            }\n            else {\n                seriesData.splice(-1, 1);\n            }\n        }\n        this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n    }\n    _private__setRowsToSeries(series, seriesRows) {\n        if (seriesRows.length !== 0) {\n            this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n            this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n        }\n        else {\n            this._private__seriesRowsBySeries.delete(series);\n            this._private__seriesLastTimePoint.delete(series);\n        }\n    }\n    _private__cleanupPointsData() {\n        // let's treat all current points as \"potentially removed\"\n        // we could create an array with actually potentially removed points\n        // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n        // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n        for (const point of this._private__sortedTimePoints) {\n            if (point.pointData._internal_mapping.size === 0) {\n                this._private__pointDataByTimePoint.delete(this._private__horzScaleBehavior.key(point.time));\n            }\n        }\n    }\n    /**\n     * Sets new time scale and make indexes valid for all series\n     *\n     * @returns The index of the first changed point or `-1` if there is no change.\n     */\n    _private__replaceTimeScalePoints(newTimePoints) {\n        let firstChangedPointIndex = -1;\n        // search the first different point and \"syncing\" time weight by the way\n        for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n            const oldPoint = this._private__sortedTimePoints[index];\n            const newPoint = newTimePoints[index];\n            if (this._private__horzScaleBehavior.key(oldPoint.time) !== this._private__horzScaleBehavior.key(newPoint.time)) {\n                firstChangedPointIndex = index;\n                break;\n            }\n            // re-assign point's time weight for points if time is the same (and all prior times was the same)\n            newPoint.timeWeight = oldPoint.timeWeight;\n            assignIndexToPointData(newPoint.pointData, index);\n        }\n        if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n            // the common part of the prev and the new points are the same\n            // so the first changed point is the next after the common part\n            firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n        }\n        if (firstChangedPointIndex === -1) {\n            // if no time scale changed, then do nothing\n            return -1;\n        }\n        // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n        // but first we need to synchronize indexes and re-fill time weights\n        for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n            assignIndexToPointData(newTimePoints[index].pointData, index);\n        }\n        // re-fill time weights for point after the first changed one\n        this._private__horzScaleBehavior.fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n        this._private__sortedTimePoints = newTimePoints;\n        return firstChangedPointIndex;\n    }\n    _private__getBaseIndex() {\n        if (this._private__seriesRowsBySeries.size === 0) {\n            // if we have no data then 'reset' the base index to null\n            return null;\n        }\n        let baseIndex = 0;\n        this._private__seriesRowsBySeries.forEach((data) => {\n            if (data.length !== 0) {\n                baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n            }\n        });\n        return baseIndex;\n    }\n    _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n        const dataUpdateResponse = {\n            _internal_series: new Map(),\n            _internal_timeScale: {\n                _internal_baseIndex: this._private__getBaseIndex(),\n            },\n        };\n        if (firstChangedPointIndex !== -1) {\n            // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n            // but let's skip for now\n            this._private__seriesRowsBySeries.forEach((data, s) => {\n                dataUpdateResponse._internal_series.set(s, {\n                    _internal_data: data,\n                    _internal_info: s === updatedSeries ? info : undefined,\n                });\n            });\n            // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n            // meaning the forEach above won't add the series to the data update response\n            // so we handle that case here\n            if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n                dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: [], _internal_info: info });\n            }\n            dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n            dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n        }\n        else {\n            const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n            // if no seriesData found that means that we just removed the series\n            dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: seriesData || [], _internal_info: info });\n        }\n        return dataUpdateResponse;\n    }\n}\nfunction assignIndexToPointData(pointData, index) {\n    // first, nevertheless update index of point data (\"make it valid\")\n    pointData._internal_index = index;\n    // and then we need to sync indexes for all series\n    pointData._internal_mapping.forEach((seriesRow) => {\n        seriesRow._internal_index = index;\n    });\n}\n\nfunction singleValueData(plotRow) {\n    const data = {\n        value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction lineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction areaData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_lineColor !== undefined) {\n        result.lineColor = plotRow._internal_lineColor;\n    }\n    if (plotRow._internal_topColor !== undefined) {\n        result.topColor = plotRow._internal_topColor;\n    }\n    if (plotRow._internal_bottomColor !== undefined) {\n        result.bottomColor = plotRow._internal_bottomColor;\n    }\n    return result;\n}\nfunction baselineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_topLineColor !== undefined) {\n        result.topLineColor = plotRow._internal_topLineColor;\n    }\n    if (plotRow._internal_bottomLineColor !== undefined) {\n        result.bottomLineColor = plotRow._internal_bottomLineColor;\n    }\n    if (plotRow._internal_topFillColor1 !== undefined) {\n        result.topFillColor1 = plotRow._internal_topFillColor1;\n    }\n    if (plotRow._internal_topFillColor2 !== undefined) {\n        result.topFillColor2 = plotRow._internal_topFillColor2;\n    }\n    if (plotRow._internal_bottomFillColor1 !== undefined) {\n        result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n    }\n    if (plotRow._internal_bottomFillColor2 !== undefined) {\n        result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n    }\n    return result;\n}\nfunction ohlcData(plotRow) {\n    const data = {\n        open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n        high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n        low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n        close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction barData(plotRow) {\n    const result = ohlcData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction candlestickData(plotRow) {\n    const result = ohlcData(plotRow);\n    const { _internal_color: color, _internal_borderColor: borderColor, _internal_wickColor: wickColor } = plotRow;\n    if (color !== undefined) {\n        result.color = color;\n    }\n    if (borderColor !== undefined) {\n        result.borderColor = borderColor;\n    }\n    if (wickColor !== undefined) {\n        result.wickColor = wickColor;\n    }\n    return result;\n}\nfunction getSeriesDataCreator(seriesType) {\n    const seriesPlotRowToDataMap = {\n        Area: (areaData),\n        Line: (lineData),\n        Baseline: (baselineData),\n        Histogram: (lineData),\n        Bar: (barData),\n        Candlestick: (candlestickData),\n        Custom: (customData),\n    };\n    return seriesPlotRowToDataMap[seriesType];\n}\nfunction customData(plotRow) {\n    const time = plotRow._internal_originalTime;\n    return Object.assign(Object.assign({}, plotRow._internal_data), { time });\n}\n\nconst crosshairOptionsDefaults = {\n    vertLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    horzLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    mode: 1 /* CrosshairMode.Magnet */,\n};\n\nconst gridOptionsDefaults = {\n    vertLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n    horzLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n};\n\nconst layoutOptionsDefaults = {\n    background: {\n        type: \"solid\" /* ColorType.Solid */,\n        color: '#FFFFFF',\n    },\n    textColor: '#191919',\n    fontSize: 12,\n    fontFamily: defaultFontFamily,\n};\n\nconst priceScaleOptionsDefaults = {\n    autoScale: true,\n    mode: 0 /* PriceScaleMode.Normal */,\n    invertScale: false,\n    alignLabels: true,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    entireTextOnly: false,\n    visible: false,\n    ticksVisible: false,\n    scaleMargins: {\n        bottom: 0.1,\n        top: 0.2,\n    },\n    minimumWidth: 0,\n};\n\nconst timeScaleOptionsDefaults = {\n    rightOffset: 0,\n    barSpacing: 6,\n    minBarSpacing: 0.5,\n    fixLeftEdge: false,\n    fixRightEdge: false,\n    lockVisibleTimeRangeOnResize: false,\n    rightBarStaysOnScroll: false,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    visible: true,\n    timeVisible: false,\n    secondsVisible: true,\n    shiftVisibleRangeOnNewBar: true,\n    allowShiftVisibleRangeOnWhitespaceReplacement: false,\n    ticksVisible: false,\n    uniformDistribution: false,\n    minimumHeight: 0,\n};\n\nconst watermarkOptionsDefaults = {\n    color: 'rgba(0, 0, 0, 0)',\n    visible: false,\n    fontSize: 48,\n    fontFamily: defaultFontFamily,\n    fontStyle: '',\n    text: '',\n    horzAlign: 'center',\n    vertAlign: 'center',\n};\n\nfunction chartOptionsDefaults() {\n    return {\n        width: 0,\n        height: 0,\n        autoSize: false,\n        layout: layoutOptionsDefaults,\n        crosshair: crosshairOptionsDefaults,\n        grid: gridOptionsDefaults,\n        overlayPriceScales: Object.assign({}, priceScaleOptionsDefaults),\n        leftPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), { visible: false }),\n        rightPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), { visible: true }),\n        timeScale: timeScaleOptionsDefaults,\n        watermark: watermarkOptionsDefaults,\n        localization: {\n            locale: isRunningOnClientSide ? navigator.language : '',\n            dateFormat: 'dd MMM \\'yy',\n        },\n        handleScroll: {\n            mouseWheel: true,\n            pressedMouseMove: true,\n            horzTouchDrag: true,\n            vertTouchDrag: true,\n        },\n        handleScale: {\n            axisPressedMouseMove: {\n                time: true,\n                price: true,\n            },\n            axisDoubleClickReset: {\n                time: true,\n                price: true,\n            },\n            mouseWheel: true,\n            pinch: true,\n        },\n        kineticScroll: {\n            mouse: false,\n            touch: true,\n        },\n        trackingMode: {\n            exitMode: 1 /* TrackingModeExitMode.OnNextTap */,\n        },\n    };\n}\n\nclass PriceScaleApi {\n    constructor(chartWidget, priceScaleId) {\n        this._private__chartWidget = chartWidget;\n        this._private__priceScaleId = priceScaleId;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options);\n    }\n    options() {\n        return this._private__priceScale()._internal_options();\n    }\n    width() {\n        if (!isDefaultPriceScale(this._private__priceScaleId)) {\n            return 0;\n        }\n        return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n    }\n    _private__priceScale() {\n        return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId))._internal_priceScale;\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction checkPriceLineOptions(options) {\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, bh, allowDuplicates = false) {\n    if (data.length === 0) {\n        return;\n    }\n    let prevTime = bh.key(data[0].time);\n    for (let i = 1; i < data.length; ++i) {\n        const currentTime = bh.key(data[i].time);\n        const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n        assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n        prevTime = currentTime;\n    }\n}\nfunction checkSeriesValuesType(type, data) {\n    data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n    switch (type) {\n        case 'Bar':\n        case 'Candlestick':\n            return checkBarItem.bind(null, type);\n        case 'Area':\n        case 'Baseline':\n        case 'Line':\n        case 'Histogram':\n            return checkLineItem.bind(null, type);\n        case 'Custom':\n            return checkCustomItem.bind(null, type);\n    }\n}\nfunction checkBarItem(type, barItem) {\n    if (!isFulfilledData(barItem)) {\n        return;\n    }\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.open === 'number', `${type} series item data value of open must be a number, got=${typeof barItem.open}, value=${barItem.open}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.high === 'number', `${type} series item data value of high must be a number, got=${typeof barItem.high}, value=${barItem.high}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.low === 'number', `${type} series item data value of low must be a number, got=${typeof barItem.low}, value=${barItem.low}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.close === 'number', `${type} series item data value of close must be a number, got=${typeof barItem.close}, value=${barItem.close}`);\n}\nfunction checkLineItem(type, lineItem) {\n    if (!isFulfilledData(lineItem)) {\n        return;\n    }\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\nfunction checkCustomItem(\n// type: 'Custom',\n// customItem: SeriesDataItemTypeMap[typeof type]\n) {\n    // Nothing to check yet...\n    return;\n}\n\nfunction convertSeriesMarker(sm, newTime, originalTime) {\n    const values = __rest(sm, [\"time\", \"originalTime\"]);\n    /* eslint-disable @typescript-eslint/consistent-type-assertions */\n    const res = Object.assign({ time: newTime }, values);\n    /* eslint-enable @typescript-eslint/consistent-type-assertions */\n    if (originalTime !== undefined) {\n        res.originalTime = originalTime;\n    }\n    return res;\n}\n\nconst priceLineOptionsDefaults = {\n    color: '#FF0000',\n    price: 0,\n    lineStyle: 2 /* LineStyle.Dashed */,\n    lineWidth: 1,\n    lineVisible: true,\n    axisLabelVisible: true,\n    title: '',\n    axisLabelColor: '',\n    axisLabelTextColor: '',\n};\n\nclass PriceLine {\n    constructor(priceLine) {\n        this._private__priceLine = priceLine;\n    }\n    applyOptions(options) {\n        this._private__priceLine._internal_applyOptions(options);\n    }\n    options() {\n        return this._private__priceLine._internal_options();\n    }\n    _internal_priceLine() {\n        return this._private__priceLine;\n    }\n}\n\nclass SeriesApi {\n    constructor(series, dataUpdatesConsumer, priceScaleApiProvider, chartApi, horzScaleBehavior) {\n        this._private__dataChangedDelegate = new Delegate();\n        this._internal__series = series;\n        this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n        this._private__priceScaleApiProvider = priceScaleApiProvider;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._internal__chartApi = chartApi;\n    }\n    _internal_destroy() {\n        this._private__dataChangedDelegate._internal_destroy();\n    }\n    priceFormatter() {\n        return this._internal__series._internal_formatter();\n    }\n    priceToCoordinate(price) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n    }\n    coordinateToPrice(coordinate) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n    }\n    barsInLogicalRange(range) {\n        if (range === null) {\n            return null;\n        }\n        // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n        const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n        const bars = this._internal__series._internal_bars();\n        if (bars._internal_isEmpty()) {\n            return null;\n        }\n        const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n        const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n        const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n        const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n        // this means that we request data in the data gap\n        // e.g. let's say we have series with data [0..10, 30..60]\n        // and we request bars info in range [15, 25]\n        // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n            return {\n                barsBefore: range.from - dataFirstIndex,\n                barsAfter: dataLastIndex - range.to,\n            };\n        }\n        const barsBefore = (dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex)\n            ? range.from - dataFirstIndex\n            : dataFirstBarInRange._internal_index - dataFirstIndex;\n        const barsAfter = (dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex)\n            ? dataLastIndex - range.to\n            : dataLastIndex - dataLastBarInRange._internal_index;\n        const result = { barsBefore, barsAfter };\n        // actually they can't exist separately\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n            result.from = dataFirstBarInRange._internal_originalTime;\n            result.to = dataLastBarInRange._internal_originalTime;\n        }\n        return result;\n    }\n    setData(data) {\n        checkItemsAreOrdered(data, this._private__horzScaleBehavior);\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n        this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n        this._private__onDataChanged('full');\n    }\n    update(bar) {\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n        this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar);\n        this._private__onDataChanged('update');\n    }\n    dataByIndex(logicalIndex, mismatchDirection) {\n        const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n        if (data === null) {\n            // actually it can be a whitespace\n            return null;\n        }\n        const creator = getSeriesDataCreator(this.seriesType());\n        return creator(data);\n    }\n    data() {\n        const seriesCreator = getSeriesDataCreator(this.seriesType());\n        const rows = this._internal__series._internal_bars()._internal_rows();\n        return rows.map((row) => seriesCreator(row));\n    }\n    subscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_unsubscribe(handler);\n    }\n    setMarkers(data) {\n        checkItemsAreOrdered(data, this._private__horzScaleBehavior, true);\n        const convertedMarkers = data.map((marker) => convertSeriesMarker(marker, this._private__horzScaleBehavior.convertHorzItemToInternal(marker.time), marker.time));\n        this._internal__series._internal_setMarkers(convertedMarkers);\n    }\n    markers() {\n        return this._internal__series._internal_markers().map((internalItem) => {\n            return convertSeriesMarker(internalItem, internalItem.originalTime, undefined);\n        });\n    }\n    applyOptions(options) {\n        this._internal__series._internal_applyOptions(options);\n    }\n    options() {\n        return clone(this._internal__series._internal_options());\n    }\n    priceScale() {\n        return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id());\n    }\n    createPriceLine(options) {\n        checkPriceLineOptions(options);\n        const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n        const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n        return new PriceLine(priceLine);\n    }\n    removePriceLine(line) {\n        this._internal__series._internal_removePriceLine(line._internal_priceLine());\n    }\n    seriesType() {\n        return this._internal__series._internal_seriesType();\n    }\n    attachPrimitive(primitive) {\n        // at this point we cast the generic to unknown because we\n        // don't want the model to know the types of the API (â—‘_â—‘)\n        this._internal__series._internal_attachPrimitive(primitive);\n        if (primitive.attached) {\n            primitive.attached({\n                chart: this._internal__chartApi,\n                series: this,\n                requestUpdate: () => this._internal__series._internal_model()._internal_fullUpdate(),\n            });\n        }\n    }\n    detachPrimitive(primitive) {\n        this._internal__series._internal_detachPrimitive(primitive);\n        if (primitive.detached) {\n            primitive.detached();\n        }\n    }\n    _private__onDataChanged(scope) {\n        if (this._private__dataChangedDelegate._internal_hasListeners()) {\n            this._private__dataChangedDelegate._internal_fire(scope);\n        }\n    }\n}\n\nclass TimeScaleApi {\n    constructor(model, timeAxisWidget, horzScaleBehavior) {\n        this._private__timeRangeChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__sizeChanged = new Delegate();\n        this._private__model = model;\n        this._private__timeScale = model._internal_timeScale();\n        this._private__timeAxisWidget = timeAxisWidget;\n        this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n        this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n        this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n        this._private__timeRangeChanged._internal_destroy();\n        this._private__logicalRangeChanged._internal_destroy();\n        this._private__sizeChanged._internal_destroy();\n    }\n    scrollPosition() {\n        return this._private__timeScale._internal_rightOffset();\n    }\n    scrollToPosition(position, animated) {\n        if (!animated) {\n            this._private__model._internal_setRightOffset(position);\n            return;\n        }\n        this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n    }\n    scrollToRealTime() {\n        this._private__timeScale._internal_scrollToRealTime();\n    }\n    getVisibleRange() {\n        const timeRange = this._private__timeScale._internal_visibleTimeRange();\n        if (timeRange === null) {\n            return null;\n        }\n        return {\n            from: timeRange.from.originalTime,\n            to: timeRange.to.originalTime,\n        };\n    }\n    setVisibleRange(range) {\n        const convertedRange = {\n            from: this._private__horzScaleBehavior.convertHorzItemToInternal(range.from),\n            to: this._private__horzScaleBehavior.convertHorzItemToInternal(range.to),\n        };\n        const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n        this._private__model._internal_setTargetLogicalRange(logicalRange);\n    }\n    getVisibleLogicalRange() {\n        const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n        if (logicalRange === null) {\n            return null;\n        }\n        return {\n            from: logicalRange._internal_left(),\n            to: logicalRange._internal_right(),\n        };\n    }\n    setVisibleLogicalRange(range) {\n        assert(range.from <= range.to, 'The from index cannot be after the to index.');\n        this._private__model._internal_setTargetLogicalRange(range);\n    }\n    resetTimeScale() {\n        this._private__model._internal_resetTimeScale();\n    }\n    fitContent() {\n        this._private__model._internal_fitContent();\n    }\n    logicalToCoordinate(logical) {\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return timeScale._internal_indexToCoordinate(logical);\n        }\n    }\n    coordinateToLogical(x) {\n        if (this._private__timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return this._private__timeScale._internal_coordinateToIndex(x);\n        }\n    }\n    timeToCoordinate(time) {\n        const timePoint = this._private__horzScaleBehavior.convertHorzItemToInternal(time);\n        const timePointIndex = this._private__timeScale._internal_timeToIndex(timePoint, false);\n        if (timePointIndex === null) {\n            return null;\n        }\n        return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n    }\n    coordinateToTime(x) {\n        const timeScale = this._private__model._internal_timeScale();\n        const timePointIndex = timeScale._internal_coordinateToIndex(x);\n        const timePoint = timeScale._internal_indexToTimeScalePoint(timePointIndex);\n        if (timePoint === null) {\n            return null;\n        }\n        return timePoint.originalTime;\n    }\n    width() {\n        return this._private__timeAxisWidget._internal_getSize().width;\n    }\n    height() {\n        return this._private__timeAxisWidget._internal_getSize().height;\n    }\n    subscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_subscribe(handler);\n    }\n    unsubscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_unsubscribe(handler);\n    }\n    applyOptions(options) {\n        this._private__timeScale._internal_applyOptions(options);\n    }\n    options() {\n        return Object.assign(Object.assign({}, clone(this._private__timeScale._internal_options())), { barSpacing: this._private__timeScale._internal_barSpacing() });\n    }\n    _private__onVisibleBarsChanged() {\n        if (this._private__timeRangeChanged._internal_hasListeners()) {\n            this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n        }\n    }\n    _private__onVisibleLogicalRangeChanged() {\n        if (this._private__logicalRangeChanged._internal_hasListeners()) {\n            this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n        }\n    }\n    _private__onSizeChanged(size) {\n        this._private__sizeChanged._internal_fire(size.width, size.height);\n    }\n}\n\nfunction patchPriceFormat(priceFormat) {\n    if (priceFormat === undefined || priceFormat.type === 'custom') {\n        return;\n    }\n    const priceFormatBuiltIn = priceFormat;\n    if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n        priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n    }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n    if (isBoolean(options.handleScale)) {\n        const handleScale = options.handleScale;\n        options.handleScale = {\n            axisDoubleClickReset: {\n                time: handleScale,\n                price: handleScale,\n            },\n            axisPressedMouseMove: {\n                time: handleScale,\n                price: handleScale,\n            },\n            mouseWheel: handleScale,\n            pinch: handleScale,\n        };\n    }\n    else if (options.handleScale !== undefined) {\n        const { axisPressedMouseMove, axisDoubleClickReset } = options.handleScale;\n        if (isBoolean(axisPressedMouseMove)) {\n            options.handleScale.axisPressedMouseMove = {\n                time: axisPressedMouseMove,\n                price: axisPressedMouseMove,\n            };\n        }\n        if (isBoolean(axisDoubleClickReset)) {\n            options.handleScale.axisDoubleClickReset = {\n                time: axisDoubleClickReset,\n                price: axisDoubleClickReset,\n            };\n        }\n    }\n    const handleScroll = options.handleScroll;\n    if (isBoolean(handleScroll)) {\n        options.handleScroll = {\n            horzTouchDrag: handleScroll,\n            vertTouchDrag: handleScroll,\n            mouseWheel: handleScroll,\n            pressedMouseMove: handleScroll,\n        };\n    }\n}\nfunction toInternalOptions(options) {\n    migrateHandleScaleScrollOptions(options);\n    return options;\n}\nclass ChartApi {\n    constructor(container, horzScaleBehavior, options) {\n        this._private__seriesMap = new Map();\n        this._private__seriesMapReversed = new Map();\n        this._private__clickedDelegate = new Delegate();\n        this._private__dblClickedDelegate = new Delegate();\n        this._private__crosshairMovedDelegate = new Delegate();\n        this._private__dataLayer = new DataLayer(horzScaleBehavior);\n        const internalOptions = (options === undefined) ?\n            clone(chartOptionsDefaults()) :\n            merge(clone(chartOptionsDefaults()), toInternalOptions(options));\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__chartWidget = new ChartWidget(container, internalOptions, horzScaleBehavior);\n        this._private__chartWidget._internal_clicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__clickedDelegate._internal_hasListeners()) {\n                this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_dblClicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__dblClickedDelegate._internal_hasListeners()) {\n                this._private__dblClickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_subscribe((paramSupplier) => {\n            if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n                this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        const model = this._private__chartWidget._internal_model();\n        this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget(), this._private__horzScaleBehavior);\n    }\n    remove() {\n        this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__timeScaleApi._internal_destroy();\n        this._private__chartWidget._internal_destroy();\n        this._private__seriesMap.clear();\n        this._private__seriesMapReversed.clear();\n        this._private__clickedDelegate._internal_destroy();\n        this._private__dblClickedDelegate._internal_destroy();\n        this._private__crosshairMovedDelegate._internal_destroy();\n        this._private__dataLayer._internal_destroy();\n    }\n    resize(width, height, forceRepaint) {\n        if (this.autoSizeActive()) {\n            // We return early here instead of checking this within the actual _chartWidget.resize method\n            // because this should only apply to external resize requests.\n            warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n            return;\n        }\n        this._private__chartWidget._internal_resize(width, height, forceRepaint);\n    }\n    addCustomSeries(customPaneView, options) {\n        const paneView = ensure(customPaneView);\n        const defaults = Object.assign(Object.assign({}, customStyleDefaults), paneView.defaultOptions());\n        return this._private__addSeriesImpl('Custom', defaults, options, paneView);\n    }\n    addAreaSeries(options) {\n        return this._private__addSeriesImpl('Area', areaStyleDefaults, options);\n    }\n    addBaselineSeries(options) {\n        return this._private__addSeriesImpl('Baseline', baselineStyleDefaults, options);\n    }\n    addBarSeries(options) {\n        return this._private__addSeriesImpl('Bar', barStyleDefaults, options);\n    }\n    addCandlestickSeries(options = {}) {\n        fillUpDownCandlesticksColors(options);\n        return this._private__addSeriesImpl('Candlestick', candlestickStyleDefaults, options);\n    }\n    addHistogramSeries(options) {\n        return this._private__addSeriesImpl('Histogram', histogramStyleDefaults, options);\n    }\n    addLineSeries(options) {\n        return this._private__addSeriesImpl('Line', lineStyleDefaults, options);\n    }\n    removeSeries(seriesApi) {\n        const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n        const update = this._private__dataLayer._internal_removeSeries(series);\n        const model = this._private__chartWidget._internal_model();\n        model._internal_removeSeries(series);\n        this._private__sendUpdateToChart(update);\n        this._private__seriesMap.delete(seriesApi);\n        this._private__seriesMapReversed.delete(series);\n    }\n    _internal_applyNewData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n    }\n    _internal_updateData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data));\n    }\n    subscribeClick(handler) {\n        this._private__clickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeClick(handler) {\n        this._private__clickedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_unsubscribe(handler);\n    }\n    priceScale(priceScaleId) {\n        return new PriceScaleApi(this._private__chartWidget, priceScaleId);\n    }\n    timeScale() {\n        return this._private__timeScaleApi;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n    }\n    options() {\n        return this._private__chartWidget._internal_options();\n    }\n    takeScreenshot() {\n        return this._private__chartWidget._internal_takeScreenshot();\n    }\n    autoSizeActive() {\n        return this._private__chartWidget._internal_autoSizeActive();\n    }\n    chartElement() {\n        return this._private__chartWidget._internal_element();\n    }\n    paneSize() {\n        const size = this._private__chartWidget._internal_paneSize();\n        return {\n            height: size.height,\n            width: size.width,\n        };\n    }\n    setCrosshairPosition(price, horizontalPosition, seriesApi) {\n        const series = this._private__seriesMap.get(seriesApi);\n        if (series === undefined) {\n            return;\n        }\n        const pane = this._private__chartWidget._internal_model()._internal_paneForSource(series);\n        if (pane === null) {\n            return;\n        }\n        this._private__chartWidget._internal_model()._internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane);\n    }\n    clearCrosshairPosition() {\n        this._private__chartWidget._internal_model()._internal_clearCurrentPosition(true);\n    }\n    _private__addSeriesImpl(type, styleDefaults, options = {}, customPaneView) {\n        patchPriceFormat(options.priceFormat);\n        const strictOptions = merge(clone(seriesOptionsDefaults), clone(styleDefaults), options);\n        const series = this._private__chartWidget._internal_model()._internal_createSeries(type, strictOptions, customPaneView);\n        const res = new SeriesApi(series, this, this, this, this._private__horzScaleBehavior);\n        this._private__seriesMap.set(res, series);\n        this._private__seriesMapReversed.set(series, res);\n        return res;\n    }\n    _private__sendUpdateToChart(update) {\n        const model = this._private__chartWidget._internal_model();\n        model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n        update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n        model._internal_recalculateAllPanes();\n    }\n    _private__mapSeriesToApi(series) {\n        return ensureDefined(this._private__seriesMapReversed.get(series));\n    }\n    _private__convertMouseParams(param) {\n        const seriesData = new Map();\n        param._internal_seriesData.forEach((plotRow, series) => {\n            const seriesType = series._internal_seriesType();\n            const data = getSeriesDataCreator(seriesType)(plotRow);\n            if (seriesType !== 'Custom') {\n                assert(isFulfilledData(data));\n            }\n            else {\n                const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n                assert(!customWhitespaceChecker || customWhitespaceChecker(data) === false);\n            }\n            seriesData.set(this._private__mapSeriesToApi(series), data);\n        });\n        const hoveredSeries = param._internal_hoveredSeries === undefined ? undefined : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n        return {\n            time: param._internal_originalTime,\n            logical: param._internal_index,\n            point: param._internal_point,\n            hoveredSeries,\n            hoveredObjectId: param._internal_hoveredObject,\n            seriesData,\n            sourceEvent: param._internal_touchMouseEventData,\n        };\n    }\n}\n\n/**\n * This function is the main entry point of the Lightweight Charting Library. If you are using time values\n * for the horizontal scale then it is recommended that you rather use the {@link createChart} function.\n *\n * @template HorzScaleItem - type of points on the horizontal scale\n * @template THorzScaleBehavior - type of horizontal axis strategy that encapsulate all the specific behaviors of the horizontal scale type\n *\n * @param container - ID of HTML element or element itself\n * @param horzScaleBehavior - Horizontal scale behavior\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChartEx(container, horzScaleBehavior, options) {\n    let htmlElement;\n    if (isString(container)) {\n        const element = document.getElementById(container);\n        assert(element !== null, `Cannot find element in DOM with id=${container}`);\n        htmlElement = element;\n    }\n    else {\n        htmlElement = container;\n    }\n    const res = new ChartApi(htmlElement, horzScaleBehavior, options);\n    horzScaleBehavior.setOptions(res.options());\n    return res;\n}\n/**\n * This function is the simplified main entry point of the Lightweight Charting Library with time points for the horizontal scale.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n    return createChartEx(container, new HorzScaleBehaviorTime(), HorzScaleBehaviorTime._internal_applyDefaults(options));\n}\n\n/// <reference types=\"_build-time-constants\" />\nconst customSeriesDefaultOptions = Object.assign(Object.assign({}, seriesOptionsDefaults), customStyleDefaults);\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n    return \"4.1.2\";\n}\n\nexport { ColorType, CrosshairMode, LastPriceAnimationMode, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, createChartEx, customSeriesDefaultOptions, isBusinessDay, isUTCTimestamp, version };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}