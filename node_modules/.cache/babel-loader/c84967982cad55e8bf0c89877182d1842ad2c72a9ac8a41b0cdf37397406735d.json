{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\FinancialsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FinancialsTable = ({\n  incomeStatements,\n  balanceSheets,\n  cashFlows\n}) => {\n  _s();\n  const [selectedFinancial, setSelectedFinancial] = useState('Income Statement');\n  const [selectedFrequency, setSelectedFrequency] = useState('Yearly');\n  const [financialData, setFinancialData] = useState([]);\n\n  // Update the financial data based on the selected financial and frequency\n  useState(() => {\n    switch (selectedFinancial) {\n      case 'Income Statement':\n        setFinancialData(incomeStatements.filter(item => item.type === selectedFrequency));\n        break;\n      case 'Balance Sheet':\n        setFinancialData(balanceSheets.filter(item => item.type === selectedFrequency));\n        break;\n      case 'Cash Flow':\n        setFinancialData(cashFlows.filter(item => item.type === selectedFrequency));\n        break;\n      default:\n        setFinancialData([]);\n    }\n  }, [selectedFinancial, selectedFrequency, incomeStatements, balanceSheets, cashFlows]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: financialData[0] && Object.keys(financialData[0]).map((key, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: key.replace(/_/g, ' ').toUpperCase()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: financialData.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.values(item).map((value, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: typeof value === 'number' ? value.toLocaleString() : value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(FinancialsTable, \"tpzJIaeHLnqO72m2S18F3pOfCyk=\");\n_c = FinancialsTable;\nexport default FinancialsTable;\nvar _c;\n$RefreshReg$(_c, \"FinancialsTable\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","FinancialsTable","incomeStatements","balanceSheets","cashFlows","_s","selectedFinancial","setSelectedFinancial","selectedFrequency","setSelectedFrequency","financialData","setFinancialData","filter","item","type","children","component","Object","keys","map","key","index","replace","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","values","value","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/FinancialsTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Paper } from '@mui/material';\r\n\r\nconst FinancialsTable = ({ incomeStatements, balanceSheets, cashFlows }) => {\r\n  const [selectedFinancial, setSelectedFinancial] = useState('Income Statement');\r\n  const [selectedFrequency, setSelectedFrequency] = useState('Yearly');\r\n  const [financialData, setFinancialData] = useState([]);\r\n\r\n  // Update the financial data based on the selected financial and frequency\r\n  useState(() => {\r\n    switch (selectedFinancial) {\r\n      case 'Income Statement':\r\n        setFinancialData(incomeStatements.filter(item => item.type === selectedFrequency));\r\n        break;\r\n      case 'Balance Sheet':\r\n        setFinancialData(balanceSheets.filter(item => item.type === selectedFrequency));\r\n        break;\r\n      case 'Cash Flow':\r\n        setFinancialData(cashFlows.filter(item => item.type === selectedFrequency));\r\n        break;\r\n      default:\r\n        setFinancialData([]);\r\n    }\r\n  }, [selectedFinancial, selectedFrequency, incomeStatements, balanceSheets, cashFlows]);\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* Buttons to select financial type and frequency */}\r\n      {/* ... (your existing buttons code) */}\r\n\r\n      {/* Table to display financial data */}\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* Dynamically create table header based on the keys of the financial data */}\r\n              {financialData[0] && Object.keys(financialData[0]).map((key, index) => (\r\n                <TableCell key={index}>{key.replace(/_/g, ' ').toUpperCase()}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {financialData.map((item, index) => (\r\n              <TableRow key={index}>\r\n                {/* Dynamically create table cells based on the values of the financial data */}\r\n                {Object.values(item).map((value, index) => (\r\n                  <TableCell key={index}>\r\n                    {typeof value === 'number' ? value.toLocaleString() : value}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FinancialsTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}