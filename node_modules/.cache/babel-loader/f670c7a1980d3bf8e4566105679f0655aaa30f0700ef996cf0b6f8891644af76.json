{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\pages\\\\DividendScreener.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Box } from '@mui/material';\nimport ReactCountryFlag from \"react-country-flag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DividendScreener() {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [dividendThreshold, setDividendThreshold] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/dividend_data');\n        setStocks(response.data.results);\n      } catch (error) {\n        console.error('Error fetching stocks:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Function to get style for Payout Ratio\n  const getPayoutRatioStyle = ratio => {\n    if (ratio > 100) {\n      return {\n        borderBottom: '3px solid red'\n      }; // Red underline for high risk\n    } else if (ratio >= 60) {\n      return {\n        borderBottom: '3px solid orange'\n      }; // Amber underline for moderate risk\n    }\n    return {\n      borderBottom: '3px solid green'\n    }; // Green underline for low risk\n  };\n\n  // Function to get style for Dividend Growth\n  const getDividendGrowthStyle = growth => {\n    if (growth < 0) {\n      return {\n        borderBottom: '3px solid red'\n      }; // Red underline for negative growth\n    } else if (growth === 0) {\n      return {\n        borderBottom: '3px solid orange'\n      }; // Amber underline for no growth\n    }\n    return {\n      borderBottom: '3px solid green'\n    }; // Green underline for positive growth\n  };\n  const handleSliderChange = (event, newValue) => {\n    setDividendThreshold(newValue);\n  };\n\n  // Assuming dividend_yield is a decimal like 0.0050 for 0.50%\n  const filteredStocks = stocks.filter(stock => parseFloat(stock.dividend_yield) * 100 >= dividendThreshold);\n  const formatMarketCap = value => {\n    return `${(value / 1e9).toFixed(2)}b`;\n  };\n  const formatPercentage = value => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"dividend-slider\",\n      gutterBottom: true,\n      children: [\"Dividend Yield Threshold: \", dividendThreshold, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: dividendThreshold,\n      onChange: handleSliderChange,\n      \"aria-labelledby\": \"dividend-slider\",\n      valueLabelDisplay: \"auto\",\n      step: 0.1,\n      marks: true,\n      min: 0,\n      max: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Market Cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"PE Ratio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Dividend Yield\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Forward Yield\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Payout Ratio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Div 5 year Growth rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Div Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n                  countryCode: stock.country_iso,\n                  svg: true,\n                  style: {\n                    width: '2em',\n                    height: '2em',\n                    marginRight: '0.5em' // Add some space between the flag and the text\n                  },\n                  title: stock.country_iso\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexDirection: 'column'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: stock.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: [stock.code, \" - NYSE\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: formatMarketCap(stock.market_capitalization)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: parseFloat(stock.pe_ratio).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: formatPercentage(stock.dividend_yield)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: formatPercentage(stock.forward_annual_dividend_yield)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              style: getPayoutRatioStyle(stock.payout_ratio),\n              children: [stock.payout_ratio, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              style: getDividendGrowthStyle(stock.cagr_5_years),\n              children: [stock.cagr_5_years, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.dividend_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(DividendScreener, \"vjbqRmYPll+ehJMEN/uzJ6ek384=\");\n_c = DividendScreener;\nexport default DividendScreener;\nvar _c;\n$RefreshReg$(_c, \"DividendScreener\");","map":{"version":3,"names":["React","useState","useEffect","axios","Slider","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","Box","ReactCountryFlag","jsxDEV","_jsxDEV","DividendScreener","_s","stocks","setStocks","dividendThreshold","setDividendThreshold","fetchData","response","get","data","results","error","console","getPayoutRatioStyle","ratio","borderBottom","getDividendGrowthStyle","growth","handleSliderChange","event","newValue","filteredStocks","filter","stock","parseFloat","dividend_yield","formatMarketCap","value","toFixed","formatPercentage","children","id","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onChange","valueLabelDisplay","step","marks","min","max","align","map","index","component","scope","sx","display","alignItems","countryCode","country_iso","svg","style","width","height","marginRight","title","flexDirection","variant","name","color","code","market_capitalization","pe_ratio","forward_annual_dividend_yield","payout_ratio","cagr_5_years","dividend_date","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/pages/DividendScreener.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Box } from '@mui/material';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\n\r\nfunction DividendScreener() {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [dividendThreshold, setDividendThreshold] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/dividend_data');\r\n        setStocks(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching stocks:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Function to get style for Payout Ratio\r\n  const getPayoutRatioStyle = (ratio) => {\r\n    if (ratio > 100) {\r\n      return { borderBottom: '3px solid red' }; // Red underline for high risk\r\n    } else if (ratio >= 60) {\r\n      return { borderBottom: '3px solid orange' }; // Amber underline for moderate risk\r\n    }\r\n    return { borderBottom: '3px solid green' }; // Green underline for low risk\r\n  };\r\n\r\n  // Function to get style for Dividend Growth\r\n  const getDividendGrowthStyle = (growth) => {\r\n    if (growth < 0) {\r\n      return { borderBottom: '3px solid red' }; // Red underline for negative growth\r\n    } else if (growth === 0) {\r\n      return { borderBottom: '3px solid orange' }; // Amber underline for no growth\r\n    }\r\n    return { borderBottom: '3px solid green' }; // Green underline for positive growth\r\n  };\r\n  const handleSliderChange = (event, newValue) => {\r\n    setDividendThreshold(newValue);\r\n  };\r\n\r\n  // Assuming dividend_yield is a decimal like 0.0050 for 0.50%\r\n  const filteredStocks = stocks.filter(stock => (parseFloat(stock.dividend_yield) * 100) >= dividendThreshold);\r\n\r\n  const formatMarketCap = (value) => {\r\n    return `${(value / 1e9).toFixed(2)}b`;\r\n  };\r\n\r\n  const formatPercentage = (value) => {\r\n    return `${(value * 100).toFixed(2)}%`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography id=\"dividend-slider\" gutterBottom>\r\n        Dividend Yield Threshold: {dividendThreshold}%\r\n      </Typography>\r\n      <Slider\r\n        value={dividendThreshold}\r\n        onChange={handleSliderChange}\r\n        aria-labelledby=\"dividend-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={0.1}\r\n        marks\r\n        min={0}\r\n        max={20}\r\n      />\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align=\"right\">Market Cap</TableCell>\r\n              <TableCell align=\"right\">PE Ratio</TableCell>\r\n              <TableCell align=\"right\">Dividend Yield</TableCell>\r\n              <TableCell align=\"right\">Forward Yield</TableCell>\r\n              <TableCell align=\"right\">Payout Ratio</TableCell>\r\n              <TableCell align=\"right\">Div 5 year Growth rate</TableCell>\r\n              <TableCell align=\"right\">Div Date</TableCell>              \r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredStocks.map((stock, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <ReactCountryFlag\r\n                      countryCode={stock.country_iso}\r\n                      svg\r\n                      style={{\r\n                        width: '2em',\r\n                        height: '2em',\r\n                        marginRight: '0.5em', // Add some space between the flag and the text\r\n                      }}\r\n                      title={stock.country_iso}\r\n                    />\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                      <Typography variant=\"body1\">{stock.name}</Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">{stock.code} - NYSE</Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell align=\"right\">{formatMarketCap(stock.market_capitalization)}</TableCell>\r\n                <TableCell align=\"right\">{parseFloat(stock.pe_ratio).toFixed(2)}</TableCell>\r\n                <TableCell align=\"right\">{formatPercentage(stock.dividend_yield)}</TableCell>\r\n                <TableCell align=\"right\">{formatPercentage(stock.forward_annual_dividend_yield)}</TableCell>\r\n          <TableCell align=\"right\" style={getPayoutRatioStyle(stock.payout_ratio)}>\r\n            {stock.payout_ratio}%\r\n          </TableCell>\r\n          <TableCell align=\"right\" style={getDividendGrowthStyle(stock.cagr_5_years)}>\r\n            {stock.cagr_5_years}%\r\n          </TableCell>\r\n                <TableCell align=\"right\">{stock.dividend_date}</TableCell>                \r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DividendScreener;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}