{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\FinancialsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FinancialsTable = ({\n  incomeStatements = [],\n  balanceSheets = [],\n  cashFlows = []\n}) => {\n  _s();\n  const [selectedFinancial, setSelectedFinancial] = useState('Income Statement');\n  const [selectedFrequency, setSelectedFrequency] = useState('Yearly');\n\n  // Determine which data to use based on selectedFinancial and selectedFrequency\n  const financialData = (() => {\n    switch (selectedFinancial) {\n      case 'Income Statement':\n        return incomeStatements.filter(item => item.type === selectedFrequency);\n      case 'Balance Sheet':\n        return balanceSheets.filter(item => item.type === selectedFrequency);\n      case 'Cash Flow':\n        return cashFlows.filter(item => item.type === selectedFrequency);\n      default:\n        return [];\n    }\n  })();\n  if (!financialData.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading financial data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFinancial === 'Income Statement' ? 'contained' : 'outlined',\n      onClick: () => setSelectedFinancial('Income Statement'),\n      children: \"Income Statement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFinancial === 'Balance Sheet' ? 'contained' : 'outlined',\n      onClick: () => setSelectedFinancial('Balance Sheet'),\n      children: \"Balance Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFinancial === 'Cash Flow' ? 'contained' : 'outlined',\n      onClick: () => setSelectedFinancial('Cash Flow'),\n      children: \"Cash Flow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFrequency === 'Yearly' ? 'contained' : 'outlined',\n      onClick: () => setSelectedFrequency('Yearly'),\n      children: \"Yearly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFrequency === 'Quarterly' ? 'contained' : 'outlined',\n      onClick: () => setSelectedFrequency('Quarterly'),\n      children: \"Quarterly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.keys(financialData[0]).map((key, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: key.replace(/_/g, ' ').toUpperCase()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: financialData.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.entries(item).map(([key, value], cellIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: typeof value === 'number' ? value.toLocaleString() : value\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FinancialsTable, \"C5w7JQs2w6Fd6yhGuWJNYx0qODI=\");\n_c = FinancialsTable;\nexport default FinancialsTable;\nvar _c;\n$RefreshReg$(_c, \"FinancialsTable\");","map":{"version":3,"names":["React","useState","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","FinancialsTable","incomeStatements","balanceSheets","cashFlows","_s","selectedFinancial","setSelectedFinancial","selectedFrequency","setSelectedFrequency","financialData","filter","item","type","length","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","component","Object","keys","map","key","index","replace","toUpperCase","entries","value","cellIndex","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/FinancialsTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper\r\n} from '@mui/material';\r\n\r\nconst FinancialsTable = ({ incomeStatements = [], balanceSheets = [], cashFlows = [] }) => {\r\n  const [selectedFinancial, setSelectedFinancial] = useState('Income Statement');\r\n  const [selectedFrequency, setSelectedFrequency] = useState('Yearly');\r\n\r\n  // Determine which data to use based on selectedFinancial and selectedFrequency\r\n  const financialData = (() => {\r\n    switch (selectedFinancial) {\r\n      case 'Income Statement':\r\n        return incomeStatements.filter(item => item.type === selectedFrequency);\r\n      case 'Balance Sheet':\r\n        return balanceSheets.filter(item => item.type === selectedFrequency);\r\n      case 'Cash Flow':\r\n        return cashFlows.filter(item => item.type === selectedFrequency);\r\n      default:\r\n        return [];\r\n    }\r\n  })();\r\n\r\n  if (!financialData.length) {\r\n    return <div>Loading financial data...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Buttons to select financial type */}\r\n      <Button\r\n        variant={selectedFinancial === 'Income Statement' ? 'contained' : 'outlined'}\r\n        onClick={() => setSelectedFinancial('Income Statement')}\r\n      >\r\n        Income Statement\r\n      </Button>\r\n      <Button\r\n        variant={selectedFinancial === 'Balance Sheet' ? 'contained' : 'outlined'}\r\n        onClick={() => setSelectedFinancial('Balance Sheet')}\r\n      >\r\n        Balance Sheet\r\n      </Button>\r\n      <Button\r\n        variant={selectedFinancial === 'Cash Flow' ? 'contained' : 'outlined'}\r\n        onClick={() => setSelectedFinancial('Cash Flow')}\r\n      >\r\n        Cash Flow\r\n      </Button>\r\n\r\n      {/* Buttons to select frequency */}\r\n      <Button\r\n        variant={selectedFrequency === 'Yearly' ? 'contained' : 'outlined'}\r\n        onClick={() => setSelectedFrequency('Yearly')}\r\n      >\r\n        Yearly\r\n      </Button>\r\n      <Button\r\n        variant={selectedFrequency === 'Quarterly' ? 'contained' : 'outlined'}\r\n        onClick={() => setSelectedFrequency('Quarterly')}\r\n      >\r\n        Quarterly\r\n      </Button>\r\n\r\n      {/* Table to display financial data */}\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* Dynamically create table header based on the keys of the financial data */}\r\n              {Object.keys(financialData[0]).map((key, index) => (\r\n                <TableCell key={index}>{key.replace(/_/g, ' ').toUpperCase()}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {financialData.map((item, index) => (\r\n              <TableRow key={index}>\r\n                {/* Dynamically create table cells based on the values of the financial data */}\r\n                {Object.entries(item).map(([key, value], cellIndex) => (\r\n                  <TableCell key={cellIndex}>\r\n                    {typeof value === 'number' ? value.toLocaleString() : value}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FinancialsTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}