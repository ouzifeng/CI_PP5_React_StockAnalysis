{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\common\\\\Ticker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ticker = () => {\n  _s();\n  const containerRef = useRef();\n  useEffect(() => {\n    // Ensure the container is ready\n    if (containerRef.current) {\n      // Clear any existing content\n      containerRef.current.innerHTML = '';\n\n      // Create script element\n      const script = document.createElement('script');\n      script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-tickers.js';\n      script.async = true;\n      script.type = 'text/javascript';\n      script.innerHTML = JSON.stringify({\n        \"symbols\": [{\n          \"proName\": \"FOREXCOM:SPXUSD\",\n          \"title\": \"S&P 500\"\n        }, {\n          \"description\": \"NASDAQ\",\n          \"proName\": \"NASDAQ:IXIC\"\n        }, {\n          \"description\": \"FTSE 100\",\n          \"proName\": \"SPREADEX:FTSE\"\n        }, {\n          \"description\": \"RUSSELL 2000\",\n          \"proName\": \"CAPITALCOM:RTY\"\n        }, {\n          \"description\": \"DAX\",\n          \"proName\": \"XETR:DAX\"\n        }],\n        \"isTransparent\": false,\n        \"showSymbolLogo\": false,\n        \"colorTheme\": \"light\",\n        \"locale\": \"en\"\n      });\n\n      // Append script to the container\n      containerRef.current.appendChild(script);\n\n      // Cleanup function to remove script when component unmounts\n      return () => {\n        if (containerRef.current) {\n          containerRef.current.removeChild(script);\n        }\n      };\n    }\n  }, []); // Empty dependency array ensures the effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tradingview-widget-container\",\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tradingview-widget-container__widget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tradingview-widget-copyright\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.tradingview.com/\",\n        rel: \"noopener nofollow\",\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue-text\",\n          children: \"Track all markets on TradingView\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Ticker, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = Ticker;\nexport default Ticker;\nvar _c;\n$RefreshReg$(_c, \"Ticker\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Ticker","_s","containerRef","current","innerHTML","script","document","createElement","src","async","type","JSON","stringify","appendChild","removeChild","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","href","rel","target","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/common/Ticker.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst Ticker = () => {\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Ensure the container is ready\r\n    if (containerRef.current) {\r\n      // Clear any existing content\r\n      containerRef.current.innerHTML = '';\r\n\r\n      // Create script element\r\n      const script = document.createElement('script');\r\n      script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-tickers.js';\r\n      script.async = true;\r\n      script.type = 'text/javascript';\r\n      script.innerHTML = JSON.stringify({\r\n        \"symbols\": [\r\n          {\r\n            \"proName\": \"FOREXCOM:SPXUSD\",\r\n            \"title\": \"S&P 500\"\r\n          },\r\n          {\r\n            \"description\": \"NASDAQ\",\r\n            \"proName\": \"NASDAQ:IXIC\"\r\n          },\r\n          {\r\n            \"description\": \"FTSE 100\",\r\n            \"proName\": \"SPREADEX:FTSE\"\r\n          },\r\n          {\r\n            \"description\": \"RUSSELL 2000\",\r\n            \"proName\": \"CAPITALCOM:RTY\"\r\n          },\r\n          {\r\n            \"description\": \"DAX\",\r\n            \"proName\": \"XETR:DAX\"\r\n          }\r\n        ],\r\n        \"isTransparent\": false,\r\n        \"showSymbolLogo\": false,\r\n        \"colorTheme\": \"light\",\r\n        \"locale\": \"en\"\r\n      });\r\n\r\n      // Append script to the container\r\n      containerRef.current.appendChild(script);\r\n\r\n      // Cleanup function to remove script when component unmounts\r\n      return () => {\r\n        if (containerRef.current) {\r\n          containerRef.current.removeChild(script);\r\n        }\r\n      };\r\n    }\r\n  }, []); // Empty dependency array ensures the effect runs once on mount\r\n\r\n  return (\r\n    <div className=\"tradingview-widget-container\" ref={containerRef}>\r\n      <div className=\"tradingview-widget-container__widget\"></div>\r\n      <div className=\"tradingview-widget-copyright\">\r\n        <a href=\"https://www.tradingview.com/\" rel=\"noopener nofollow\" target=\"_blank\">\r\n          <span className=\"blue-text\">Track all markets on TradingView</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,YAAY,GAAGL,MAAM,CAAC,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,IAAIM,YAAY,CAACC,OAAO,EAAE;MACxB;MACAD,YAAY,CAACC,OAAO,CAACC,SAAS,GAAG,EAAE;;MAEnC;MACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAG,uEAAuE;MACpFH,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBJ,MAAM,CAACK,IAAI,GAAG,iBAAiB;MAC/BL,MAAM,CAACD,SAAS,GAAGO,IAAI,CAACC,SAAS,CAAC;QAChC,SAAS,EAAE,CACT;UACE,SAAS,EAAE,iBAAiB;UAC5B,OAAO,EAAE;QACX,CAAC,EACD;UACE,aAAa,EAAE,QAAQ;UACvB,SAAS,EAAE;QACb,CAAC,EACD;UACE,aAAa,EAAE,UAAU;UACzB,SAAS,EAAE;QACb,CAAC,EACD;UACE,aAAa,EAAE,cAAc;UAC7B,SAAS,EAAE;QACb,CAAC,EACD;UACE,aAAa,EAAE,KAAK;UACpB,SAAS,EAAE;QACb,CAAC,CACF;QACD,eAAe,EAAE,KAAK;QACtB,gBAAgB,EAAE,KAAK;QACvB,YAAY,EAAE,OAAO;QACrB,QAAQ,EAAE;MACZ,CAAC,CAAC;;MAEF;MACAV,YAAY,CAACC,OAAO,CAACU,WAAW,CAACR,MAAM,CAAC;;MAExC;MACA,OAAO,MAAM;QACX,IAAIH,YAAY,CAACC,OAAO,EAAE;UACxBD,YAAY,CAACC,OAAO,CAACW,WAAW,CAACT,MAAM,CAAC;QAC1C;MACF,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAKgB,SAAS,EAAC,8BAA8B;IAACC,GAAG,EAAEd,YAAa;IAAAe,QAAA,gBAC9DlB,OAAA;MAAKgB,SAAS,EAAC;IAAsC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5DtB,OAAA;MAAKgB,SAAS,EAAC,8BAA8B;MAAAE,QAAA,eAC3ClB,OAAA;QAAGuB,IAAI,EAAC,8BAA8B;QAACC,GAAG,EAAC,mBAAmB;QAACC,MAAM,EAAC,QAAQ;QAAAP,QAAA,eAC5ElB,OAAA;UAAMgB,SAAS,EAAC,WAAW;UAAAE,QAAA,EAAC;QAAgC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjEID,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAmEZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}