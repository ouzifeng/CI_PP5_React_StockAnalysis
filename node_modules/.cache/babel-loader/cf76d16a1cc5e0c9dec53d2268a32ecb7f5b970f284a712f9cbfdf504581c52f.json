{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\pages\\\\DividendScreener.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DividendScreener() {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [dividendThreshold, setDividendThreshold] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStockData = async () => {\n      try {\n        const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/stocks/');\n        if (response.data) {\n          setStocks(response.data);\n        } else {\n          console.error('Error fetching stock data:', response.status);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching stock data:', error);\n        setLoading(false);\n      }\n    };\n    fetchStockData();\n  }, []);\n  const handleSliderChange = (event, newValue) => {\n    setDividendThreshold(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"dividend-slider\",\n      gutterBottom: true,\n      children: [\"Dividend Yield Threshold: \", dividendThreshold, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: dividendThreshold,\n      onChange: handleSliderChange,\n      \"aria-labelledby\": \"dividend-slider\",\n      valueLabelDisplay: \"auto\",\n      step: 0.1,\n      marks: true,\n      min: 0,\n      max: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) : stocks.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Dividend Yield (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Market Cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"P/E Ratio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: stocks.map(stock => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: stock.dividend_data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.dividend_data.dividend_yield\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.dividend_data.market_capitalization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.dividend_data.pe_ratio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)]\n          }, stock.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(DividendScreener, \"7r9Bl/uFqzyyXgLiINTrM6cRwhY=\");\n_c = DividendScreener;\nexport default DividendScreener;\nvar _c;\n$RefreshReg$(_c, \"DividendScreener\");","map":{"version":3,"names":["React","useState","useEffect","axios","Slider","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","CircularProgress","jsxDEV","_jsxDEV","DividendScreener","_s","stocks","setStocks","dividendThreshold","setDividendThreshold","loading","setLoading","fetchStockData","response","get","data","console","error","status","handleSliderChange","event","newValue","children","id","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","valueLabelDisplay","step","marks","min","max","length","align","map","stock","component","scope","dividend_data","name","dividend_yield","market_capitalization","pe_ratio","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/pages/DividendScreener.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, CircularProgress } from '@mui/material';\r\n\r\nfunction DividendScreener() {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [dividendThreshold, setDividendThreshold] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchStockData = async () => {\r\n            try {\r\n                const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/stocks/');\r\n                \r\n                if (response.data) {\r\n                    setStocks(response.data);\r\n                } else {\r\n                    console.error('Error fetching stock data:', response.status);\r\n                }\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching stock data:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchStockData();\r\n    }, []);\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setDividendThreshold(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography id=\"dividend-slider\" gutterBottom>\r\n                Dividend Yield Threshold: {dividendThreshold}%\r\n            </Typography>\r\n            <Slider\r\n                value={dividendThreshold}\r\n                onChange={handleSliderChange}\r\n                aria-labelledby=\"dividend-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={0.1}\r\n                marks\r\n                min={0}\r\n                max={20} \r\n            />\r\n            <Paper>\r\n                {loading ? (\r\n                    <CircularProgress />\r\n                ) : stocks.length > 0 ? (\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell align=\"right\">Dividend Yield (%)</TableCell>\r\n                                <TableCell align=\"right\">Market Cap</TableCell>\r\n                                <TableCell align=\"right\">P/E Ratio</TableCell>\r\n                                {/* Add more columns as needed */}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {stocks.map((stock) => (\r\n                                <TableRow key={stock.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {stock.dividend_data.name}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{stock.dividend_data.dividend_yield}</TableCell>\r\n                                    <TableCell align=\"right\">{stock.dividend_data.market_capitalization}</TableCell>\r\n                                    <TableCell align=\"right\">{stock.dividend_data.pe_ratio}</TableCell>\r\n                                    {/* Add more cells as needed */}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                ) : (\r\n                    <Typography>No data available</Typography>\r\n                )}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DividendScreener;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9H,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMqB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,8DAA8D,CAAC;QAEhG,IAAID,QAAQ,CAACE,IAAI,EAAE;UACfR,SAAS,CAACM,QAAQ,CAACE,IAAI,CAAC;QAC5B,CAAC,MAAM;UACHC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEJ,QAAQ,CAACK,MAAM,CAAC;QAChE;QACAP,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDN,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC5CZ,oBAAoB,CAACY,QAAQ,CAAC;EAClC,CAAC;EAED,oBACIlB,OAAA;IAAAmB,QAAA,gBACInB,OAAA,CAACT,UAAU;MAAC6B,EAAE,EAAC,iBAAiB;MAACC,YAAY;MAAAF,QAAA,GAAC,4BAChB,EAACd,iBAAiB,EAAC,GACjD;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbzB,OAAA,CAACV,MAAM;MACHoC,KAAK,EAAErB,iBAAkB;MACzBsB,QAAQ,EAAEX,kBAAmB;MAC7B,mBAAgB,iBAAiB;MACjCY,iBAAiB,EAAC,MAAM;MACxBC,IAAI,EAAE,GAAI;MACVC,KAAK;MACLC,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE;IAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFzB,OAAA,CAACH,KAAK;MAAAsB,QAAA,EACDZ,OAAO,gBACJP,OAAA,CAACF,gBAAgB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GACpBtB,MAAM,CAAC8B,MAAM,GAAG,CAAC,gBACjBjC,OAAA,CAACR,KAAK;QAAA2B,QAAA,gBACFnB,OAAA,CAACL,SAAS;UAAAwB,QAAA,eACNnB,OAAA,CAACJ,QAAQ;YAAAuB,QAAA,gBACLnB,OAAA,CAACN,SAAS;cAAAyB,QAAA,EAAC;YAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC3BzB,OAAA,CAACN,SAAS;cAACwC,KAAK,EAAC,OAAO;cAAAf,QAAA,EAAC;YAAkB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACvDzB,OAAA,CAACN,SAAS;cAACwC,KAAK,EAAC,OAAO;cAAAf,QAAA,EAAC;YAAU;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC/CzB,OAAA,CAACN,SAAS;cAACwC,KAAK,EAAC,OAAO;cAAAf,QAAA,EAAC;YAAS;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAExC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACZzB,OAAA,CAACP,SAAS;UAAA0B,QAAA,EACLhB,MAAM,CAACgC,GAAG,CAAEC,KAAK,iBACdpC,OAAA,CAACJ,QAAQ;YAAAuB,QAAA,gBACLnB,OAAA,CAACN,SAAS;cAAC2C,SAAS,EAAC,IAAI;cAACC,KAAK,EAAC,KAAK;cAAAnB,QAAA,EAChCiB,KAAK,CAACG,aAAa,CAACC;YAAI;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACZzB,OAAA,CAACN,SAAS;cAACwC,KAAK,EAAC,OAAO;cAAAf,QAAA,EAAEiB,KAAK,CAACG,aAAa,CAACE;YAAc;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACzEzB,OAAA,CAACN,SAAS;cAACwC,KAAK,EAAC,OAAO;cAAAf,QAAA,EAAEiB,KAAK,CAACG,aAAa,CAACG;YAAqB;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAChFzB,OAAA,CAACN,SAAS;cAACwC,KAAK,EAAC,OAAO;cAAAf,QAAA,EAAEiB,KAAK,CAACG,aAAa,CAACI;YAAQ;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA,GANxDW,KAAK,CAAChB,EAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQb,CACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,gBAERzB,OAAA,CAACT,UAAU;QAAA4B,QAAA,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAC5C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACvB,EAAA,CA9EQD,gBAAgB;AAAA2C,EAAA,GAAhB3C,gBAAgB;AAgFzB,eAAeA,gBAAgB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}