{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\pages\\\\DividendScreener.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DividendScreener() {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [dividendThreshold, setDividendThreshold] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/dividend_data');\n        // Set stocks to the results array from the response\n        setStocks(response.data.results);\n      } catch (error) {\n        console.error('Error fetching stocks:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSliderChange = (event, newValue) => {\n    setDividendThreshold(newValue);\n  };\n\n  // Assuming dividendYield is a decimal like 0.0050 for 0.50%\n  const filteredStocks = stocks.filter(stock => stock.dividend_yield * 100 >= dividendThreshold);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"dividend-slider\",\n      gutterBottom: true,\n      children: [\"Dividend Yield Threshold: \", dividendThreshold, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: dividendThreshold,\n      onChange: handleSliderChange,\n      \"aria-labelledby\": \"dividend-slider\",\n      valueLabelDisplay: \"auto\",\n      step: 0.1,\n      marks: true,\n      min: 0,\n      max: 20 // Adjust based on your data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: stocks[0] && Object.keys(stocks[0]).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: key === 'name' ? 'inherit' : 'right',\n              children: key.replace(/_/g, ' ').toUpperCase()\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.entries(stock).map(([key, value]) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: key === 'name' ? 'inherit' : 'right',\n              children: typeof value === 'number' ? value.toLocaleString() : value\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(DividendScreener, \"vjbqRmYPll+ehJMEN/uzJ6ek384=\");\n_c = DividendScreener;\nexport default DividendScreener;\nvar _c;\n$RefreshReg$(_c, \"DividendScreener\");","map":{"version":3,"names":["React","useState","useEffect","axios","Slider","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","DividendScreener","_s","stocks","setStocks","dividendThreshold","setDividendThreshold","fetchData","response","get","data","results","error","console","handleSliderChange","event","newValue","filteredStocks","filter","stock","dividend_yield","children","id","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","valueLabelDisplay","step","marks","min","max","Object","keys","map","key","align","replace","toUpperCase","index","entries","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/pages/DividendScreener.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@mui/material';\r\n\r\nfunction DividendScreener() {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [dividendThreshold, setDividendThreshold] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/dividend_data');\r\n        // Set stocks to the results array from the response\r\n        setStocks(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching stocks:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setDividendThreshold(newValue);\r\n  };\r\n\r\n  // Assuming dividendYield is a decimal like 0.0050 for 0.50%\r\n  const filteredStocks = stocks.filter(stock => (stock.dividend_yield * 100) >= dividendThreshold);\r\n\r\n  return (\r\n    <div>\r\n      <Typography id=\"dividend-slider\" gutterBottom>\r\n        Dividend Yield Threshold: {dividendThreshold}%\r\n      </Typography>\r\n      <Slider\r\n        value={dividendThreshold}\r\n        onChange={handleSliderChange}\r\n        aria-labelledby=\"dividend-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={0.1}\r\n        marks\r\n        min={0}\r\n        max={20} // Adjust based on your data\r\n      />\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {stocks[0] && Object.keys(stocks[0]).map((key) => (\r\n                <TableCell key={key} align={key === 'name' ? 'inherit' : 'right'}>\r\n                  {key.replace(/_/g, ' ').toUpperCase()}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredStocks.map((stock, index) => (\r\n              <TableRow key={index}>\r\n                {Object.entries(stock).map(([key, value]) => (\r\n                  <TableCell key={key} align={key === 'name' ? 'inherit' : 'right'}>\r\n                    {typeof value === 'number' ? value.toLocaleString() : value}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DividendScreener;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}