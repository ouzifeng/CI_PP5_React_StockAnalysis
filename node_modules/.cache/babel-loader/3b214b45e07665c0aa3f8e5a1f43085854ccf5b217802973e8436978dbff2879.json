{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\pages\\\\DividendScreener.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DividendScreener() {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [dividendThreshold, setDividendThreshold] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/stocks'); // Update with your API endpoint\n        setStocks(response.data);\n      } catch (error) {\n        console.error('Error fetching stocks:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSliderChange = (event, newValue) => {\n    setDividendThreshold(newValue);\n  };\n  const filteredStocks = stocks.filter(stock => stock.dividend_yield >= dividendThreshold);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"dividend-slider\",\n      gutterBottom: true,\n      children: [\"Dividend Yield Threshold: \", dividendThreshold, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: dividendThreshold,\n      onChange: handleSliderChange,\n      \"aria-labelledby\": \"dividend-slider\",\n      valueLabelDisplay: \"auto\",\n      step: 0.1,\n      marks: true,\n      min: 0,\n      max: 20 // Adjust based on your data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Dividend Yield (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Market Cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"P/E Ratio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredStocks.map(stock => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: stock.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.dividend_yield\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.market_capitalization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.pe_ratio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, stock.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(DividendScreener, \"vjbqRmYPll+ehJMEN/uzJ6ek384=\");\n_c = DividendScreener;\nexport default DividendScreener;\nvar _c;\n$RefreshReg$(_c, \"DividendScreener\");","map":{"version":3,"names":["React","useState","useEffect","axios","Slider","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","DividendScreener","_s","stocks","setStocks","dividendThreshold","setDividendThreshold","fetchData","response","get","data","error","console","handleSliderChange","event","newValue","filteredStocks","filter","stock","dividend_yield","children","id","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","valueLabelDisplay","step","marks","min","max","align","map","component","scope","name","market_capitalization","pe_ratio","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/pages/DividendScreener.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@mui/material';\r\n\r\nfunction DividendScreener() {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [dividendThreshold, setDividendThreshold] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/stocks'); // Update with your API endpoint\r\n                setStocks(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching stocks:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setDividendThreshold(newValue);\r\n    };\r\n\r\n    const filteredStocks = stocks.filter(stock => stock.dividend_yield >= dividendThreshold);\r\n\r\n    return (\r\n        <div>\r\n            <Typography id=\"dividend-slider\" gutterBottom>\r\n                Dividend Yield Threshold: {dividendThreshold}%\r\n            </Typography>\r\n            <Slider\r\n                value={dividendThreshold}\r\n                onChange={handleSliderChange}\r\n                aria-labelledby=\"dividend-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={0.1}\r\n                marks\r\n                min={0}\r\n                max={20} // Adjust based on your data\r\n            />\r\n            <Paper>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"right\">Dividend Yield (%)</TableCell>\r\n                            <TableCell align=\"right\">Market Cap</TableCell>\r\n                            <TableCell align=\"right\">P/E Ratio</TableCell>\r\n                            {/* Add more columns as needed */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {filteredStocks.map((stock) => (\r\n                            <TableRow key={stock.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {stock.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{stock.dividend_yield}</TableCell>\r\n                                <TableCell align=\"right\">{stock.market_capitalization}</TableCell>\r\n                                <TableCell align=\"right\">{stock.pe_ratio}</TableCell>\r\n                                {/* Add more cells as needed */}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DividendScreener;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}