{"ast":null,"code":"import React from'react';import Typography from'@mui/material/Typography';import Slider from'@mui/material/Slider';import Box from'@mui/material/Box';import Paper from'@mui/material/Paper';import{useTheme}from'@mui/material/styles';import{Skeleton}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AnalystOverallRating=_ref=>{let{ratings}=_ref;const theme=useTheme();const calculateOverallRating=ratings=>{// Define the weight for each rating\nconst weights={strong_buy:5,buy:4,hold:3,sell:2,strong_sell:1};// Extract only the rating keys that have corresponding weights\nconst ratingKeys=Object.keys(weights);// Calculate the weighted sum of ratings\nconst weightedSum=ratingKeys.reduce((sum,key)=>{const count=ratings[key];if(typeof count!=='number'){console.error(\"Invalid rating count for \".concat(key,\":\"),count);return sum;}return sum+weights[key]*count;},0);// Calculate the total number of analysts\nconst numberOfAnalysts=ratingKeys.reduce((sum,key)=>{const count=ratings[key];return sum+count;},0);if(numberOfAnalysts===0){console.error('Total number of analysts is zero.');return'N/A';}// Return the weighted average rounded to one decimal place\nreturn(weightedSum/numberOfAnalysts).toFixed(1);};const overallRating=calculateOverallRating(ratings);// Create marks for the Slider\nconst marks=[{value:1,label:'Strong Sell'},{value:2,label:'Sell'},{value:3,label:'Hold'},{value:4,label:'Buy'},{value:5,label:'Strong Buy'}];// Calculate the number of analysts separately to avoid including non-rating properties\nconst numberOfAnalysts=['strong_buy','buy','hold','sell','strong_sell'].reduce((sum,key)=>sum+ratings[key],0);return/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{mb:3,overflow:'hidden'},children:[/*#__PURE__*/_jsx(Box,{sx:{p:1,bgcolor:theme.palette.primary.main,textAlign:'center'},children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{color:'common.white',textAlign:'center'},children:\"Average Analyst Rating\"})}),/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[ratings?/*#__PURE__*/_jsx(Slider,{value:parseFloat(overallRating),\"aria-labelledby\":\"analyst-rating-slider\",valueLabelDisplay:\"auto\",step:0.1,marks:marks,min:1,max:5,disabled:true,sx:{color:theme.palette.primary.main,'& .MuiSlider-thumb':{backgroundColor:theme.palette.common.white},'& .MuiSlider-markLabel':{color:theme.palette.text.primary,fontSize:'12px',// Reduce font size if needed\nwhiteSpace:'normal',// Allow text to wrap\ndisplay:'block'// Set display to block to enable wrapping\n},'& .MuiSlider-valueLabel':{backgroundColor:'transparent',color:theme.palette.primary.main,'& *':{background:'transparent',color:theme.palette.primary.main}}}}):/*#__PURE__*/_jsx(Skeleton,{animation:\"wave\",height:20,width:200}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",color:\"primary\",sx:{mt:2,fontSize:'14px'},children:ratings?\"Overall Rating: \".concat(overallRating!=='N/A'?parseFloat(overallRating).toFixed(1):'N/A',\" based on \").concat(numberOfAnalysts,\" opinions\"):/*#__PURE__*/_jsx(Skeleton,{animation:\"wave\",height:20,width:300})})]})]});};export default AnalystOverallRating;","map":{"version":3,"names":["React","Typography","Slider","Box","Paper","useTheme","Skeleton","jsx","_jsx","jsxs","_jsxs","AnalystOverallRating","_ref","ratings","theme","calculateOverallRating","weights","strong_buy","buy","hold","sell","strong_sell","ratingKeys","Object","keys","weightedSum","reduce","sum","key","count","console","error","concat","numberOfAnalysts","toFixed","overallRating","marks","value","label","elevation","sx","mb","overflow","children","p","bgcolor","palette","primary","main","textAlign","variant","color","parseFloat","valueLabelDisplay","step","min","max","disabled","backgroundColor","common","white","text","fontSize","whiteSpace","display","background","animation","height","width","align","mt"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/AnalystOverallRating.js"],"sourcesContent":["import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Skeleton } from '@mui/material';\r\n\r\nconst AnalystOverallRating = ({ ratings }) => {\r\n  const theme = useTheme();\r\n\r\n  const calculateOverallRating = (ratings) => {\r\n    // Define the weight for each rating\r\n    const weights = {\r\n      strong_buy: 5,\r\n      buy: 4,\r\n      hold: 3,\r\n      sell: 2,\r\n      strong_sell: 1\r\n    };\r\n\r\n    // Extract only the rating keys that have corresponding weights\r\n    const ratingKeys = Object.keys(weights);\r\n\r\n    // Calculate the weighted sum of ratings\r\n    const weightedSum = ratingKeys.reduce((sum, key) => {\r\n      const count = ratings[key];\r\n      if (typeof count !== 'number') {\r\n        console.error(`Invalid rating count for ${key}:`, count);\r\n        return sum;\r\n      }\r\n      return sum + (weights[key] * count);\r\n    }, 0);\r\n\r\n    // Calculate the total number of analysts\r\n    const numberOfAnalysts = ratingKeys.reduce((sum, key) => {\r\n      const count = ratings[key];\r\n      return sum + count;\r\n    }, 0);\r\n\r\n    if (numberOfAnalysts === 0) {\r\n      console.error('Total number of analysts is zero.');\r\n      return 'N/A';\r\n    }\r\n\r\n    // Return the weighted average rounded to one decimal place\r\n    return (weightedSum / numberOfAnalysts).toFixed(1);\r\n  };\r\n\r\n  const overallRating = calculateOverallRating(ratings);\r\n\r\n  // Create marks for the Slider\r\n  const marks = [\r\n    { value: 1, label: 'Strong Sell' },\r\n    { value: 2, label: 'Sell' },\r\n    { value: 3, label: 'Hold' },\r\n    { value: 4, label: 'Buy' },\r\n    { value: 5, label: 'Strong Buy' },\r\n  ];\r\n\r\n  // Calculate the number of analysts separately to avoid including non-rating properties\r\n  const numberOfAnalysts = ['strong_buy', 'buy', 'hold', 'sell', 'strong_sell']\r\n    .reduce((sum, key) => sum + ratings[key], 0);\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ mb: 3, overflow: 'hidden' }}>\r\n      <Box sx={{ p: 1, bgcolor: theme.palette.primary.main, textAlign: 'center' }}>\r\n        {/* Typography component for the chart title */}\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Average Analyst Rating</Typography>\r\n      </Box>\r\n      <Box sx={{ p: 2 }}>\r\n        {ratings ? (\r\n          <Slider\r\n            value={parseFloat(overallRating)}\r\n            aria-labelledby=\"analyst-rating-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={0.1}\r\n            marks={marks}\r\n            min={1}\r\n            max={5}\r\n            disabled\r\n            sx={{\r\n              color: theme.palette.primary.main,\r\n              '& .MuiSlider-thumb': {\r\n                backgroundColor: theme.palette.common.white,\r\n              },\r\n              '& .MuiSlider-markLabel': {\r\n                color: theme.palette.text.primary,\r\n                fontSize: '12px', // Reduce font size if needed\r\n                whiteSpace: 'normal', // Allow text to wrap\r\n                display: 'block', // Set display to block to enable wrapping\r\n              },\r\n              '& .MuiSlider-valueLabel': {\r\n                backgroundColor: 'transparent',\r\n                color: theme.palette.primary.main,\r\n                '& *': {\r\n                  background: 'transparent',\r\n                  color: theme.palette.primary.main,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <Skeleton animation=\"wave\" height={20} width={200} />\r\n        )}\r\n        <Typography variant=\"body2\" align=\"center\" color=\"primary\" sx={{ mt: 2, fontSize: '14px' }}>\r\n          {ratings ? (\r\n            `Overall Rating: ${overallRating !== 'N/A' ? parseFloat(overallRating).toFixed(1) : 'N/A'} based on ${numberOfAnalysts} opinions`\r\n          ) : (\r\n            <Skeleton animation=\"wave\" height={20} width={300} />\r\n          )}\r\n        </Typography>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AnalystOverallRating;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}