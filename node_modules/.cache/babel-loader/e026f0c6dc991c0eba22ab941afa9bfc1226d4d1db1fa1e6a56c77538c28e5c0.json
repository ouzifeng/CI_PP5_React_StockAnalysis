{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\pages\\\\DividendScreener.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Box, Skeleton } from '@mui/material';\nimport ReactCountryFlag from \"react-country-flag\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DividendScreener() {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [dividendThreshold, setDividendThreshold] = useState(0);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true); // Start loading\n        const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/dividend_data');\n        setStocks(response.data.results);\n      } catch (error) {\n        console.error('Error fetching stocks:', error);\n      } finally {\n        setLoading(false); // Stop loading regardless of the outcome\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Function to get style for Payout Ratio\n  const getPayoutRatioStyle = ratio => {\n    if (ratio > 100) {\n      return {\n        color: 'red'\n      }; // Red for high risk\n    } else if (ratio >= 60) {\n      return {\n        color: 'orange'\n      }; // Amber for moderate risk\n    }\n    return {\n      color: 'green'\n    }; // Green for low risk\n  };\n\n  // Function to get style for Dividend Growth\n  const getDividendGrowthStyle = growth => {\n    if (growth < 0) {\n      return {\n        color: 'red'\n      }; // Red for negative growth\n    } else if (growth === 0) {\n      return {\n        color: 'orange'\n      }; // Amber for no growth\n    }\n    return {\n      color: 'green'\n    }; // Green for positive growth\n  };\n  const handleSliderChange = (event, newValue) => {\n    setDividendThreshold(newValue);\n  };\n\n  // Assuming dividend_yield is a decimal like 0.0050 for 0.50%\n  const filteredStocks = stocks.filter(stock => parseFloat(stock.dividend_yield) * 100 >= dividendThreshold);\n  const formatMarketCap = value => {\n    return `${(value / 1e9).toFixed(2)}b`;\n  };\n  const formatPercentage = value => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n  const handleRowClick = primaryTicker => {\n    navigate(`/stocks/${primaryTicker}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"dividend-slider\",\n      gutterBottom: true,\n      children: [\"Yield Filter: \", dividendThreshold, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: dividendThreshold,\n      onChange: handleSliderChange,\n      \"aria-labelledby\": \"dividend-slider\",\n      valueLabelDisplay: \"auto\",\n      step: 0.1,\n      marks: true,\n      min: 0,\n      max: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Market Cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"PE Ratio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Dividend Yield\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Forward Yield\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Payout Ratio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Div 5 year Growth rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Div Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: loading ? [...Array(5)].map((e, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 8,\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                variant: \"rectangular\",\n                width: \"100%\",\n                height: 53,\n                animation: \"wave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)) : filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => handleRowClick(stock.primary_ticker),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n                  countryCode: stock.country_iso,\n                  svg: true,\n                  style: {\n                    width: '2em',\n                    height: '2em',\n                    marginRight: '0.5em' // Add some space between the flag and the text\n                  },\n                  title: stock.country_iso\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexDirection: 'column'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: stock.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: [stock.primary_ticker, \" - \", stock.exchange]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [stock.currency_symbol, formatMarketCap(stock.market_capitalization)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: parseFloat(stock.pe_ratio).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: formatPercentage(stock.dividend_yield)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: formatPercentage(stock.forward_annual_dividend_yield)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              style: getPayoutRatioStyle(stock.payout_ratio),\n              children: [Number(stock.payout_ratio).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              style: getDividendGrowthStyle(stock.cagr_5_years),\n              children: [Number(stock.cagr_5_years).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: stock.dividend_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(DividendScreener, \"XDtFSMOs7qL1Fpnkk8VsM2CbgdA=\", false, function () {\n  return [useNavigate];\n});\n_c = DividendScreener;\nexport default DividendScreener;\nvar _c;\n$RefreshReg$(_c, \"DividendScreener\");","map":{"version":3,"names":["React","useState","useEffect","axios","Slider","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","Box","Skeleton","ReactCountryFlag","useNavigate","jsxDEV","_jsxDEV","DividendScreener","_s","stocks","setStocks","dividendThreshold","setDividendThreshold","navigate","loading","setLoading","fetchData","response","get","data","results","error","console","getPayoutRatioStyle","ratio","color","getDividendGrowthStyle","growth","handleSliderChange","event","newValue","filteredStocks","filter","stock","parseFloat","dividend_yield","formatMarketCap","value","toFixed","formatPercentage","handleRowClick","primaryTicker","children","id","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onChange","valueLabelDisplay","step","marks","min","max","align","Array","map","e","i","colSpan","variant","width","height","animation","index","hover","style","cursor","onClick","primary_ticker","component","scope","sx","display","alignItems","countryCode","country_iso","svg","marginRight","title","flexDirection","name","exchange","currency_symbol","market_capitalization","pe_ratio","forward_annual_dividend_yield","payout_ratio","Number","cagr_5_years","dividend_date","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/pages/DividendScreener.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Slider, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Box, Skeleton } from '@mui/material';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction DividendScreener() {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [dividendThreshold, setDividendThreshold] = useState(0);\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true); // Start loading\r\n        const response = await axios.get('https://django-stocks-ecbc6bc5e208.herokuapp.com/api/dividend_data');\r\n        setStocks(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching stocks:', error);\r\n      } finally {\r\n        setLoading(false); // Stop loading regardless of the outcome\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n    // Function to get style for Payout Ratio\r\n  const getPayoutRatioStyle = (ratio) => {\r\n    if (ratio > 100) {\r\n      return { color: 'red' }; // Red for high risk\r\n    } else if (ratio >= 60) {\r\n      return { color: 'orange' }; // Amber for moderate risk\r\n    }\r\n    return { color: 'green' }; // Green for low risk\r\n  };\r\n\r\n  // Function to get style for Dividend Growth\r\n  const getDividendGrowthStyle = (growth) => {\r\n    if (growth < 0) {\r\n      return { color: 'red' }; // Red for negative growth\r\n    } else if (growth === 0) {\r\n      return { color: 'orange' }; // Amber for no growth\r\n    }\r\n    return { color: 'green' }; // Green for positive growth\r\n  };\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setDividendThreshold(newValue);\r\n  };\r\n\r\n  // Assuming dividend_yield is a decimal like 0.0050 for 0.50%\r\n  const filteredStocks = stocks.filter(stock => (parseFloat(stock.dividend_yield) * 100) >= dividendThreshold);\r\n\r\n  const formatMarketCap = (value) => {\r\n    return `${(value / 1e9).toFixed(2)}b`;\r\n  };\r\n\r\n  const formatPercentage = (value) => {\r\n    return `${(value * 100).toFixed(2)}%`;\r\n  };\r\n\r\n  const handleRowClick = (primaryTicker) => {\r\n    navigate(`/stocks/${primaryTicker}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography id=\"dividend-slider\" gutterBottom>\r\n        Yield Filter: {dividendThreshold}%\r\n      </Typography>\r\n      <Slider\r\n        value={dividendThreshold}\r\n        onChange={handleSliderChange}\r\n        aria-labelledby=\"dividend-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={0.1}\r\n        marks\r\n        min={0}\r\n        max={20}\r\n      />\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align=\"right\">Market Cap</TableCell>\r\n              <TableCell align=\"right\">PE Ratio</TableCell>\r\n              <TableCell align=\"right\">Dividend Yield</TableCell>\r\n              <TableCell align=\"right\">Forward Yield</TableCell>\r\n              <TableCell align=\"right\">Payout Ratio</TableCell>\r\n              <TableCell align=\"right\">Div 5 year Growth rate</TableCell>\r\n              <TableCell align=\"right\">Div Date</TableCell>              \r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {loading ? (\r\n              [...Array(5)].map((e, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell colSpan={8}>\r\n                    <Skeleton variant=\"rectangular\" width=\"100%\" height={53} animation=\"wave\" />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              filteredStocks.map((stock, index) => (\r\n                <TableRow key={index} hover style={{ cursor: 'pointer' }} onClick={() => handleRowClick(stock.primary_ticker)}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <ReactCountryFlag\r\n                        countryCode={stock.country_iso}\r\n                        svg\r\n                        style={{\r\n                          width: '2em',\r\n                          height: '2em',\r\n                          marginRight: '0.5em', // Add some space between the flag and the text\r\n                        }}\r\n                        title={stock.country_iso}\r\n                      />\r\n                      <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                        <Typography variant=\"body1\">{stock.name}</Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">{stock.primary_ticker} - {stock.exchange}</Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{stock.currency_symbol}{formatMarketCap(stock.market_capitalization)}</TableCell>\r\n                  <TableCell align=\"right\">{parseFloat(stock.pe_ratio).toFixed(2)}</TableCell>\r\n                  <TableCell align=\"right\">{formatPercentage(stock.dividend_yield)}</TableCell>\r\n                  <TableCell align=\"right\">{formatPercentage(stock.forward_annual_dividend_yield)}</TableCell>\r\n                  <TableCell align=\"right\" style={getPayoutRatioStyle(stock.payout_ratio)}>\r\n                    {Number(stock.payout_ratio).toFixed(2)}%\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={getDividendGrowthStyle(stock.cagr_5_years)}>\r\n                    {Number(stock.cagr_5_years).toFixed(2)}%\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{stock.dividend_date}</TableCell>\r\n                </TableRow>\r\n              ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DividendScreener;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}