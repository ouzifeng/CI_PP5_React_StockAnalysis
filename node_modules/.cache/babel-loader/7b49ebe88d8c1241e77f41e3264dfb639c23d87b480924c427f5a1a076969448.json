{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\Cashflow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box, Grid, Skeleton, Alert } from '@mui/material';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport Papa from 'papaparse';\nimport { AuthContext } from '../../context/AuthContext';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CashFlows = ({\n  cashFlows\n}) => {\n  _s();\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\n  const [filteredCashFlows, setFilteredCashFlows] = useState([]);\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const filteredData = cashFlows === null || cashFlows === void 0 ? void 0 : cashFlows.filter(flow => flow.type.toLowerCase() === selectedFrequency);\n    setFilteredCashFlows(filteredData);\n  }, [cashFlows, selectedFrequency]);\n  const cashFlowMetricsOrder = ['net_income', 'depreciation', 'other_non_cash_items', 'stock_based_compensation', 'change_in_working_capital', 'change_to_account_receivables', 'change_to_inventory', 'change_to_liabilities', 'change_to_operating_activities', 'change_to_netincome', 'capital_expenditures', 'cash_flows_other_operating', 'total_cash_from_operating_activities', 'investments', 'other_cashflows_from_investing_activities', 'total_cashflows_from_investing_activities', 'dividends_paid', 'sale_purchase_of_stock', 'issuance_of_capital_stock', 'net_borrowings', 'other_cashflows_from_financing_activities', 'total_cash_from_financing_activities', 'exchange_rate_changes', 'cash_and_cash_equivalents_changes', 'change_in_cash', 'begin_period_cash_flow', 'end_period_cash_flow', 'free_cash_flow'];\n  const formatLabel = key => {\n    return key.replace(/_/g, ' ').split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n\n  // Prepare the data structure for rendering\n  const rows = cashFlowMetricsOrder.map(key => {\n    const row = {\n      metric: formatLabel(key)\n    };\n    filteredCashFlows.forEach(flow => {\n      row[flow.date] = flow[key];\n    });\n    return row;\n  });\n  const renderTableCell = (row, key) => {\n    const value = row[key];\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\n    const displayedValue = !isNaN(numericValue) ? numericValue.toLocaleString() : value;\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      children: displayedValue\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  };\n  const downloadCSV = () => {\n    if (!isAuthenticated) {\n      setShowLoginAlert(true);\n      return;\n    }\n    if (filteredCashFlows.length > 0) {\n      const csvData = Papa.unparse(filteredCashFlows);\n      const blob = new Blob([csvData], {\n        type: 'text/csv'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'cash_flows.csv';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n  if (!filteredCashFlows || filteredCashFlows.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        margin: 'auto',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            color: 'common.white',\n            textAlign: 'center'\n          },\n          children: \"Cash Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"Cash Flow\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: Array(6).fill(null).map((_, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  variant: \"text\",\n                  width: 100,\n                  animation: \"wave\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: Array(5).fill(null).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: Array(6).fill(null).map((_, cellIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  variant: \"text\",\n                  width: 100,\n                  animation: \"wave\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)\n              }, cellIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this))\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showLoginAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      onClose: () => setShowLoginAlert(false),\n      children: [\"Please \", /*#__PURE__*/_jsxDEV(RouterLink, {\n        to: \"/login\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 18\n      }, this), \" to download the cash flows.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedFrequency === 'yearly' ? 'contained' : 'outlined',\n          onClick: () => setSelectedFrequency('yearly'),\n          sx: {\n            margin: 1\n          },\n          children: \"Yearly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedFrequency === 'quarterly' ? 'contained' : 'outlined',\n          onClick: () => setSelectedFrequency('quarterly'),\n          sx: {\n            margin: 1\n          },\n          children: \"Quarterly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: downloadCSV,\n          sx: {\n            margin: 1\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 24\n          }, this),\n          children: \"Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        margin: 'auto',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            color: 'common.white',\n            textAlign: 'center'\n          },\n          children: \"Cash Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"Cash Flow\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: \"Metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), filteredCashFlows.map((flow, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: flow.date\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: row.metric\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), Object.keys(row).filter(key => key !== 'metric').map(dateKey => renderTableCell(row, dateKey))]\n            }, rowIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CashFlows, \"zZ/X6Xw2AJdZdRVmGBUZGp25/V4=\");\n_c = CashFlows;\nexport default CashFlows;\nvar _c;\n$RefreshReg$(_c, \"CashFlows\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Box","Grid","Skeleton","Alert","GetAppIcon","Papa","AuthContext","Link","RouterLink","jsxDEV","_jsxDEV","Fragment","_Fragment","CashFlows","cashFlows","_s","selectedFrequency","setSelectedFrequency","filteredCashFlows","setFilteredCashFlows","showLoginAlert","setShowLoginAlert","isAuthenticated","filteredData","filter","flow","type","toLowerCase","cashFlowMetricsOrder","formatLabel","key","replace","split","map","word","charAt","toUpperCase","slice","join","rows","row","metric","forEach","date","renderTableCell","value","numericValue","parseFloat","displayedValue","isNaN","toLocaleString","children","fileName","_jsxFileName","lineNumber","columnNumber","downloadCSV","length","csvData","unparse","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","elevation","sx","margin","overflow","bgcolor","p","variant","color","textAlign","size","Array","fill","_","index","width","animation","rowIndex","cellIndex","severity","onClose","to","container","spacing","item","onClick","startIcon","fontWeight","align","component","scope","Object","keys","dateKey","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/Cashflow.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Skeleton,\r\n  Alert,\r\n} from '@mui/material';\r\nimport GetAppIcon from '@mui/icons-material/GetApp';\r\nimport Papa from 'papaparse';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst CashFlows = ({ cashFlows }) => {\r\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\r\n  const [filteredCashFlows, setFilteredCashFlows] = useState([]);\r\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const filteredData = cashFlows?.filter(flow => flow.type.toLowerCase() === selectedFrequency);\r\n    setFilteredCashFlows(filteredData);\r\n  }, [cashFlows, selectedFrequency]);\r\n\r\n\r\n  const cashFlowMetricsOrder = [\r\n    'net_income',\r\n    'depreciation',\r\n    'other_non_cash_items',\r\n    'stock_based_compensation',\r\n    'change_in_working_capital',\r\n    'change_to_account_receivables',\r\n    'change_to_inventory',\r\n    'change_to_liabilities',\r\n    'change_to_operating_activities',\r\n    'change_to_netincome',\r\n    'capital_expenditures',\r\n    'cash_flows_other_operating',\r\n    'total_cash_from_operating_activities',\r\n    'investments',\r\n    'other_cashflows_from_investing_activities',\r\n    'total_cashflows_from_investing_activities',\r\n    'dividends_paid',\r\n    'sale_purchase_of_stock',\r\n    'issuance_of_capital_stock',\r\n    'net_borrowings',\r\n    'other_cashflows_from_financing_activities',\r\n    'total_cash_from_financing_activities',\r\n    'exchange_rate_changes',\r\n    'cash_and_cash_equivalents_changes',\r\n    'change_in_cash',\r\n    'begin_period_cash_flow',\r\n    'end_period_cash_flow',\r\n    'free_cash_flow'\r\n  ];\r\n\r\n\r\n  const formatLabel = (key) => {\r\n    return key\r\n      .replace(/_/g, ' ')\r\n      .split(' ')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  };\r\n\r\n  // Prepare the data structure for rendering\r\n  const rows = cashFlowMetricsOrder.map(key => {\r\n    const row = { metric: formatLabel(key) };\r\n    filteredCashFlows.forEach(flow => {\r\n      row[flow.date] = flow[key];\r\n    });\r\n    return row;\r\n  });\r\n\r\n  const renderTableCell = (row, key) => {\r\n    const value = row[key];\r\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\r\n    const displayedValue = !isNaN(numericValue) ? numericValue.toLocaleString() : value;\r\n    return <TableCell key={key}>{displayedValue}</TableCell>;\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    if (!isAuthenticated) {\r\n      setShowLoginAlert(true);\r\n      return;\r\n    }\r\n\r\n    if (filteredCashFlows.length > 0) {\r\n      const csvData = Papa.unparse(filteredCashFlows);\r\n      const blob = new Blob([csvData], { type: 'text/csv' });\r\n      const url = window.URL.createObjectURL(blob);\r\n\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'cash_flows.csv';\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    }\r\n  };\r\n\r\n  if (!filteredCashFlows || filteredCashFlows.length === 0) {\r\n    return (\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Cash Flow</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Cash Flow\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Array(6).fill(null).map((_, index) => (\r\n                  <TableCell key={index}>\r\n                    <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Array(5).fill(null).map((_, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  {Array(6).fill(null).map((_, cellIndex) => (\r\n                    <TableCell key={cellIndex}>\r\n                      <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showLoginAlert && (\r\n        <Alert severity=\"warning\" onClose={() => setShowLoginAlert(false)}>\r\n          Please <RouterLink to=\"/login\">login</RouterLink> to download the cash flows.\r\n        </Alert>\r\n      )}\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'yearly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('yearly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Yearly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'quarterly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('quarterly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Quarterly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={downloadCSV}\r\n            sx={{ margin: 1 }}\r\n            startIcon={<GetAppIcon />}\r\n          >\r\n            Download CSV\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Cash Flow</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Cash Flow\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ fontWeight: 'bold' }}>Metric</TableCell>\r\n                {filteredCashFlows.map((flow, index) => (\r\n                  <TableCell key={index} align=\"right\" sx={{ fontWeight: 'bold' }}>\r\n                    {flow.date}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  <TableCell component=\"th\" scope=\"row\" sx={{ fontWeight: 'bold' }}>\r\n                    {row.metric}\r\n                  </TableCell>\r\n                  {Object.keys(row).filter(key => key !== 'metric').map(dateKey => (\r\n                    renderTableCell(row, dateKey)\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CashFlows;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}