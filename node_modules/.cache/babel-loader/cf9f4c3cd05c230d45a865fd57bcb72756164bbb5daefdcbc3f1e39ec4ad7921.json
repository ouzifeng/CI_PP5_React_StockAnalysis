{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\BalanceSheet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box, Grid, Skeleton, Alert } from '@mui/material';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport Papa from 'papaparse';\nimport { AuthContext } from '../../context/AuthContext'; // Adjust the path based on your project structure\nimport { Link as RouterLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BalanceSheets = ({\n  balanceSheets\n}) => {\n  _s();\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\n  const [filteredBalanceSheets, setFilteredBalanceSheets] = useState([]);\n  const [showLoginAlert, setShowLoginAlert] = useState(false); // State to control login alert visibility\n  const {\n    isAuthenticated\n  } = useContext(AuthContext); // Destructure to get `isAuthenticated` from the context\n\n  useEffect(() => {\n    const filteredData = balanceSheets === null || balanceSheets === void 0 ? void 0 : balanceSheets.filter(sheet => sheet.type.toLowerCase() === selectedFrequency);\n    setFilteredBalanceSheets(filteredData);\n  }, [balanceSheets, selectedFrequency]);\n  if (!filteredBalanceSheets || filteredBalanceSheets.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        margin: 'auto',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            color: 'common.white',\n            textAlign: 'center'\n          },\n          children: \"Balance Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"Balance Sheet\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: Array(6).fill(null).map((_, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  variant: \"text\",\n                  width: 100,\n                  animation: \"wave\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: Array(5).fill(null).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: Array(6).fill(null).map((_, cellIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  variant: \"text\",\n                  width: 100,\n                  animation: \"wave\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, this)\n              }, cellIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this))\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n  const keysToFilterOut = ['id', 'filing_date', 'currency_symbol', 'type', 'general', 'preferred_stock_and_other_adjustments', 'discontinued_operations', 'other_items', 'non_recurring', 'extraordinary_items', 'selling_and_marketing_expenses', 'minority_interest', 'effect_of_accounting_charges'];\n  const filteredKeys = Object.keys(filteredBalanceSheets[0]).filter(key => !keysToFilterOut.includes(key));\n  const renderTableCell = (key, value) => {\n    const keysToFormatAsDate = ['date'];\n    if (keysToFilterOut.includes(key)) {\n      return null;\n    }\n    if (keysToFormatAsDate.includes(key)) {\n      return /*#__PURE__*/_jsxDEV(TableCell, {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 14\n      }, this);\n    }\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\n    const displayedValue = !isNaN(numericValue) ? Math.round(numericValue).toLocaleString() : value;\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      children: displayedValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  };\n  const downloadCSV = () => {\n    if (!isAuthenticated) {\n      setShowLoginAlert(true); // Show an alert if not authenticated\n      return;\n    }\n    if (filteredBalanceSheets.length > 0) {\n      const csvData = Papa.unparse(filteredBalanceSheets);\n      const blob = new Blob([csvData], {\n        type: 'text/csv'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'balance_sheets.csv';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showLoginAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      onClose: () => setShowLoginAlert(false),\n      children: [\"Please \", /*#__PURE__*/_jsxDEV(RouterLink, {\n        to: \"/login\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 18\n      }, this), \" to download the cash flows.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedFrequency === 'yearly' ? 'contained' : 'outlined',\n          onClick: () => setSelectedFrequency('yearly'),\n          sx: {\n            margin: 1\n          },\n          children: \"Yearly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedFrequency === 'quarterly' ? 'contained' : 'outlined',\n          onClick: () => setSelectedFrequency('quarterly'),\n          sx: {\n            margin: 1\n          },\n          children: \"Quarterly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: downloadCSV,\n          sx: {\n            margin: 1\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 24\n          }, this),\n          children: \"Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        margin: 'auto',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            color: 'common.white',\n            textAlign: 'center'\n          },\n          children: \"Balance Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"Balance Sheet\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: filteredKeys.map((key, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontWeight: 'bold'\n                },\n                className: \"MuiTableCell-sizeSmall\",\n                children: key.replace(/_/g, ' ').toUpperCase()\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: filteredBalanceSheets.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: filteredKeys.map(key => renderTableCell(key, item[key]))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BalanceSheets, \"TvkTqlCvqsvx3vL8glyV77F8tXQ=\");\n_c = BalanceSheets;\nexport default BalanceSheets;\nvar _c;\n$RefreshReg$(_c, \"BalanceSheets\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Box","Grid","Skeleton","Alert","GetAppIcon","Papa","AuthContext","Link","RouterLink","jsxDEV","_jsxDEV","Fragment","_Fragment","BalanceSheets","balanceSheets","_s","selectedFrequency","setSelectedFrequency","filteredBalanceSheets","setFilteredBalanceSheets","showLoginAlert","setShowLoginAlert","isAuthenticated","filteredData","filter","sheet","type","toLowerCase","length","elevation","sx","margin","overflow","children","bgcolor","p","variant","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","size","Array","fill","map","_","index","width","animation","rowIndex","cellIndex","keysToFilterOut","filteredKeys","Object","keys","key","includes","renderTableCell","value","keysToFormatAsDate","numericValue","parseFloat","displayedValue","isNaN","Math","round","toLocaleString","downloadCSV","csvData","unparse","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","severity","onClose","to","container","spacing","item","onClick","startIcon","fontWeight","className","replace","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/BalanceSheet.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Skeleton,\r\n  Alert,\r\n} from '@mui/material';\r\nimport GetAppIcon from '@mui/icons-material/GetApp';\r\nimport Papa from 'papaparse';\r\nimport { AuthContext } from '../../context/AuthContext'; // Adjust the path based on your project structure\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst BalanceSheets = ({ balanceSheets }) => {\r\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\r\n  const [filteredBalanceSheets, setFilteredBalanceSheets] = useState([]);\r\n  const [showLoginAlert, setShowLoginAlert] = useState(false); // State to control login alert visibility\r\n  const { isAuthenticated } = useContext(AuthContext); // Destructure to get `isAuthenticated` from the context\r\n\r\n  useEffect(() => {\r\n    const filteredData = balanceSheets?.filter(sheet => sheet.type.toLowerCase() === selectedFrequency);\r\n    setFilteredBalanceSheets(filteredData);\r\n  }, [balanceSheets, selectedFrequency]);\r\n\r\n  if (!filteredBalanceSheets || filteredBalanceSheets.length === 0) {\r\n    return (\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Balance Sheet</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Balance Sheet\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Array(6).fill(null).map((_, index) => (\r\n                  <TableCell key={index}>\r\n                    <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Array(5).fill(null).map((_, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  {Array(6).fill(null).map((_, cellIndex) => (\r\n                    <TableCell key={cellIndex}>\r\n                      <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  const keysToFilterOut = [\r\n    'id',\r\n    'filing_date',\r\n    'currency_symbol',\r\n    'type',\r\n    'general',\r\n    'preferred_stock_and_other_adjustments',\r\n    'discontinued_operations',\r\n    'other_items',\r\n    'non_recurring',\r\n    'extraordinary_items',\r\n    'selling_and_marketing_expenses',\r\n    'minority_interest',\r\n    'effect_of_accounting_charges'\r\n  ];\r\n\r\n  const filteredKeys = Object.keys(filteredBalanceSheets[0]).filter(key => !keysToFilterOut.includes(key));\r\n\r\n  const renderTableCell = (key, value) => {\r\n    const keysToFormatAsDate = ['date'];\r\n\r\n    if (keysToFilterOut.includes(key)) {\r\n      return null;\r\n    }\r\n\r\n    if (keysToFormatAsDate.includes(key)) {\r\n      return <TableCell>{value}</TableCell>;\r\n    }\r\n\r\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\r\n    const displayedValue = !isNaN(numericValue) ? Math.round(numericValue).toLocaleString() : value;\r\n\r\n    return <TableCell>{displayedValue}</TableCell>;\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    if (!isAuthenticated) {\r\n      setShowLoginAlert(true); // Show an alert if not authenticated\r\n      return;\r\n    }\r\n\r\n    if (filteredBalanceSheets.length > 0) {\r\n      const csvData = Papa.unparse(filteredBalanceSheets);\r\n      const blob = new Blob([csvData], { type: 'text/csv' });\r\n      const url = window.URL.createObjectURL(blob);\r\n\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'balance_sheets.csv';\r\n\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showLoginAlert && (\r\n        <Alert severity=\"warning\" onClose={() => setShowLoginAlert(false)}>\r\n          Please <RouterLink to=\"/login\">login</RouterLink> to download the cash flows.\r\n        </Alert>\r\n      )}\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'yearly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('yearly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Yearly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'quarterly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('quarterly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Quarterly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={downloadCSV}\r\n            sx={{ margin: 1 }}\r\n            startIcon={<GetAppIcon />}\r\n          >\r\n            Download CSV\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Balance Sheet</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Balance Sheet\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {filteredKeys.map((key, index) => (\r\n                  <TableCell key={index} sx={{ fontWeight: 'bold' }} className=\"MuiTableCell-sizeSmall\">\r\n                    {key.replace(/_/g, ' ').toUpperCase()}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredBalanceSheets.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  {filteredKeys.map(key => renderTableCell(key, item[key]))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BalanceSheets;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}