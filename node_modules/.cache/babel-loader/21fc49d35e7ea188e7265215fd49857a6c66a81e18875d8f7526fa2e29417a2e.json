{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\pages\\\\StockDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FinancialsTable = ({\n  incomeStatements\n}) => {\n  _s();\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\n  const [filteredData, setFilteredData] = useState([]);\n  useEffect(() => {\n    // Filter data based on selected frequency\n    const data = incomeStatements.filter(statement => statement.type === selectedFrequency);\n    setFilteredData(data);\n  }, [incomeStatements, selectedFrequency]); // Re-run the effect when incomeStatements or selectedFrequency changes\n\n  if (!filteredData.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No income statement data available for the selected frequency.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFrequency === 'yearly' ? 'contained' : 'outlined',\n      onClick: () => setSelectedFrequency('yearly'),\n      style: {\n        margin: '10px'\n      },\n      children: \"Yearly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFrequency === 'quarterly' ? 'contained' : 'outlined',\n      onClick: () => setSelectedFrequency('quarterly'),\n      style: {\n        margin: '10px'\n      },\n      children: \"Quarterly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.keys(filteredData[0]).map((key, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: key.replace(/_/g, ' ').toUpperCase()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.entries(item).map(([key, value], cellIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: typeof value === 'number' ? value.toLocaleString() : value\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FinancialsTable, \"xBeXqyG/rKk8AEha10b/gd/NOgE=\");\n_c = FinancialsTable;\nexport default FinancialsTable;\nvar _c;\n$RefreshReg$(_c, \"FinancialsTable\");","map":{"version":3,"names":["React","useState","useEffect","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","FinancialsTable","incomeStatements","_s","selectedFrequency","setSelectedFrequency","filteredData","setFilteredData","data","filter","statement","type","length","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","style","margin","component","Object","keys","map","key","index","replace","toUpperCase","item","entries","value","cellIndex","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/pages/StockDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper\r\n} from '@mui/material';\r\n\r\nconst FinancialsTable = ({ incomeStatements }) => {\r\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Filter data based on selected frequency\r\n    const data = incomeStatements.filter(statement => statement.type === selectedFrequency);\r\n    setFilteredData(data);\r\n  }, [incomeStatements, selectedFrequency]); // Re-run the effect when incomeStatements or selectedFrequency changes\r\n\r\n  if (!filteredData.length) {\r\n    return <div>No income statement data available for the selected frequency.</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Buttons to select frequency */}\r\n      <Button\r\n        variant={selectedFrequency === 'yearly' ? 'contained' : 'outlined'}\r\n        onClick={() => setSelectedFrequency('yearly')}\r\n        style={{ margin: '10px' }}\r\n      >\r\n        Yearly\r\n      </Button>\r\n      <Button\r\n        variant={selectedFrequency === 'quarterly' ? 'contained' : 'outlined'}\r\n        onClick={() => setSelectedFrequency('quarterly')}\r\n        style={{ margin: '10px' }}\r\n      >\r\n        Quarterly\r\n      </Button>\r\n\r\n      {/* Table to display financial data */}\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* Dynamically create table header based on the keys of the income statement data */}\r\n              {Object.keys(filteredData[0]).map((key, index) => (\r\n                <TableCell key={index}>{key.replace(/_/g, ' ').toUpperCase()}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredData.map((item, index) => (\r\n              <TableRow key={index}>\r\n                {/* Dynamically create table cells based on the values of the income statement data */}\r\n                {Object.entries(item).map(([key, value], cellIndex) => (\r\n                  <TableCell key={cellIndex}>\r\n                    {typeof value === 'number' ? value.toLocaleString() : value}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FinancialsTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}