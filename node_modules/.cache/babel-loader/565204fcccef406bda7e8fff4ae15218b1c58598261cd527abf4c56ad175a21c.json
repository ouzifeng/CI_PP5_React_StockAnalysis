{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\FinancialsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FinancialsTable = ({\n  incomeStatements = [],\n  balanceSheets = [],\n  cashFlows = []\n}) => {\n  _s();\n  const [selectedFinancial, setSelectedFinancial] = useState('Income Statement');\n  const [selectedFrequency, setSelectedFrequency] = useState('Yearly');\n  const [filteredData, setFilteredData] = useState([]);\n  useEffect(() => {\n    let data = [];\n    switch (selectedFinancial) {\n      case 'Income Statement':\n        data = incomeStatements;\n        break;\n      case 'Balance Sheet':\n        data = balanceSheets;\n        break;\n      case 'Cash Flow':\n        data = cashFlows;\n        break;\n      default:\n        data = [];\n    }\n    const filtered = data.filter(item => item && item.type === selectedFrequency);\n    setFilteredData(filtered);\n  }, [selectedFinancial, selectedFrequency, incomeStatements, balanceSheets, cashFlows]);\n  if (filteredData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No financial data available for the selected type and frequency.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Define the function to change financial type\n  const changeFinancialType = type => {\n    setSelectedFinancial(type);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFinancial === 'Income Statement' ? 'contained' : 'outlined',\n      onClick: () => changeFinancialType('Income Statement'),\n      children: \"Income Statement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFinancial === 'Balance Sheet' ? 'contained' : 'outlined',\n      onClick: () => changeFinancialType('Balance Sheet'),\n      children: \"Balance Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFinancial === 'Cash Flow' ? 'contained' : 'outlined',\n      onClick: () => changeFinancialType('Cash Flow'),\n      children: \"Cash Flow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFrequency === 'Yearly' ? 'contained' : 'outlined',\n      onClick: () => setSelectedFrequency('Yearly'),\n      children: \"Yearly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: selectedFrequency === 'Quarterly' ? 'contained' : 'outlined',\n      onClick: () => setSelectedFrequency('Quarterly'),\n      children: \"Quarterly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: filteredData.length > 0 && Object.keys(filteredData[0]).map((key, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: key.replace(/_/g, ' ').toUpperCase()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.entries(item).map(([key, value], cellIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: typeof value === 'number' ? value.toLocaleString() : value\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FinancialsTable, \"qcS+FDnJ3cmlhhQuxg1kYs0Rex8=\");\n_c = FinancialsTable;\nexport default FinancialsTable;\nvar _c;\n$RefreshReg$(_c, \"FinancialsTable\");","map":{"version":3,"names":["React","useState","useEffect","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","FinancialsTable","incomeStatements","balanceSheets","cashFlows","_s","selectedFinancial","setSelectedFinancial","selectedFrequency","setSelectedFrequency","filteredData","setFilteredData","data","filtered","filter","item","type","length","children","fileName","_jsxFileName","lineNumber","columnNumber","changeFinancialType","variant","onClick","component","Object","keys","map","key","index","replace","toUpperCase","entries","value","cellIndex","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/FinancialsTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper\r\n} from '@mui/material';\r\n\r\nconst FinancialsTable = ({ incomeStatements = [], balanceSheets = [], cashFlows = [] }) => {\r\n  const [selectedFinancial, setSelectedFinancial] = useState('Income Statement');\r\n  const [selectedFrequency, setSelectedFrequency] = useState('Yearly');\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let data = [];\r\n    switch (selectedFinancial) {\r\n      case 'Income Statement':\r\n        data = incomeStatements;\r\n        break;\r\n      case 'Balance Sheet':\r\n        data = balanceSheets;\r\n        break;\r\n      case 'Cash Flow':\r\n        data = cashFlows;\r\n        break;\r\n      default:\r\n        data = [];\r\n    }\r\n\r\n    const filtered = data.filter(item => item && item.type === selectedFrequency);\r\n    setFilteredData(filtered);\r\n  }, [selectedFinancial, selectedFrequency, incomeStatements, balanceSheets, cashFlows]);\r\n\r\n  if (filteredData.length === 0) {\r\n    return <div>No financial data available for the selected type and frequency.</div>;\r\n  }\r\n\r\n  // Define the function to change financial type\r\n  const changeFinancialType = (type) => {\r\n    setSelectedFinancial(type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Buttons to select financial type */}\r\n      <Button variant={selectedFinancial === 'Income Statement' ? 'contained' : 'outlined'} onClick={() => changeFinancialType('Income Statement')}>\r\n        Income Statement\r\n      </Button>\r\n      <Button variant={selectedFinancial === 'Balance Sheet' ? 'contained' : 'outlined'} onClick={() => changeFinancialType('Balance Sheet')}>\r\n        Balance Sheet\r\n      </Button>\r\n      <Button variant={selectedFinancial === 'Cash Flow' ? 'contained' : 'outlined'} onClick={() => changeFinancialType('Cash Flow')}>\r\n        Cash Flow\r\n      </Button>\r\n\r\n      {/* Buttons to select frequency */}\r\n      <Button variant={selectedFrequency === 'Yearly' ? 'contained' : 'outlined'} onClick={() => setSelectedFrequency('Yearly')}>\r\n        Yearly\r\n      </Button>\r\n      <Button variant={selectedFrequency === 'Quarterly' ? 'contained' : 'outlined'} onClick={() => setSelectedFrequency('Quarterly')}>\r\n        Quarterly\r\n      </Button>\r\n\r\n      {/* Table to display financial data */}\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* Dynamically create table header based on the keys of the financial data */}\r\n              {filteredData.length > 0 && Object.keys(filteredData[0]).map((key, index) => (\r\n                <TableCell key={index}>{key.replace(/_/g, ' ').toUpperCase()}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredData.map((item, index) => (\r\n              <TableRow key={index}>\r\n                {/* Dynamically create table cells based on the values of the financial data */}\r\n                {Object.entries(item).map(([key, value], cellIndex) => (\r\n                  <TableCell key={cellIndex}>\r\n                    {typeof value === 'number' ? value.toLocaleString() : value}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FinancialsTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}