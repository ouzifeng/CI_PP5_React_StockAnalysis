{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\IncomeStatements.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box, Grid, Skeleton, Alert } from '@mui/material';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport Papa from 'papaparse';\nimport { AuthContext } from '../../context/AuthContext';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IncomeStatements = ({\n  incomeStatements\n}) => {\n  _s();\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\n  const [filteredIncomeStatements, setFilteredIncomeStatements] = useState([]);\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const filteredData = incomeStatements === null || incomeStatements === void 0 ? void 0 : incomeStatements.filter(statement => statement.type.toLowerCase() === selectedFrequency);\n    setFilteredIncomeStatements(filteredData);\n  }, [incomeStatements, selectedFrequency]);\n  const financialMetricsOrder = ['total_revenue', 'cost_of_revenue', 'gross_profit', 'research_development', 'selling_general_administrative', 'selling_and_marketing_expenses', 'total_operating_expenses', 'operating_income', 'ebit',\n  // Earnings Before Interest and Taxes\n  'ebitda',\n  // Earnings Before Interest, Taxes, Depreciation, and Amortization\n  'depreciation_and_amortization', 'reconciled_depreciation', 'non_operating_income_net_other', 'interest_income', 'net_interest_income', 'interest_expense', 'income_before_tax', 'tax_provision', 'income_tax_expense', 'extraordinary_items', 'non_recurring', 'other_items', 'minority_interest', 'effect_of_accounting_charges', 'net_income', 'discontinued_operations', 'net_income_from_continuing_ops', 'preferred_stock_and_other_adjustments', 'net_income_applicable_to_common_shares'];\n  const formatLabel = key => {\n    // Convert snake_case to Title Case\n    return key.replace(/_/g, ' ').split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n\n  // Prepare the data structure for rendering\n  const rows = financialMetricsOrder.map(key => {\n    const row = {\n      metric: formatLabel(key)\n    };\n    filteredIncomeStatements.forEach(statement => {\n      row[statement.date] = statement[key];\n    });\n    return row;\n  });\n  const renderTableCell = (row, key) => {\n    const value = row[key];\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\n    const displayedValue = !isNaN(numericValue) ? numericValue.toLocaleString() : value;\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      children: displayedValue\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  };\n  const downloadCSV = () => {\n    if (!isAuthenticated) {\n      setShowLoginAlert(true);\n      return;\n    }\n    if (filteredIncomeStatements.length > 0) {\n      const csvData = Papa.unparse(filteredIncomeStatements);\n      const blob = new Blob([csvData], {\n        type: 'text/csv'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'income_statements.csv';\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n  if (!filteredIncomeStatements || filteredIncomeStatements.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        margin: 'auto',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            color: 'common.white',\n            textAlign: 'center'\n          },\n          children: \"Income Statement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"Income Statement\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: Array(6).fill(null).map((_, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  variant: \"text\",\n                  width: 100,\n                  animation: \"wave\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: Array(5).fill(null).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: Array(6).fill(null).map((_, cellIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  variant: \"text\",\n                  width: 100,\n                  animation: \"wave\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)\n              }, cellIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this))\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showLoginAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      onClose: () => setShowLoginAlert(false),\n      children: [\"Please \", /*#__PURE__*/_jsxDEV(RouterLink, {\n        to: \"/login\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 18\n      }, this), \" to download the income statements.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedFrequency === 'yearly' ? 'contained' : 'outlined',\n          onClick: () => setSelectedFrequency('yearly'),\n          sx: {\n            margin: 1\n          },\n          children: \"Yearly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedFrequency === 'quarterly' ? 'contained' : 'outlined',\n          onClick: () => setSelectedFrequency('quarterly'),\n          sx: {\n            margin: 1\n          },\n          children: \"Quarterly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: downloadCSV,\n          sx: {\n            margin: 1\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 24\n          }, this),\n          children: \"Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        margin: 'auto',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            color: 'common.white',\n            textAlign: 'center'\n          },\n          children: \"Income Statement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"Income Statement\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontWeight: 'bold'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), filteredIncomeStatements.map((statement, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: statement.date\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: row.metric\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), Object.keys(row).filter(key => key !== 'metric').map(dateKey => renderTableCell(row, dateKey))]\n            }, rowIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(IncomeStatements, \"l/qKWNdyGWLoIdNDnD10cCs0GBk=\");\n_c = IncomeStatements;\nexport default IncomeStatements;\nvar _c;\n$RefreshReg$(_c, \"IncomeStatements\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Box","Grid","Skeleton","Alert","GetAppIcon","Papa","AuthContext","Link","RouterLink","jsxDEV","_jsxDEV","Fragment","_Fragment","IncomeStatements","incomeStatements","_s","selectedFrequency","setSelectedFrequency","filteredIncomeStatements","setFilteredIncomeStatements","showLoginAlert","setShowLoginAlert","isAuthenticated","filteredData","filter","statement","type","toLowerCase","financialMetricsOrder","formatLabel","key","replace","split","map","word","charAt","toUpperCase","slice","join","rows","row","metric","forEach","date","renderTableCell","value","numericValue","parseFloat","displayedValue","isNaN","toLocaleString","children","fileName","_jsxFileName","lineNumber","columnNumber","downloadCSV","length","csvData","unparse","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","elevation","sx","margin","overflow","bgcolor","p","variant","color","textAlign","size","Array","fill","_","index","width","animation","rowIndex","cellIndex","severity","onClose","to","container","spacing","item","onClick","startIcon","fontWeight","component","scope","Object","keys","dateKey","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/IncomeStatements.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Skeleton,\r\n  Alert,\r\n} from '@mui/material';\r\nimport GetAppIcon from '@mui/icons-material/GetApp';\r\nimport Papa from 'papaparse';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst IncomeStatements = ({ incomeStatements }) => {\r\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\r\n  const [filteredIncomeStatements, setFilteredIncomeStatements] = useState([]);\r\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const filteredData = incomeStatements?.filter(statement => statement.type.toLowerCase() === selectedFrequency);\r\n    setFilteredIncomeStatements(filteredData);\r\n  }, [incomeStatements, selectedFrequency]);\r\n\r\nconst financialMetricsOrder = [\r\n  'total_revenue',\r\n  'cost_of_revenue',\r\n  'gross_profit',\r\n  'research_development',\r\n  'selling_general_administrative',\r\n  'selling_and_marketing_expenses',\r\n  'total_operating_expenses',\r\n  'operating_income',\r\n  'ebit', // Earnings Before Interest and Taxes\r\n  'ebitda', // Earnings Before Interest, Taxes, Depreciation, and Amortization\r\n  'depreciation_and_amortization',\r\n  'reconciled_depreciation',\r\n  'non_operating_income_net_other',\r\n  'interest_income',\r\n  'net_interest_income',\r\n  'interest_expense',\r\n  'income_before_tax',\r\n  'tax_provision',\r\n  'income_tax_expense',\r\n  'extraordinary_items',\r\n  'non_recurring',\r\n  'other_items',\r\n  'minority_interest',\r\n  'effect_of_accounting_charges',\r\n  'net_income',\r\n  'discontinued_operations',\r\n  'net_income_from_continuing_ops',\r\n  'preferred_stock_and_other_adjustments',\r\n  'net_income_applicable_to_common_shares'\r\n];\r\n\r\n  const formatLabel = (key) => {\r\n    // Convert snake_case to Title Case\r\n    return key\r\n      .replace(/_/g, ' ')\r\n      .split(' ')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  };\r\n\r\n  // Prepare the data structure for rendering\r\n  const rows = financialMetricsOrder.map(key => {\r\n    const row = { metric: formatLabel(key) };\r\n    filteredIncomeStatements.forEach(statement => {\r\n      row[statement.date] = statement[key];\r\n    });\r\n    return row;\r\n  });\r\n\r\n  const renderTableCell = (row, key) => {\r\n    const value = row[key];\r\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\r\n    const displayedValue = !isNaN(numericValue) ? numericValue.toLocaleString() : value;\r\n    return <TableCell key={key}>{displayedValue}</TableCell>;\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    if (!isAuthenticated) {\r\n      setShowLoginAlert(true);\r\n      return;\r\n    }\r\n\r\n    if (filteredIncomeStatements.length > 0) {\r\n      const csvData = Papa.unparse(filteredIncomeStatements);\r\n      const blob = new Blob([csvData], { type: 'text/csv' });\r\n      const url = window.URL.createObjectURL(blob);\r\n\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'income_statements.csv';\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    }\r\n  };\r\n\r\n  if (!filteredIncomeStatements || filteredIncomeStatements.length === 0) {\r\n    return (\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Income Statement</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Income Statement\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Array(6).fill(null).map((_, index) => (\r\n                  <TableCell key={index}>\r\n                    <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Array(5).fill(null).map((_, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  {Array(6).fill(null).map((_, cellIndex) => (\r\n                    <TableCell key={cellIndex}>\r\n                      <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showLoginAlert && (\r\n        <Alert severity=\"warning\" onClose={() => setShowLoginAlert(false)}>\r\n          Please <RouterLink to=\"/login\">login</RouterLink> to download the income statements.\r\n        </Alert>\r\n      )}\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'yearly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('yearly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Yearly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'quarterly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('quarterly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Quarterly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={downloadCSV}\r\n            sx={{ margin: 1 }}\r\n            startIcon={<GetAppIcon />}\r\n          >\r\n            Download CSV\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Income Statement</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Income Statement\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ fontWeight: 'bold' }}></TableCell>\r\n                {filteredIncomeStatements.map((statement, index) => (\r\n                  <TableCell key={index} sx={{ fontWeight: 'bold' }}>\r\n                    {statement.date}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  <TableCell component=\"th\" scope=\"row\" sx={{ fontWeight: 'bold' }}>\r\n                    {row.metric}\r\n                  </TableCell>\r\n                  {Object.keys(row).filter(key => key !== 'metric').map(dateKey => (\r\n                    renderTableCell(row, dateKey)\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IncomeStatements;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SACEC,MAAM,EACNC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,UAAU,EACVC,GAAG,EACHC,IAAI,EACJC,QAAQ,EACRC,KAAK,QACA,eAAe;AACtB,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,IAAI,IAAIC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7B,QAAQ,CAAC,QAAQ,CAAC;EACpE,MAAM,CAAC8B,wBAAwB,EAAEC,2BAA2B,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC5E,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM;IAAEkC;EAAgB,CAAC,GAAGhC,UAAU,CAACgB,WAAW,CAAC;EAEnDjB,SAAS,CAAC,MAAM;IACd,MAAMkC,YAAY,GAAGT,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEU,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKX,iBAAiB,CAAC;IAC9GG,2BAA2B,CAACI,YAAY,CAAC;EAC3C,CAAC,EAAE,CAACT,gBAAgB,EAAEE,iBAAiB,CAAC,CAAC;EAE3C,MAAMY,qBAAqB,GAAG,CAC5B,eAAe,EACf,iBAAiB,EACjB,cAAc,EACd,sBAAsB,EACtB,gCAAgC,EAChC,gCAAgC,EAChC,0BAA0B,EAC1B,kBAAkB,EAClB,MAAM;EAAE;EACR,QAAQ;EAAE;EACV,+BAA+B,EAC/B,yBAAyB,EACzB,gCAAgC,EAChC,iBAAiB,EACjB,qBAAqB,EACrB,kBAAkB,EAClB,mBAAmB,EACnB,eAAe,EACf,oBAAoB,EACpB,qBAAqB,EACrB,eAAe,EACf,aAAa,EACb,mBAAmB,EACnB,8BAA8B,EAC9B,YAAY,EACZ,yBAAyB,EACzB,gCAAgC,EAChC,uCAAuC,EACvC,wCAAwC,CACzC;EAEC,MAAMC,WAAW,GAAIC,GAAG,IAAK;IAC3B;IACA,OAAOA,GAAG,CACPC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAClBC,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CACzDC,IAAI,CAAC,GAAG,CAAC;EACd,CAAC;;EAED;EACA,MAAMC,IAAI,GAAGX,qBAAqB,CAACK,GAAG,CAACH,GAAG,IAAI;IAC5C,MAAMU,GAAG,GAAG;MAAEC,MAAM,EAAEZ,WAAW,CAACC,GAAG;IAAE,CAAC;IACxCZ,wBAAwB,CAACwB,OAAO,CAACjB,SAAS,IAAI;MAC5Ce,GAAG,CAACf,SAAS,CAACkB,IAAI,CAAC,GAAGlB,SAAS,CAACK,GAAG,CAAC;IACtC,CAAC,CAAC;IACF,OAAOU,GAAG;EACZ,CAAC,CAAC;EAEF,MAAMI,eAAe,GAAGA,CAACJ,GAAG,EAAEV,GAAG,KAAK;IACpC,MAAMe,KAAK,GAAGL,GAAG,CAACV,GAAG,CAAC;IACtB,MAAMgB,YAAY,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGE,UAAU,CAACF,KAAK,CAAC;IAC1E,MAAMG,cAAc,GAAG,CAACC,KAAK,CAACH,YAAY,CAAC,GAAGA,YAAY,CAACI,cAAc,CAAC,CAAC,GAAGL,KAAK;IACnF,oBAAOnC,OAAA,CAAChB,SAAS;MAAAyD,QAAA,EAAYH;IAAc,GAApBlB,GAAG;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6B,CAAC;EAC1D,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAAClC,eAAe,EAAE;MACpBD,iBAAiB,CAAC,IAAI,CAAC;MACvB;IACF;IAEA,IAAIH,wBAAwB,CAACuC,MAAM,GAAG,CAAC,EAAE;MACvC,MAAMC,OAAO,GAAGrD,IAAI,CAACsD,OAAO,CAACzC,wBAAwB,CAAC;MACtD,MAAM0C,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,OAAO,CAAC,EAAE;QAAEhC,IAAI,EAAE;MAAW,CAAC,CAAC;MACtD,MAAMoC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MAE5C,MAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAI,GAAGP,GAAG;MACZI,CAAC,CAACI,QAAQ,GAAG,uBAAuB;MACpCJ,CAAC,CAACK,KAAK,CAAC,CAAC;MACTR,MAAM,CAACC,GAAG,CAACQ,eAAe,CAACV,GAAG,CAAC;IACjC;EACF,CAAC;EAED,IAAI,CAAC5C,wBAAwB,IAAIA,wBAAwB,CAACuC,MAAM,KAAK,CAAC,EAAE;IACtE,oBACE/C,OAAA,CAACZ,KAAK;MAAC2E,SAAS,EAAE,CAAE;MAACC,EAAE,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAzB,QAAA,gBAC9DzC,OAAA,CAACV,GAAG;QAAC0E,EAAE,EAAE;UAAEG,OAAO,EAAE,cAAc;UAAEC,CAAC,EAAE;QAAE,CAAE;QAAA3B,QAAA,eACzCzC,OAAA,CAACX,UAAU;UAACgF,OAAO,EAAC,WAAW;UAACL,EAAE,EAAE;YAAEM,KAAK,EAAE,cAAc;YAAEC,SAAS,EAAE;UAAS,CAAE;UAAA9B,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9G,CAAC,eACN7C,OAAA,CAACf,cAAc;QAAAwD,QAAA,eACbzC,OAAA,CAAClB,KAAK;UAAC,cAAW,kBAAkB;UAAC0F,IAAI,EAAC,OAAO;UAAA/B,QAAA,gBAC/CzC,OAAA,CAACd,SAAS;YAAAuD,QAAA,eACRzC,OAAA,CAACb,QAAQ;cAAAsD,QAAA,EACNgC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACnD,GAAG,CAAC,CAACoD,CAAC,EAAEC,KAAK,kBAChC5E,OAAA,CAAChB,SAAS;gBAAAyD,QAAA,eACRzC,OAAA,CAACR,QAAQ;kBAAC6E,OAAO,EAAC,MAAM;kBAACQ,KAAK,EAAE,GAAI;kBAACC,SAAS,EAAC;gBAAM;kBAAApC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC,GAD1C+B,KAAK;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CACZ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZ7C,OAAA,CAACjB,SAAS;YAAA0D,QAAA,EACPgC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACnD,GAAG,CAAC,CAACoD,CAAC,EAAEI,QAAQ,kBACnC/E,OAAA,CAACb,QAAQ;cAAAsD,QAAA,EACNgC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACnD,GAAG,CAAC,CAACoD,CAAC,EAAEK,SAAS,kBACpChF,OAAA,CAAChB,SAAS;gBAAAyD,QAAA,eACRzC,OAAA,CAACR,QAAQ;kBAAC6E,OAAO,EAAC,MAAM;kBAACQ,KAAK,EAAE,GAAI;kBAACC,SAAS,EAAC;gBAAM;kBAAApC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC,GAD1CmC,SAAS;gBAAAtC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEd,CACZ;YAAC,GALWkC,QAAQ;cAAArC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMb,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAEZ;EAEA,oBACE7C,OAAA,CAAAE,SAAA;IAAAuC,QAAA,GACG/B,cAAc,iBACbV,OAAA,CAACP,KAAK;MAACwF,QAAQ,EAAC,SAAS;MAACC,OAAO,EAAEA,CAAA,KAAMvE,iBAAiB,CAAC,KAAK,CAAE;MAAA8B,QAAA,GAAC,SAC1D,eAAAzC,OAAA,CAACF,UAAU;QAACqF,EAAE,EAAC,QAAQ;QAAA1C,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,uCACnD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACR,eACD7C,OAAA,CAACT,IAAI;MAAC6F,SAAS;MAACC,OAAO,EAAE,CAAE;MAAA5C,QAAA,gBACzBzC,OAAA,CAACT,IAAI;QAAC+F,IAAI;QAAA7C,QAAA,eACRzC,OAAA,CAACnB,MAAM;UACLwF,OAAO,EAAE/D,iBAAiB,KAAK,QAAQ,GAAG,WAAW,GAAG,UAAW;UACnEiF,OAAO,EAAEA,CAAA,KAAMhF,oBAAoB,CAAC,QAAQ,CAAE;UAC9CyD,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAE,CAAE;UAAAxB,QAAA,EACnB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACP7C,OAAA,CAACT,IAAI;QAAC+F,IAAI;QAAA7C,QAAA,eACRzC,OAAA,CAACnB,MAAM;UACLwF,OAAO,EAAE/D,iBAAiB,KAAK,WAAW,GAAG,WAAW,GAAG,UAAW;UACtEiF,OAAO,EAAEA,CAAA,KAAMhF,oBAAoB,CAAC,WAAW,CAAE;UACjDyD,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAE,CAAE;UAAAxB,QAAA,EACnB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACP7C,OAAA,CAACT,IAAI;QAAC+F,IAAI;QAAA7C,QAAA,eACRzC,OAAA,CAACnB,MAAM;UACLwF,OAAO,EAAC,UAAU;UAClBkB,OAAO,EAAEzC,WAAY;UACrBkB,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAE,CAAE;UAClBuB,SAAS,eAAExF,OAAA,CAACN,UAAU;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAAAJ,QAAA,EAC3B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEP7C,OAAA,CAACZ,KAAK;MAAC2E,SAAS,EAAE,CAAE;MAACC,EAAE,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAzB,QAAA,gBAC9DzC,OAAA,CAACV,GAAG;QAAC0E,EAAE,EAAE;UAAEG,OAAO,EAAE,cAAc;UAAEC,CAAC,EAAE;QAAE,CAAE;QAAA3B,QAAA,eACzCzC,OAAA,CAACX,UAAU;UAACgF,OAAO,EAAC,WAAW;UAACL,EAAE,EAAE;YAAEM,KAAK,EAAE,cAAc;YAAEC,SAAS,EAAE;UAAS,CAAE;UAAA9B,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9G,CAAC,eACN7C,OAAA,CAACf,cAAc;QAAAwD,QAAA,eACbzC,OAAA,CAAClB,KAAK;UAAC,cAAW,kBAAkB;UAAC0F,IAAI,EAAC,OAAO;UAAA/B,QAAA,gBAC/CzC,OAAA,CAACd,SAAS;YAAAuD,QAAA,eACRzC,OAAA,CAACb,QAAQ;cAAAsD,QAAA,gBACPzC,OAAA,CAAChB,SAAS;gBAACgF,EAAE,EAAE;kBAAEyB,UAAU,EAAE;gBAAO;cAAE;gBAAA/C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,EAClDrC,wBAAwB,CAACe,GAAG,CAAC,CAACR,SAAS,EAAE6D,KAAK,kBAC7C5E,OAAA,CAAChB,SAAS;gBAAagF,EAAE,EAAE;kBAAEyB,UAAU,EAAE;gBAAO,CAAE;gBAAAhD,QAAA,EAC/C1B,SAAS,CAACkB;cAAI,GADD2C,KAAK;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CACZ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZ7C,OAAA,CAACjB,SAAS;YAAA0D,QAAA,EACPZ,IAAI,CAACN,GAAG,CAAC,CAACO,GAAG,EAAEiD,QAAQ,kBACtB/E,OAAA,CAACb,QAAQ;cAAAsD,QAAA,gBACPzC,OAAA,CAAChB,SAAS;gBAAC0G,SAAS,EAAC,IAAI;gBAACC,KAAK,EAAC,KAAK;gBAAC3B,EAAE,EAAE;kBAAEyB,UAAU,EAAE;gBAAO,CAAE;gBAAAhD,QAAA,EAC9DX,GAAG,CAACC;cAAM;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,EACX+C,MAAM,CAACC,IAAI,CAAC/D,GAAG,CAAC,CAAChB,MAAM,CAACM,GAAG,IAAIA,GAAG,KAAK,QAAQ,CAAC,CAACG,GAAG,CAACuE,OAAO,IAC3D5D,eAAe,CAACJ,GAAG,EAAEgE,OAAO,CAC7B,CAAC;YAAA,GANWf,QAAQ;cAAArC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOb,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA,eACR,CAAC;AAEP,CAAC;AAACxC,EAAA,CAhMIF,gBAAgB;AAAA4F,EAAA,GAAhB5F,gBAAgB;AAkMtB,eAAeA,gBAAgB;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}