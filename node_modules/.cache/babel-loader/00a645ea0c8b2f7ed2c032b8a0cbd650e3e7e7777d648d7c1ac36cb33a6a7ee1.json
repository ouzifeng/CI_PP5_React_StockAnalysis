{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\FinancialsTable.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialsTable = ({\n  incomeStatements\n}) => {\n  if (!incomeStatements || incomeStatements.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No income statement data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: Object.keys(incomeStatements[0]).map((key, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: key.replace(/_/g, ' ').toUpperCase()\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: incomeStatements.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: Object.entries(item).map(([key, value], cellIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: typeof value === 'number' ? value.toLocaleString() : value\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = FinancialsTable;\nexport default FinancialsTable;\nvar _c;\n$RefreshReg$(_c, \"FinancialsTable\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","FinancialsTable","incomeStatements","length","children","fileName","_jsxFileName","lineNumber","columnNumber","component","Object","keys","map","key","index","replace","toUpperCase","item","entries","value","cellIndex","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/FinancialsTable.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper\r\n} from '@mui/material';\r\n\r\nconst FinancialsTable = ({ incomeStatements }) => {\r\n  if (!incomeStatements || incomeStatements.length === 0) {\r\n    return <div>No income statement data available.</div>;\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* Dynamically create table header based on the keys of the income statement data */}\r\n            {Object.keys(incomeStatements[0]).map((key, index) => (\r\n              <TableCell key={index}>{key.replace(/_/g, ' ').toUpperCase()}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {incomeStatements.map((item, index) => (\r\n            <TableRow key={index}>\r\n              {/* Dynamically create table cells based on the values of the income statement data */}\r\n              {Object.entries(item).map(([key, value], cellIndex) => (\r\n                <TableCell key={cellIndex}>\r\n                  {typeof value === 'number' ? value.toLocaleString() : value}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default FinancialsTable;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,QACA,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAChD,IAAI,CAACA,gBAAgB,IAAIA,gBAAgB,CAACC,MAAM,KAAK,CAAC,EAAE;IACtD,oBAAOH,OAAA;MAAAI,QAAA,EAAK;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvD;EAEA,oBACER,OAAA,CAACL,cAAc;IAACc,SAAS,EAAEX,KAAM;IAAAM,QAAA,eAC/BJ,OAAA,CAACR,KAAK;MAAAY,QAAA,gBACJJ,OAAA,CAACJ,SAAS;QAAAQ,QAAA,eACRJ,OAAA,CAACH,QAAQ;UAAAO,QAAA,EAENM,MAAM,CAACC,IAAI,CAACT,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC/Cd,OAAA,CAACN,SAAS;YAAAU,QAAA,EAAcS,GAAG,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC;UAAC,GAA5CF,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmD,CACzE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACZR,OAAA,CAACP,SAAS;QAAAW,QAAA,EACPF,gBAAgB,CAACU,GAAG,CAAC,CAACK,IAAI,EAAEH,KAAK,kBAChCd,OAAA,CAACH,QAAQ;UAAAO,QAAA,EAENM,MAAM,CAACQ,OAAO,CAACD,IAAI,CAAC,CAACL,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEM,KAAK,CAAC,EAAEC,SAAS,kBAChDpB,OAAA,CAACN,SAAS;YAAAU,QAAA,EACP,OAAOe,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACE,cAAc,CAAC,CAAC,GAAGF;UAAK,GAD7CC,SAAS;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACZ;QAAC,GANWM,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAErB,CAAC;AAACc,EAAA,GA/BIrB,eAAe;AAiCrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}