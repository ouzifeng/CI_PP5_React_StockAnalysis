{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\Ticker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ticker = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [colors, setColors] = useState({}); // Store color (red or green) for each stock\n\n  useEffect(() => {\n    // Fetch stock data from your API\n    fetch('https://script.googleusercontent.com/macros/echo?user_content_key=c8tWHwXIx4vz_zdJewMMVNZzcj-52oWRSjf42V0rQwnxCSE5S7SO4HyeWAn9Jl_lssgsdwW3o8MTnhWLGQwtQRAh0uNuO2Sgm5_BxDlH2jW0nuo2oDemN9CCS2h10ox_1xSncGQajx_ryfhECjZEnPeTRfTtTl31E7n6HlPkwXGCVvT2mUROOOaCQFgyCI-jNC3U55BpMAcbf-OKdJkmAjb8iiC6b9mkVfxHOPGXTDlwvughaiZuIQ&lib=MRK9JCV_hCBBxn1ilxmzDhCwsu2EIHoHF').then(response => response.json()).then(data => {\n      // Process the data and set it in the state\n      const processedData = data.map(stock => {\n        // Determine the color based on percent change\n        let color = 'black';\n        if (stock.Percent < 0) {\n          color = 'red';\n        } else if (stock.Percent > 0) {\n          color = 'green';\n        }\n        return {\n          ...stock,\n          color\n        };\n      });\n      setStocks(processedData);\n    }).catch(error => console.error('Error fetching stock data:', error));\n  }, []);\n  const stockCardStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '5px',\n    borderRadius: '5px',\n    margin: '5px',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n    transition: 'background-color 0.3s',\n    backgroundColor: 'white'\n  };\n  const redStyle = {\n    backgroundColor: 'red',\n    color: 'white'\n  };\n  const greenStyle = {\n    backgroundColor: 'green',\n    color: 'white'\n  };\n  const stockNameValueStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%'\n  };\n  const stockNameStyle = {\n    fontSize: '16px',\n    fontWeight: 'bold'\n  };\n  const stockPriceStyle = {\n    fontSize: '14px',\n    margin: '5px 0'\n  };\n  const stockPercentStyle = {\n    fontSize: '14px'\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 2,\n      m: 2,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-card\",\n        style: {\n          ...stockCardStyle,\n          ...(stock.color === 'red' ? redStyle : stock.color === 'green' ? greenStyle : {})\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: stockNameValueStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-name\",\n            style: stockNameStyle,\n            children: stock.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-price\",\n            style: stockPriceStyle,\n            children: stock.Price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-percent\",\n          style: stockPercentStyle,\n          children: [stock.Percent, \"% \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u25B2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Ticker, \"4l+Fs0d0GW5rDAl9A17ocpT6cYs=\");\n_c = Ticker;\nexport default Ticker;\nvar _c;\n$RefreshReg$(_c, \"Ticker\");","map":{"version":3,"names":["React","useEffect","useState","Grid","jsxDEV","_jsxDEV","Ticker","_s","stocks","setStocks","colors","setColors","fetch","then","response","json","data","processedData","map","stock","color","Percent","catch","error","console","stockCardStyle","display","alignItems","padding","borderRadius","margin","boxShadow","transition","backgroundColor","redStyle","greenStyle","stockNameValueStyle","justifyContent","width","stockNameStyle","fontSize","fontWeight","stockPriceStyle","stockPercentStyle","container","spacing","children","index","item","xs","md","m","className","style","Name","fileName","_jsxFileName","lineNumber","columnNumber","Price","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/Ticker.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst Ticker = () => {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [colors, setColors] = useState({}); // Store color (red or green) for each stock\r\n\r\n  useEffect(() => {\r\n    // Fetch stock data from your API\r\n    fetch('https://script.googleusercontent.com/macros/echo?user_content_key=c8tWHwXIx4vz_zdJewMMVNZzcj-52oWRSjf42V0rQwnxCSE5S7SO4HyeWAn9Jl_lssgsdwW3o8MTnhWLGQwtQRAh0uNuO2Sgm5_BxDlH2jW0nuo2oDemN9CCS2h10ox_1xSncGQajx_ryfhECjZEnPeTRfTtTl31E7n6HlPkwXGCVvT2mUROOOaCQFgyCI-jNC3U55BpMAcbf-OKdJkmAjb8iiC6b9mkVfxHOPGXTDlwvughaiZuIQ&lib=MRK9JCV_hCBBxn1ilxmzDhCwsu2EIHoHF')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Process the data and set it in the state\r\n        const processedData = data.map((stock) => {\r\n          // Determine the color based on percent change\r\n          let color = 'black';\r\n          if (stock.Percent < 0) {\r\n            color = 'red';\r\n          } else if (stock.Percent > 0) {\r\n            color = 'green';\r\n          }\r\n          return {\r\n            ...stock,\r\n            color,\r\n          };\r\n        });\r\n        setStocks(processedData);\r\n      })\r\n      .catch((error) => console.error('Error fetching stock data:', error));\r\n  }, []);\r\n\r\n  const stockCardStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    margin: '5px',\r\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n    transition: 'background-color 0.3s',\r\n    backgroundColor: 'white',\r\n  };\r\n\r\n  const redStyle = {\r\n    backgroundColor: 'red',\r\n    color: 'white',\r\n  };\r\n\r\n  const greenStyle = {\r\n    backgroundColor: 'green',\r\n    color: 'white',\r\n  };\r\n\r\n  const stockNameValueStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n  };\r\n\r\n  const stockNameStyle = {\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n  };\r\n\r\n  const stockPriceStyle = {\r\n    fontSize: '14px',\r\n    margin: '5px 0',\r\n  };\r\n\r\n  const stockPercentStyle = {\r\n    fontSize: '14px',\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {stocks.map((stock, index) => (\r\n        <Grid item xs={12} md={2} m={2} key={index}>\r\n          <div\r\n            className=\"stock-card\"\r\n            style={{\r\n              ...stockCardStyle,\r\n              ...(stock.color === 'red' ? redStyle : stock.color === 'green' ? greenStyle : {}),\r\n            }}\r\n          >\r\n            <div style={stockNameValueStyle}>\r\n              <div className=\"stock-name\" style={stockNameStyle}>\r\n                {stock.Name}\r\n              </div>\r\n              <div className=\"stock-price\" style={stockPriceStyle}>\r\n                {stock.Price}\r\n              </div>\r\n            </div>\r\n            <div className=\"stock-percent\" style={stockPercentStyle}>\r\n              {stock.Percent}% <span className=\"arrow\">â–²</span>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Ticker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}