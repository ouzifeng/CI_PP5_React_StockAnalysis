{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\pages\\\\StockDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ChartComponent from '../components/common/ChartComponent'; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockDetail = () => {\n  _s();\n  const {\n    primary_ticker\n  } = useParams();\n  const [stockData, setStockData] = useState(null);\n  const [tradingViewSymbol, setTradingViewSymbol] = useState('');\n  useEffect(() => {\n    // Fetch stock data by primary_ticker\n    fetch(`http://localhost:8000/api/stocks/${primary_ticker.replace('-', '.')}/`).then(response => response.json()).then(data => {\n      setStockData(data);\n      // After fetching stock data, construct the TradingView symbol\n      const symbol = `${data.exchange}:${data.code}`;\n      setTradingViewSymbol(symbol);\n    }).catch(error => console.error('Error fetching stock data:', error));\n  }, [primary_ticker]); // Dependency array includes primary_ticker to refetch if it changes\n\n  if (!stockData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [stockData.name, \" HELLO\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), tradingViewSymbol && /*#__PURE__*/_jsxDEV(ChartComponent, {\n      symbol: tradingViewSymbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(StockDetail, \"NwnhL0CB1qAvapGcmmBr0r9X4fw=\", false, function () {\n  return [useParams];\n});\n_c = StockDetail;\nexport default StockDetail;\nvar _c;\n$RefreshReg$(_c, \"StockDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ChartComponent","jsxDEV","_jsxDEV","StockDetail","_s","primary_ticker","stockData","setStockData","tradingViewSymbol","setTradingViewSymbol","fetch","replace","then","response","json","data","symbol","exchange","code","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/pages/StockDetailPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ChartComponent from '../components/common/ChartComponent'; // Adjust the import path as needed\r\n\r\nconst StockDetail = () => {\r\n    const { primary_ticker } = useParams();\r\n    const [stockData, setStockData] = useState(null);\r\n    const [tradingViewSymbol, setTradingViewSymbol] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch stock data by primary_ticker\r\n        fetch(`http://localhost:8000/api/stocks/${primary_ticker.replace('-', '.')}/`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setStockData(data);\r\n                // After fetching stock data, construct the TradingView symbol\r\n                const symbol = `${data.exchange}:${data.code}`;\r\n                setTradingViewSymbol(symbol);\r\n            })\r\n            .catch(error => console.error('Error fetching stock data:', error));\r\n    }, [primary_ticker]);  // Dependency array includes primary_ticker to refetch if it changes\r\n\r\n    if (!stockData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{stockData.name} HELLO</h1>\r\n            {/* Render more stock details here */}\r\n            {/* Render the chart component only if tradingViewSymbol is set */}\r\n            {tradingViewSymbol && <ChartComponent symbol={tradingViewSymbol} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StockDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,cAAc,MAAM,qCAAqC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAe,CAAC,GAAGN,SAAS,CAAC,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACZ;IACAa,KAAK,CAAE,oCAAmCL,cAAc,CAACM,OAAO,CAAC,GAAG,EAAE,GAAG,CAAE,GAAE,CAAC,CACzEC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVR,YAAY,CAACQ,IAAI,CAAC;MAClB;MACA,MAAMC,MAAM,GAAI,GAAED,IAAI,CAACE,QAAS,IAAGF,IAAI,CAACG,IAAK,EAAC;MAC9CT,oBAAoB,CAACO,MAAM,CAAC;IAChC,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC,EAAE,CAACf,cAAc,CAAC,CAAC,CAAC,CAAE;;EAEvB,IAAI,CAACC,SAAS,EAAE;IACZ,oBAAOJ,OAAA;MAAAoB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIxB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,GAAKhB,SAAS,CAACqB,IAAI,EAAC,QAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAG9BlB,iBAAiB,iBAAIN,OAAA,CAACF,cAAc;MAACgB,MAAM,EAAER;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEd,CAAC;AAACtB,EAAA,CA9BID,WAAW;EAAA,QACcJ,SAAS;AAAA;AAAA6B,EAAA,GADlCzB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}