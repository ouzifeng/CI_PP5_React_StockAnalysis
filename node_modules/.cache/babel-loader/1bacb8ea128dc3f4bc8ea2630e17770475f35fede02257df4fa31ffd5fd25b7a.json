{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\StockHighlights.js\";\nimport React from 'react';\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableRow, Paper, Box, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockHighlights = ({\n  highlights\n}) => {\n  // Ensure that the keys here match the keys in your highlights data\n  const firstColumnHighlights = [{\n    key: \"wall_street_target_price\",\n    label: \"Target Price\"\n  }, {\n    key: \"market_capitalization\",\n    label: \"Market Cap\"\n  }\n  // Add other entries for the first column\n  ];\n  const secondColumnHighlights = [{\n    key: \"pe_ratio\",\n    label: \"P/E Ratio\"\n  }, {\n    key: \"dividend_yield\",\n    label: \"Dividend Yield\"\n  }\n  // Add other entries for the second column\n  ];\n  const renderRow = (data, key) => {\n    let formattedValue = highlights[data.key];\n    if (data.key === \"market_capitalization\") {\n      const marketCap = parseFloat(highlights[data.key]);\n      if (!isNaN(marketCap)) {\n        formattedValue = (marketCap / 1000000000).toFixed(2) + \"B\";\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: formattedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      margin: 'auto',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'primary.main',\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          color: 'common.white',\n          textAlign: 'center'\n        },\n        children: \"Highlights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"Highlights Table\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: firstColumnHighlights.map(data => renderRow(data, data.key))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"Highlights Table\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: secondColumnHighlights.map(data => renderRow(data, data.key))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = StockHighlights;\nexport default StockHighlights;\nvar _c;\n$RefreshReg$(_c, \"StockHighlights\");","map":{"version":3,"names":["React","Typography","Table","TableBody","TableCell","TableContainer","TableRow","Paper","Box","Grid","jsxDEV","_jsxDEV","StockHighlights","highlights","firstColumnHighlights","key","label","secondColumnHighlights","renderRow","data","formattedValue","marketCap","parseFloat","isNaN","toFixed","children","component","scope","fileName","_jsxFileName","lineNumber","columnNumber","align","sx","fontWeight","elevation","margin","overflow","bgcolor","p","variant","color","textAlign","container","spacing","item","xs","map","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/StockHighlights.js"],"sourcesContent":["import React from 'react';\r\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableRow, Paper, Box, Grid } from '@mui/material';\r\n\r\nconst StockHighlights = ({ highlights }) => {\r\n  // Ensure that the keys here match the keys in your highlights data\r\n  const firstColumnHighlights = [\r\n    { key: \"wall_street_target_price\", label: \"Target Price\" },\r\n    { key: \"market_capitalization\", label: \"Market Cap\" }\r\n    // Add other entries for the first column\r\n  ];\r\n\r\n  const secondColumnHighlights = [\r\n    { key: \"pe_ratio\", label: \"P/E Ratio\" },\r\n    { key: \"dividend_yield\", label: \"Dividend Yield\" }\r\n    // Add other entries for the second column\r\n  ];\r\n\r\nconst renderRow = (data, key) => {\r\n  let formattedValue = highlights[data.key];\r\n  \r\n  if (data.key === \"market_capitalization\") {\r\n    const marketCap = parseFloat(highlights[data.key]);\r\n    if (!isNaN(marketCap)) {\r\n      formattedValue = (marketCap / 1000000000).toFixed(2) + \"B\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TableRow key={key}>\r\n      <TableCell component=\"th\" scope=\"row\">{data.label}</TableCell>\r\n      <TableCell align=\"right\" sx={{ fontWeight: 'bold' }}>\r\n        {formattedValue}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n      <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Highlights</Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <Table aria-label=\"Highlights Table\">\r\n              <TableBody>\r\n                {firstColumnHighlights.map((data) => renderRow(data, data.key))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <Table aria-label=\"Highlights Table\">\r\n              <TableBody>\r\n                {secondColumnHighlights.map((data) => renderRow(data, data.key))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StockHighlights;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}