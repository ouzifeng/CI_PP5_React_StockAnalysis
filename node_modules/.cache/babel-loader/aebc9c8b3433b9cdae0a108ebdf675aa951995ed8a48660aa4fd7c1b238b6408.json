{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\Websites\\\\stocks\\\\frontend\\\\src\\\\components\\\\stockpage\\\\Ticker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Skeleton from '@mui/material/Skeleton';\nimport '../../assets/styles/custom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ticker = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true); // State to track loading status\n\n  useEffect(() => {\n    // Simulate API fetch delay for demonstration purposes\n    const delay = setTimeout(() => {\n      setLoading(false); // Set loading to false after a delay (you can remove this in a real app)\n    }, 3000);\n\n    // In a real app, replace the code inside this useEffect with your API fetch logic\n\n    // Clean up the timeout on unmount\n    return () => clearTimeout(delay);\n  }, []);\n  useEffect(() => {\n    // Fetch stock data from your API\n    fetch('https://script.googleusercontent.com/macros/echo?user_content_key=6MbtMnAH8ZXd84aaH-UbWdfZe6UiDj-iUEEKOb1BmBYf9WTz1BR0xVLBZtHm3lwst4Ny7pcHGba3LDTkoqUAlHTDuuwUYz-ym5_BxDlH2jW0nuo2oDemN9CCS2h10ox_1xSncGQajx_ryfhECjZEnPeTRfTtTl31E7n6HlPkwXGCVvT2mUROOOaCQFgyCI-jNC3U55BpMAcbf-OKdJkmAjb8iiC6b9mkVfxHOPGXTDlwvughaiZuIQ&lib=MRK9JCV_hCBBxn1ilxmzDhCwsu2EIHoHF').then(response => response.json()).then(data => {\n      // Process the data and set it in the state\n      const processedData = data.map(stock => ({\n        ...stock,\n        color: stock.Percent < 0 ? 'red' : stock.Percent > 0 ? 'green' : 'black'\n      }));\n      setStocks(processedData);\n    }).catch(error => console.error('Error fetching stock data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticker-container\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: loading ?\n      // Display skeleton components while loading\n      [1, 2, 3, 4, 5, 6].map(index => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 2,\n        className: \"stock-grid-item\",\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rect\",\n          width: \"100%\",\n          height: 80,\n          animation: \"wave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)) :\n      // Display stock data once loading is complete\n      stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 2,\n        className: \"stock-grid-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stock-card ${stock.color}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-info\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stock-name\",\n              children: stock.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stock-price\",\n              children: stock.Price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-percent\",\n            children: [stock.Percent, \"% \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"arrow\",\n              children: stock.Percent >= 0 ? '▲' : '▼'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Ticker, \"Ir9D8e8g71T+thbYWf1GxoibkVM=\");\n_c = Ticker;\nexport default Ticker;\nvar _c;\n$RefreshReg$(_c, \"Ticker\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Skeleton","jsxDEV","_jsxDEV","Ticker","_s","stocks","setStocks","loading","setLoading","delay","setTimeout","clearTimeout","fetch","then","response","json","data","processedData","map","stock","color","Percent","catch","error","console","className","children","container","spacing","index","item","xs","md","variant","width","height","animation","fileName","_jsxFileName","lineNumber","columnNumber","Name","Price","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/Ticker.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport '../../assets/styles/custom.css';\r\n\r\nconst Ticker = () => {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [loading, setLoading] = useState(true); // State to track loading status\r\n\r\n  useEffect(() => {\r\n    // Simulate API fetch delay for demonstration purposes\r\n    const delay = setTimeout(() => {\r\n      setLoading(false); // Set loading to false after a delay (you can remove this in a real app)\r\n    }, 3000);\r\n\r\n    // In a real app, replace the code inside this useEffect with your API fetch logic\r\n\r\n    // Clean up the timeout on unmount\r\n    return () => clearTimeout(delay);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch stock data from your API\r\n    fetch('https://script.googleusercontent.com/macros/echo?user_content_key=6MbtMnAH8ZXd84aaH-UbWdfZe6UiDj-iUEEKOb1BmBYf9WTz1BR0xVLBZtHm3lwst4Ny7pcHGba3LDTkoqUAlHTDuuwUYz-ym5_BxDlH2jW0nuo2oDemN9CCS2h10ox_1xSncGQajx_ryfhECjZEnPeTRfTtTl31E7n6HlPkwXGCVvT2mUROOOaCQFgyCI-jNC3U55BpMAcbf-OKdJkmAjb8iiC6b9mkVfxHOPGXTDlwvughaiZuIQ&lib=MRK9JCV_hCBBxn1ilxmzDhCwsu2EIHoHF')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Process the data and set it in the state\r\n        const processedData = data.map((stock) => ({\r\n          ...stock,\r\n          color: stock.Percent < 0 ? 'red' : stock.Percent > 0 ? 'green' : 'black',\r\n        }));\r\n        setStocks(processedData);\r\n      })\r\n      .catch((error) => console.error('Error fetching stock data:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ticker-container\">\r\n      <Grid container spacing={2}>\r\n        {loading\r\n          ? // Display skeleton components while loading\r\n            [1, 2, 3, 4, 5, 6].map((index) => (\r\n              <Grid item xs={12} md={2} key={index} className=\"stock-grid-item\">\r\n                <Skeleton variant=\"rect\" width=\"100%\" height={80} animation=\"wave\" />\r\n              </Grid>\r\n            ))\r\n          : // Display stock data once loading is complete\r\n            stocks.map((stock, index) => (\r\n              <Grid item xs={12} md={2} key={index} className=\"stock-grid-item\">\r\n                <div className={`stock-card ${stock.color}`}>\r\n                  <div className=\"stock-info\"> {/* This is the new div for name and price */}\r\n                    <div className=\"stock-name\">\r\n                      {stock.Name}\r\n                    </div>\r\n                    <div className=\"stock-price\">\r\n                      {stock.Price}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"stock-percent\">\r\n                    {stock.Percent}% <span className=\"arrow\">{stock.Percent >= 0 ? '▲' : '▼'}</span>\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}