{"ast":null,"code":"import React from'react';import{Typography,Table,TableBody,TableCell,TableContainer,TableRow,Paper,Box,Skeleton}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SplitsDividendsTable=_ref=>{let{splitsDividendsData}=_ref;const splitsDividendsItems=[{label:'Forward Annual Dividend Rate',key:'forward_annual_dividend_rate'},{label:'Forward Annual Dividend Yield',key:'forward_annual_dividend_yield'},{label:'Payout Ratio',key:'payout_ratio'},{label:'Dividend Date',key:'dividend_date'},{label:'Ex-Dividend Date',key:'ex_dividend_date'},{label:'Last Split Factor',key:'last_split_factor'},{label:'Last Split Date',key:'last_split_date'}];const renderRow=(item,key)=>{const value=splitsDividendsData[item.key]||'N/A';return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{component:\"th\",scope:\"row\",children:item.label}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",sx:{fontWeight:'bold'},children:value})]},key);};return/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{margin:'auto',overflow:'hidden'},children:[/*#__PURE__*/_jsx(Box,{sx:{bgcolor:'primary.main',p:1},children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{color:'common.white',textAlign:'center'},children:\"Splits & Dividends\"})}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsx(Table,{\"aria-label\":\"Splits & Dividends Table\",children:/*#__PURE__*/_jsx(TableBody,{children:splitsDividendsData?splitsDividendsItems.filter(item=>item.key!=='general')// Filter out \"General\"\n.map((item,index)=>renderRow(item,index)):/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Skeleton,{variant:\"text\",width:100})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Skeleton,{variant:\"text\",width:100})})]})})})})]});};export default SplitsDividendsTable;","map":{"version":3,"names":["React","Typography","Table","TableBody","TableCell","TableContainer","TableRow","Paper","Box","Skeleton","jsx","_jsx","jsxs","_jsxs","SplitsDividendsTable","_ref","splitsDividendsData","splitsDividendsItems","label","key","renderRow","item","value","children","component","scope","align","sx","fontWeight","elevation","margin","overflow","bgcolor","p","variant","color","textAlign","filter","map","index","width"],"sources":["C:/Users/David/Desktop/Websites/stocks/frontend/src/components/stockpage/SplitsDividendsTable.js"],"sourcesContent":["import React from 'react';\r\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableRow, Paper, Box, Skeleton } from '@mui/material';\r\n\r\nconst SplitsDividendsTable = ({ splitsDividendsData }) => {\r\n  const splitsDividendsItems = [\r\n    { label: 'Forward Annual Dividend Rate', key: 'forward_annual_dividend_rate' },\r\n    { label: 'Forward Annual Dividend Yield', key: 'forward_annual_dividend_yield' },\r\n    { label: 'Payout Ratio', key: 'payout_ratio' },\r\n    { label: 'Dividend Date', key: 'dividend_date' },\r\n    { label: 'Ex-Dividend Date', key: 'ex_dividend_date' },\r\n    { label: 'Last Split Factor', key: 'last_split_factor' },\r\n    { label: 'Last Split Date', key: 'last_split_date' },\r\n  ];\r\n\r\n  const renderRow = (item, key) => {\r\n    const value = splitsDividendsData[item.key] || 'N/A';\r\n\r\n    return (\r\n      <TableRow key={key}>\r\n        <TableCell component=\"th\" scope=\"row\">{item.label}</TableCell>\r\n        <TableCell align=\"right\" sx={{ fontWeight: 'bold' }}>\r\n          {value}\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n      <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Splits & Dividends</Typography>\r\n      </Box>\r\n      <TableContainer>\r\n        <Table aria-label=\"Splits & Dividends Table\">\r\n          <TableBody>\r\n            {splitsDividendsData ? (\r\n              splitsDividendsItems\r\n                .filter(item => item.key !== 'general') // Filter out \"General\"\r\n                .map((item, index) => renderRow(item, index))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell>\r\n                  <Skeleton variant=\"text\" width={100} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Skeleton variant=\"text\" width={100} />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SplitsDividendsTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}