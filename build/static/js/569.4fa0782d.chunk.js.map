{"version":3,"file":"static/js/569.4fa0782d.chunk.js","mappings":"gNAQA,MA6GA,EA7G6BA,IAAkB,IAAjB,QAAEC,GAASD,EACvC,MAAME,GAAQC,EAAAA,EAAAA,KAwCRC,EAtC0BH,KAE9B,MAAMI,EAAU,CACdC,WAAY,EACZC,IAAK,EACLC,KAAM,EACNC,KAAM,EACNC,YAAa,GAITC,EAAaC,OAAOC,KAAKR,GAGzBS,EAAcH,EAAWI,QAAO,CAACC,EAAKC,KAC1C,MAAMC,EAAQjB,EAAQgB,GACtB,MAAqB,kBAAVC,GACTC,QAAQC,MAAM,4BAADC,OAA6BJ,EAAG,KAAKC,GAC3CF,GAEFA,EAAOX,EAAQY,GAAOC,CAAM,GAClC,GAGGI,EAAmBX,EAAWI,QAAO,CAACC,EAAKC,IAExCD,EADOf,EAAQgB,IAErB,GAEH,OAAyB,IAArBK,GACFH,QAAQC,MAAM,qCACP,QAIDN,EAAcQ,GAAkBC,QAAQ,EAAE,EAG9BC,CAAuBvB,GAYvCqB,EAAmB,CAAC,aAAc,MAAO,OAAQ,OAAQ,eAC5DP,QAAO,CAACC,EAAKC,IAAQD,EAAMf,EAAQgB,IAAM,GAE5C,OACEQ,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAW,EAAGC,GAAI,CAAEC,GAAI,EAAGC,SAAU,UAAWC,SAAA,EACrDC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACL,GAAI,CAAEM,EAAG,EAAGC,QAASjC,EAAMkC,QAAQC,QAAQC,KAAMC,UAAW,UAAWR,UAE1EC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,QAAQ,YAAYb,GAAI,CAAEc,MAAO,eAAgBH,UAAW,UAAWR,SAAC,8BAEtFN,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACL,GAAI,CAAEM,EAAG,GAAIH,SAAA,CACf9B,GACC+B,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACLC,MAAOC,WAAWzC,GAClB,kBAAgB,wBAChB0C,kBAAkB,OAClBC,KAAM,GACNC,MAzBI,CACZ,CAAEJ,MAAO,EAAGK,MAAO,eACnB,CAAEL,MAAO,EAAGK,MAAO,QACnB,CAAEL,MAAO,EAAGK,MAAO,QACnB,CAAEL,MAAO,EAAGK,MAAO,OACnB,CAAEL,MAAO,EAAGK,MAAO,eAqBXC,IAAK,EACLC,IAAK,EACLC,UAAQ,EACRxB,GAAI,CACFc,MAAOxC,EAAMkC,QAAQC,QAAQC,KAC7B,qBAAsB,CACpBe,gBAAiBnD,EAAMkC,QAAQkB,OAAOC,OAExC,yBAA0B,CACxBb,MAAOxC,EAAMkC,QAAQoB,KAAKnB,QAC1BoB,SAAU,OACVC,WAAY,SACZC,QAAS,SAEX,0BAA2B,CACzBN,gBAAiB,cACjBX,MAAOxC,EAAMkC,QAAQC,QAAQC,KAC7B,MAAO,CACLsB,WAAY,cACZlB,MAAOxC,EAAMkC,QAAQC,QAAQC,WAMrCN,EAAAA,EAAAA,KAAC6B,EAAAA,EAAQ,CAACC,UAAU,OAAOC,OAAQ,GAAIC,MAAO,OAEhDhC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,QAAQ,QAAQwB,MAAM,SAASvB,MAAM,UAAUd,GAAI,CAAEsC,GAAI,EAAGT,SAAU,QAAS1B,SACxF9B,EAAO,mBAAAoB,OAC+B,QAAlBjB,EAA0ByC,WAAWzC,GAAemB,QAAQ,GAAK,MAAK,cAAAF,OAAaC,EAAgB,cAEtHU,EAAAA,EAAAA,KAAC6B,EAAAA,EAAQ,CAACC,UAAU,OAAOC,OAAQ,GAAIC,MAAO,aAI9C,C","sources":["components/stockpage/AnalystOverallRating.js"],"sourcesContent":["import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Skeleton } from '@mui/material';\r\n\r\nconst AnalystOverallRating = ({ ratings }) => {\r\n  const theme = useTheme();\r\n\r\n  const calculateOverallRating = (ratings) => {\r\n    // Define the weight for each rating\r\n    const weights = {\r\n      strong_buy: 5,\r\n      buy: 4,\r\n      hold: 3,\r\n      sell: 2,\r\n      strong_sell: 1\r\n    };\r\n\r\n    // Extract only the rating keys that have corresponding weights\r\n    const ratingKeys = Object.keys(weights);\r\n\r\n    // Calculate the weighted sum of ratings\r\n    const weightedSum = ratingKeys.reduce((sum, key) => {\r\n      const count = ratings[key];\r\n      if (typeof count !== 'number') {\r\n        console.error(`Invalid rating count for ${key}:`, count);\r\n        return sum;\r\n      }\r\n      return sum + (weights[key] * count);\r\n    }, 0);\r\n\r\n    // Calculate the total number of analysts\r\n    const numberOfAnalysts = ratingKeys.reduce((sum, key) => {\r\n      const count = ratings[key];\r\n      return sum + count;\r\n    }, 0);\r\n\r\n    if (numberOfAnalysts === 0) {\r\n      console.error('Total number of analysts is zero.');\r\n      return 'N/A';\r\n    }\r\n\r\n    // Return the weighted average rounded to one decimal place\r\n    return (weightedSum / numberOfAnalysts).toFixed(1);\r\n  };\r\n\r\n  const overallRating = calculateOverallRating(ratings);\r\n\r\n  // Create marks for the Slider\r\n  const marks = [\r\n    { value: 1, label: 'Strong Sell' },\r\n    { value: 2, label: 'Sell' },\r\n    { value: 3, label: 'Hold' },\r\n    { value: 4, label: 'Buy' },\r\n    { value: 5, label: 'Strong Buy' },\r\n  ];\r\n\r\n  // Calculate the number of analysts separately to avoid including non-rating properties\r\n  const numberOfAnalysts = ['strong_buy', 'buy', 'hold', 'sell', 'strong_sell']\r\n    .reduce((sum, key) => sum + ratings[key], 0);\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ mb: 3, overflow: 'hidden' }}>\r\n      <Box sx={{ p: 1, bgcolor: theme.palette.primary.main, textAlign: 'center' }}>\r\n        {/* Typography component for the chart title */}\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Average Analyst Rating</Typography>\r\n      </Box>\r\n      <Box sx={{ p: 2 }}>\r\n        {ratings ? (\r\n          <Slider\r\n            value={parseFloat(overallRating)}\r\n            aria-labelledby=\"analyst-rating-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={0.1}\r\n            marks={marks}\r\n            min={1}\r\n            max={5}\r\n            disabled\r\n            sx={{\r\n              color: theme.palette.primary.main,\r\n              '& .MuiSlider-thumb': {\r\n                backgroundColor: theme.palette.common.white,\r\n              },\r\n              '& .MuiSlider-markLabel': {\r\n                color: theme.palette.text.primary,\r\n                fontSize: '12px', // Reduce font size if needed\r\n                whiteSpace: 'normal', // Allow text to wrap\r\n                display: 'block', // Set display to block to enable wrapping\r\n              },\r\n              '& .MuiSlider-valueLabel': {\r\n                backgroundColor: 'transparent',\r\n                color: theme.palette.primary.main,\r\n                '& *': {\r\n                  background: 'transparent',\r\n                  color: theme.palette.primary.main,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <Skeleton animation=\"wave\" height={20} width={200} />\r\n        )}\r\n        <Typography variant=\"body2\" align=\"center\" color=\"primary\" sx={{ mt: 2, fontSize: '14px' }}>\r\n          {ratings ? (\r\n            `Overall Rating: ${overallRating !== 'N/A' ? parseFloat(overallRating).toFixed(1) : 'N/A'} based on ${numberOfAnalysts} opinions`\r\n          ) : (\r\n            <Skeleton animation=\"wave\" height={20} width={300} />\r\n          )}\r\n        </Typography>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AnalystOverallRating;\r\n"],"names":["_ref","ratings","theme","useTheme","overallRating","weights","strong_buy","buy","hold","sell","strong_sell","ratingKeys","Object","keys","weightedSum","reduce","sum","key","count","console","error","concat","numberOfAnalysts","toFixed","calculateOverallRating","_jsxs","Paper","elevation","sx","mb","overflow","children","_jsx","Box","p","bgcolor","palette","primary","main","textAlign","Typography","variant","color","Slider","value","parseFloat","valueLabelDisplay","step","marks","label","min","max","disabled","backgroundColor","common","white","text","fontSize","whiteSpace","display","background","Skeleton","animation","height","width","align","mt"],"sourceRoot":""}