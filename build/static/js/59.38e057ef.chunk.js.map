{"version":3,"file":"static/js/59.38e057ef.chunk.js","mappings":"+MAKAA,EAAAA,GAAQC,SAASC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAaC,EAAAA,GAAcC,EAAAA,GAAOC,EAAAA,EAASC,EAAAA,IAExF,MAgFA,EAhF2BC,IAA4B,IAA3B,kBAAEC,GAAmBD,EAC/C,MAAME,GAAQC,EAAAA,EAAAA,KAOd,KAJsBF,GAAqBG,OAAOC,KAAKJ,GACpDK,QAAOC,GAAOA,EAAIC,WAAW,aAC7BC,MAAKF,GAAkC,OAA3BN,EAAkBM,MAI/B,OAAO,KAIT,MAAMG,EAAQN,OAAOC,KAAKJ,GAAmBK,QAAOC,GAAOA,EAAIC,WAAW,aAAYG,OAGhFC,GAAc,IAAIC,MAAOC,cAGzBC,EAAO,CACXC,OAHiBN,EAAMO,KAAIC,GAAQN,GAAeF,EAAMS,OAASC,SAASF,EAAKG,QAAQ,UAAW,QAIlGC,SAAU,CACR,CACEC,MAAO,iBACPR,KAAML,EAAMO,KAAIC,GAA8C,IAAtCM,WAAWvB,EAAkBiB,MACrDO,YAAavB,EAAMwB,QAAQC,KAAKC,KAChCC,gBAAiB3B,EAAMwB,QAAQC,KAAKG,MACpCC,MAAM,KAKNC,EAAU,CACdC,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,KAAM,+BACNC,KAAM,CACJC,KAAM,GACNC,OAAQ,QAEVC,MAAO,QACPC,QAAS,GACTZ,gBAAiB3B,EAAMwB,QAAQC,KAAKC,KACpCc,UAAW,UAEbC,OAAQ,CACNC,SAAU,QAGdC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,aAAa,EACbC,MAAO,CACLC,SAAU,SAASC,EAAOC,EAAOH,GAC/B,OAAOE,EAAME,QAAQ,GAAK,GAC5B,IAGJC,EAAG,CAAC,IAIR,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAW,EAAEC,SAAA,EAClBC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,EAAG,EAAGC,QAAS9D,EAAMwB,QAAQC,KAAKC,KAAMc,UAAW,UAAWiB,UACvEC,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CAACC,QAAQ,YAAYJ,GAAI,CAAEtB,MAAO,eAAgBE,UAAW,UAAWiB,SAAC,6BAEtFC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEK,WAAYjE,EAAMkE,QAAQ,GAAIC,YAAanE,EAAMkE,QAAQ,GAAIE,aAAcpE,EAAMkE,QAAQ,IAAKT,UACvGC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAES,OAAQ,SAAUZ,UAC3BC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACzD,KAAMA,EAAMiB,QAASA,UAGzB,C","sources":["components/stockpage/DividendYieldChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Box, Paper, Typography, useTheme } from '@mui/material';\r\n\r\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\r\n\r\nconst DividendYieldChart = ({ dividendYieldData }) => {\r\n  const theme = useTheme();\r\n\r\n  // Check if any of the 'yield_Y' properties contain non-null values\r\n  const dataAvailable = dividendYieldData && Object.keys(dividendYieldData)\r\n    .filter(key => key.startsWith('yield_Y'))\r\n    .some(key => dividendYieldData[key] !== null);\r\n\r\n  if (!dataAvailable) {\r\n    // If there's no dividend data available, return null (component won't render)\r\n    return null;\r\n  }\r\n\r\n  // Assuming dividendYieldData contains yearly data with keys like 'yield_Y1', 'yield_Y2', etc.\r\n  const years = Object.keys(dividendYieldData).filter(key => key.startsWith('yield_Y')).sort();\r\n\r\n  // Get the current year and calculate the years for the chart\r\n  const currentYear = new Date().getFullYear();\r\n  const chartYears = years.map(year => currentYear - (years.length - parseInt(year.replace('yield_Y', ''))));\r\n\r\n  const data = {\r\n    labels: chartYears,\r\n    datasets: [\r\n      {\r\n        label: 'Dividend Yield',\r\n        data: years.map(year => parseFloat(dividendYieldData[year]) * 100), // Convert to percentage\r\n        borderColor: theme.palette.info.main,\r\n        backgroundColor: theme.palette.info.light,\r\n        fill: false,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: 'Dividend Yields Over 5 Years',\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n        },\r\n        color: 'white',\r\n        padding: 10,\r\n        backgroundColor: theme.palette.info.main,\r\n        textAlign: 'center',\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          callback: function(value, index, ticks) {\r\n            return value.toFixed(2) + '%'; // Format as percentage\r\n          }\r\n        }\r\n      },\r\n      x: {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n      <Box sx={{ p: 1, bgcolor: theme.palette.info.main, textAlign: 'center' }}>\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>5 Year Dividend Yield</Typography>\r\n      </Box>\r\n      <Box sx={{ paddingTop: theme.spacing(1), paddingLeft: theme.spacing(2), paddingRight: theme.spacing(2) }}>\r\n        <Box sx={{ height: '300px' }}>\r\n          <Line data={data} options={options} />\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DividendYieldChart;\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","_ref","dividendYieldData","theme","useTheme","Object","keys","filter","key","startsWith","some","years","sort","currentYear","Date","getFullYear","data","labels","map","year","length","parseInt","replace","datasets","label","parseFloat","borderColor","palette","info","main","backgroundColor","light","fill","options","plugins","title","display","text","font","size","weight","color","padding","textAlign","legend","position","responsive","maintainAspectRatio","scales","y","beginAtZero","ticks","callback","value","index","toFixed","x","_jsxs","Paper","elevation","children","_jsx","Box","sx","p","bgcolor","Typography","variant","paddingTop","spacing","paddingLeft","paddingRight","height","Line"],"sourceRoot":""}