{"version":3,"file":"static/js/437.f954c978.chunk.js","mappings":"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","sources":["components/stockpage/BalanceSheet.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Skeleton,\r\n  Alert,\r\n} from '@mui/material';\r\nimport GetAppIcon from '@mui/icons-material/GetApp';\r\nimport Papa from 'papaparse';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst BalanceSheets = ({ balanceSheets }) => {\r\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\r\n  const [filteredBalanceSheets, setFilteredBalanceSheets] = useState([]);\r\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const filteredData = balanceSheets?.filter(sheet => sheet.type.toLowerCase() === selectedFrequency);\r\n    setFilteredBalanceSheets(filteredData);\r\n  }, [balanceSheets, selectedFrequency]);\r\n\r\n  if (!filteredBalanceSheets || filteredBalanceSheets.length === 0) {\r\n    return (\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Balance Sheet</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Balance Sheet\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Array(6).fill(null).map((_, index) => (\r\n                  <TableCell key={index}>\r\n                    <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Array(5).fill(null).map((_, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  {Array(6).fill(null).map((_, cellIndex) => (\r\n                    <TableCell key={cellIndex}>\r\n                      <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  const keysToFilterOut = [\r\n    'id',\r\n    'filing_date',\r\n    'currency_symbol',\r\n    'type',\r\n    'general',\r\n    'preferred_stock_and_other_adjustments',\r\n    'discontinued_operations',\r\n    'other_items',\r\n    'non_recurring',\r\n    'extraordinary_items',\r\n    'selling_and_marketing_expenses',\r\n    'minority_interest',\r\n    'effect_of_accounting_charges'\r\n  ];\r\n\r\n  const filteredKeys = Object.keys(filteredBalanceSheets[0]).filter(key => !keysToFilterOut.includes(key));\r\n\r\n  const renderTableCell = (rowIndex, key, value) => {\r\n    if (keysToFilterOut.includes(key)) {\r\n      return null;\r\n    }\r\n\r\n    if (key === 'date') {\r\n      return <TableCell key={`${rowIndex}-${key}`}>{value}</TableCell>;\r\n    }\r\n\r\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\r\n    const displayedValue = !isNaN(numericValue) ? numericValue.toLocaleString() : value;\r\n\r\n    return <TableCell key={`${rowIndex}-${key}`}>{displayedValue}</TableCell>;\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    if (!isAuthenticated) {\r\n      setShowLoginAlert(true); \r\n      return;\r\n    }\r\n\r\n    if (filteredBalanceSheets.length > 0) {\r\n      const csvData = Papa.unparse(filteredBalanceSheets);\r\n      const blob = new Blob([csvData], { type: 'text/csv' });\r\n      const url = window.URL.createObjectURL(blob);\r\n\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'balance_sheets.csv';\r\n\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showLoginAlert && (\r\n        <Alert severity=\"warning\" onClose={() => setShowLoginAlert(false)}>\r\n          Please <RouterLink to=\"/login\">login</RouterLink> to download the balance sheets.\r\n        </Alert>\r\n      )}\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'yearly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('yearly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Yearly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'quarterly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('quarterly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Quarterly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={downloadCSV}\r\n            sx={{ margin: 1 }}\r\n            startIcon={<GetAppIcon />}\r\n          >\r\n            Download CSV\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Balance Sheet</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Balance Sheet\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {filteredKeys.map((key, index) => (\r\n                  <TableCell key={index} sx={{ fontWeight: 'bold' }} className=\"MuiTableCell-sizeSmall\">\r\n                    {key.replace(/_/g, ' ').toUpperCase()}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n          <TableBody>\r\n            {filteredBalanceSheets.map((item, rowIndex) => (\r\n              <TableRow key={rowIndex}>\r\n                {filteredKeys.map((key) => (\r\n                  renderTableCell(rowIndex, key, item[key])\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BalanceSheets;\r\n"],"names":["_ref","balanceSheets","selectedFrequency","setSelectedFrequency","useState","filteredBalanceSheets","setFilteredBalanceSheets","showLoginAlert","setShowLoginAlert","isAuthenticated","useContext","AuthContext","useEffect","filteredData","filter","sheet","type","toLowerCase","length","_jsxs","Paper","elevation","sx","margin","overflow","children","_jsx","Box","bgcolor","p","Typography","variant","color","textAlign","TableContainer","Table","size","TableHead","TableRow","Array","fill","map","_","index","TableCell","Skeleton","width","animation","TableBody","rowIndex","cellIndex","keysToFilterOut","filteredKeys","Object","keys","key","includes","_Fragment","Alert","severity","onClose","RouterLink","to","Grid","container","spacing","item","Button","onClick","downloadCSV","csvData","Papa","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","startIcon","GetAppIcon","fontWeight","className","replace","toUpperCase","renderTableCell","value","concat","numericValue","parseFloat","displayedValue","isNaN","toLocaleString"],"sourceRoot":""}