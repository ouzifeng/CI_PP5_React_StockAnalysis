{"version":3,"file":"static/js/437.867fd6d7.chunk.js","mappings":"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","sources":["components/stockpage/BalanceSheet.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Skeleton,\r\n  Alert,\r\n} from '@mui/material';\r\nimport GetAppIcon from '@mui/icons-material/GetApp';\r\nimport Papa from 'papaparse';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst BalanceSheets = ({ balanceSheets }) => {\r\n  const [selectedFrequency, setSelectedFrequency] = useState('yearly');\r\n  const [filteredBalanceSheets, setFilteredBalanceSheets] = useState([]);\r\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const filteredData = balanceSheets?.filter(sheet => sheet.type.toLowerCase() === selectedFrequency);\r\n    setFilteredBalanceSheets(filteredData);\r\n  }, [balanceSheets, selectedFrequency]);\r\n\r\n  // Define the order and labels for the balance sheet metrics\r\n  const balanceSheetMetricsOrder = [\r\n    // Assets\r\n    'total_assets',\r\n    'cash_and_equivalents',\r\n    'short_term_investments',\r\n    'net_receivables',\r\n    'inventory',\r\n    'other_current_assets',\r\n    'total_current_assets',\r\n    'long_term_investments',\r\n    'property_plant_equipment',\r\n    'goodwill',\r\n    'intangible_assets',\r\n    'other_assets',\r\n    'non_current_assets_other',\r\n    'non_current_assets_total',\r\n    'deferred_long_term_asset_charges',\r\n\r\n    // Liabilities\r\n    'total_liabilities',\r\n    'short_term_debt',\r\n    'accounts_payable',\r\n    'current_deferred_revenue',\r\n    'total_current_liabilities',\r\n    'long_term_debt',\r\n    'long_term_debt_total',\r\n    'deferred_long_term_liabilities',\r\n    'other_current_liabilities',\r\n    'non_current_liabilities_other',\r\n    'non_current_liabilities_total',\r\n    'capital_lease_obligations',\r\n\r\n    // Equity\r\n    'total_stockholder_equity',\r\n    'common_stock',\r\n    'capital_stock',\r\n    'additional_paid_in_capital',\r\n    'retained_earnings',\r\n    'accumulated_other_comprehensive_income',\r\n    'treasury_stock',\r\n    'preferred_stock_total_equity',\r\n    'common_stock_total_equity',\r\n    'retained_earnings_total_equity',\r\n    'other_stockholder_equity',\r\n\r\n    // Other Items\r\n    'earning_assets',\r\n    'net_debt',\r\n    'short_long_term_debt',\r\n    'short_long_term_debt_total',\r\n    'net_tangible_assets',\r\n    'total_permanent_equity',\r\n    'noncontrolling_interest_in_consolidated_entity',\r\n    'temporary_equity_redeemable_noncontrolling_interests',\r\n    'accumulated_amortization',\r\n    'negative_goodwill',\r\n    'warrants',\r\n    'preferred_stock_redeemable',\r\n    'capital_surplus',\r\n    'liabilities_and_stockholders_equity',\r\n    'cash_and_short_term_investments',\r\n    'property_plant_and_equipment_gross',\r\n    'property_plant_and_equipment_net',\r\n    'accumulated_depreciation',\r\n    'net_working_capital',\r\n    'net_invested_capital',\r\n    'common_stock_shares_outstanding',\r\n  ];\r\n\r\n  const formatLabel = (key) => {\r\n    // Convert snake_case to Title Case\r\n    return key\r\n      .replace(/_/g, ' ')\r\n      .split(' ')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  };\r\n\r\n  // Prepare the data structure for rendering\r\n  const rows = balanceSheetMetricsOrder.map(key => {\r\n    const row = { metric: formatLabel(key) };\r\n    filteredBalanceSheets.forEach(sheet => {\r\n      row[sheet.date] = sheet[key];\r\n    });\r\n    return row;\r\n  });\r\n\r\n  const renderTableCell = (row, key) => {\r\n    const value = row[key];\r\n    const numericValue = typeof value === 'number' ? value : parseFloat(value);\r\n    const displayedValue = !isNaN(numericValue) ? numericValue.toLocaleString() : value;\r\n    return <TableCell key={key}>{displayedValue}</TableCell>;\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    if (!isAuthenticated) {\r\n      setShowLoginAlert(true);\r\n      return;\r\n    }\r\n\r\n    if (filteredBalanceSheets.length > 0) {\r\n      const csvData = Papa.unparse(filteredBalanceSheets);\r\n      const blob = new Blob([csvData], { type: 'text/csv' });\r\n      const url = window.URL.createObjectURL(blob);\r\n\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'balance_sheets.csv';\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    }\r\n  };\r\n\r\n  if (!filteredBalanceSheets || filteredBalanceSheets.length === 0) {\r\n    return (\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Balance Sheet</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Balance Sheet\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Array(6).fill(null).map((_, index) => (\r\n                  <TableCell key={index}>\r\n                    <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Array(5).fill(null).map((_, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  {Array(6).fill(null).map((_, cellIndex) => (\r\n                    <TableCell key={cellIndex}>\r\n                      <Skeleton variant=\"text\" width={100} animation=\"wave\" />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showLoginAlert && (\r\n        <Alert severity=\"warning\" onClose={() => setShowLoginAlert(false)}>\r\n          Please <RouterLink to=\"/login\">login</RouterLink> to download the balance sheets.\r\n        </Alert>\r\n      )}\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'yearly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('yearly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Yearly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant={selectedFrequency === 'quarterly' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedFrequency('quarterly')}\r\n            sx={{ margin: 1 }}\r\n          >\r\n            Quarterly\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={downloadCSV}\r\n            sx={{ margin: 1 }}\r\n            startIcon={<GetAppIcon />}\r\n          >\r\n            Download CSV\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n        <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Balance Sheet</Typography>\r\n        </Box>\r\n        <TableContainer>\r\n          <Table aria-label=\"Balance Sheet\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ fontWeight: 'bold' }}>Metric</TableCell>\r\n                {filteredBalanceSheets.map((sheet, index) => (\r\n                  <TableCell key={index} align=\"right\" sx={{ fontWeight: 'bold' }}>\r\n                    {sheet.date}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  <TableCell component=\"th\" scope=\"row\" sx={{ fontWeight: 'bold' }}>\r\n                    {row.metric}\r\n                  </TableCell>\r\n                  {Object.keys(row).filter(key => key !== 'metric').map(dateKey => (\r\n                    renderTableCell(row, dateKey)\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BalanceSheets;\r\n"],"names":["_ref","balanceSheets","selectedFrequency","setSelectedFrequency","useState","filteredBalanceSheets","setFilteredBalanceSheets","showLoginAlert","setShowLoginAlert","isAuthenticated","useContext","AuthContext","useEffect","filteredData","filter","sheet","type","toLowerCase","formatLabel","key","replace","split","map","word","charAt","toUpperCase","slice","join","rows","row","metric","forEach","date","length","_jsxs","_Fragment","children","Alert","severity","onClose","_jsx","RouterLink","to","Grid","container","spacing","item","Button","variant","onClick","sx","margin","downloadCSV","csvData","Papa","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","startIcon","GetAppIcon","Paper","elevation","overflow","Box","bgcolor","p","Typography","color","textAlign","TableContainer","Table","size","TableHead","TableRow","TableCell","fontWeight","index","align","TableBody","rowIndex","component","scope","Object","keys","dateKey","renderTableCell","value","numericValue","parseFloat","displayedValue","isNaN","toLocaleString","Array","fill","_","Skeleton","width","animation","cellIndex"],"sourceRoot":""}