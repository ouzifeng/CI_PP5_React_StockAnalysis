{"version":3,"file":"static/js/918.6b4b52b3.chunk.js","mappings":"6OAGA,MAmEA,EAnE6BA,IAAuC,IAAtC,oBAAEC,EAAmB,QAAEC,GAASF,EAC5D,MAAMG,EAAiBD,EAAQE,iBAAmB,IAqClD,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAW,EAAGC,GAAI,CAAEC,OAAQ,OAAQC,SAAU,UAAWC,SAAA,EAC9DC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACL,GAAI,CAAEM,QAAS,eAAgBC,EAAG,GAAIJ,UACzCC,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,QAAQ,YAAYT,GAAI,CAAEU,MAAO,eAAgBC,UAAW,UAAWR,SAAC,0BAEtFC,EAAAA,EAAAA,KAACQ,EAAAA,EAAc,CAAAT,UACbC,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CAAC,aAAW,2BAA0BV,UAC1CC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CAAAX,SACPV,EA3CkB,CAC3B,CAAEsB,MAAO,0BAA2BC,IAAK,gCACzC,CAAED,MAAO,gCAAiCC,IAAK,iCAC/C,CAAED,MAAO,eAAgBC,IAAK,gBAC9B,CAAED,MAAO,gBAAiBC,IAAK,iBAC/B,CAAED,MAAO,mBAAoBC,IAAK,oBAClC,CAAED,MAAO,oBAAqBC,IAAK,qBACnC,CAAED,MAAO,kBAAmBC,IAAK,oBAsCpBC,QAAOC,GAAqB,YAAbA,EAAKF,MACpBG,KAAI,CAACD,EAAME,IApCRC,EAACH,EAAMF,KACvB,IAAIM,EAAQ7B,EAAoByB,EAAKF,KAcrC,OAVEM,EADe,kCAAbJ,EAAKF,KAAwD,iBAAbE,EAAKF,IAC/CM,EAAK,GAAAC,QAAe,IAARD,GAAaE,QAAQ,GAAE,KAAM,MAEzCF,GAAS,MAIF,iCAAbJ,EAAKF,MACPM,EAAQA,EAAK,GAAAC,OAAM5B,GAAc4B,OAAID,GAAW,QAIhDzB,EAAAA,EAAAA,MAAC4B,EAAAA,EAAQ,CAAAtB,SAAA,EACPC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACC,UAAU,KAAKC,MAAM,MAAKzB,SAAEe,EAAKH,SAC5CX,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACG,MAAM,QAAQ7B,GAAI,CAAE8B,WAAY,QAAS3B,SACjDmB,MAHUN,EAKJ,EAeqBK,CAAUH,EAAME,MAExCvB,EAAAA,EAAAA,MAAC4B,EAAAA,EAAQ,CAAAtB,SAAA,EACPC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAAAvB,UACRC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACtB,QAAQ,OAAOuB,MAAO,SAElC5B,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAAAvB,UACRC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAACtB,QAAQ,OAAOuB,MAAO,mBAOtC,C","sources":["components/stockpage/SplitsDividendsTable.js"],"sourcesContent":["import React from 'react';\r\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableRow, Paper, Box, Skeleton } from '@mui/material';\r\n\r\nconst SplitsDividendsTable = ({ splitsDividendsData, general }) => {\r\n  const currencySymbol = general.currency_symbol || '$';\r\n\r\n  const splitsDividendsItems = [\r\n    { label: 'Forward Annual Dividend', key: 'forward_annual_dividend_rate' },\r\n    { label: 'Forward Annual Dividend Yield', key: 'forward_annual_dividend_yield' },\r\n    { label: 'Payout Ratio', key: 'payout_ratio' },\r\n    { label: 'Dividend Date', key: 'dividend_date' },\r\n    { label: 'Ex-Dividend Date', key: 'ex_dividend_date' },\r\n    { label: 'Last Split Factor', key: 'last_split_factor' },\r\n    { label: 'Last Split Date', key: 'last_split_date' },\r\n  ];\r\n\r\n  const renderRow = (item, key) => {\r\n    let value = splitsDividendsData[item.key];\r\n\r\n    // Check if the value should be formatted as a percentage\r\n    if (item.key === 'forward_annual_dividend_yield' || item.key === 'payout_ratio') {\r\n      value = value ? `${(value * 100).toFixed(2)}%` : 'N/A';\r\n    } else {\r\n      value = value || 'N/A';\r\n    }\r\n\r\n    // Prepend currency symbol for \"Forward Annual Dividend Rate\"\r\n    if (item.key === 'forward_annual_dividend_rate') {\r\n      value = value ? `${currencySymbol}${(value)}` : 'N/A';\r\n    }\r\n\r\n    return (\r\n      <TableRow key={key}>\r\n        <TableCell component=\"th\" scope=\"row\">{item.label}</TableCell>\r\n        <TableCell align=\"right\" sx={{ fontWeight: 'bold' }}>\r\n          {value}\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ margin: 'auto', overflow: 'hidden' }}>\r\n      <Box sx={{ bgcolor: 'primary.main', p: 1 }}>\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>Splits & Dividends</Typography>\r\n      </Box>\r\n      <TableContainer>\r\n        <Table aria-label=\"Splits & Dividends Table\">\r\n          <TableBody>\r\n            {splitsDividendsData ? (\r\n              splitsDividendsItems\r\n                .filter(item => item.key !== 'general') // Filter out \"General\"\r\n                .map((item, index) => renderRow(item, index))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell>\r\n                  <Skeleton variant=\"text\" width={100} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Skeleton variant=\"text\" width={100} />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SplitsDividendsTable;\r\n"],"names":["_ref","splitsDividendsData","general","currencySymbol","currency_symbol","_jsxs","Paper","elevation","sx","margin","overflow","children","_jsx","Box","bgcolor","p","Typography","variant","color","textAlign","TableContainer","Table","TableBody","label","key","filter","item","map","index","renderRow","value","concat","toFixed","TableRow","TableCell","component","scope","align","fontWeight","Skeleton","width"],"sourceRoot":""}