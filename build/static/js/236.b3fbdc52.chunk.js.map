{"version":3,"file":"static/js/236.b3fbdc52.chunk.js","mappings":"0NAMAA,EAAAA,GAAQC,SAASC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAaC,EAAAA,GAAcC,EAAAA,GAAOC,EAAAA,EAASC,EAAAA,IAExF,MA4FA,EA5FkBC,IAA2B,IAA1B,iBAAEC,GAAkBD,EACrC,MAAME,GAAQC,EAAAA,EAAAA,KAGRC,EAAaH,EAChBI,QAAOC,GAAsB,WAAdA,EAAKC,OACpBC,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKF,EAAEG,MAAQ,IAAID,KAAKD,EAAEE,QAE1CC,EAAO,CACXC,OAAQV,EAAWW,KAAIC,GAAaA,EAAUJ,OAC9CK,SAAU,CACR,CACEC,MAAO,gBACPL,KAAMT,EAAWW,KAAIC,GAAaG,WAAWH,EAAUI,iBACvDC,YAAanB,EAAMoB,QAAQC,QAAQC,KACnCC,gBAAiBvB,EAAMoB,QAAQC,QAAQG,MACvCC,MAAM,GAER,CACET,MAAO,eACPL,KAAMT,EAAWW,KAAIC,GAAaG,WAAWH,EAAUY,gBACvDP,YAAanB,EAAMoB,QAAQO,UAAUL,KACrCC,gBAAiBvB,EAAMoB,QAAQO,UAAUH,MACzCC,MAAM,GAER,CACET,MAAO,aACPL,KAAMT,EAAWW,KAAIC,GAAaG,WAAWH,EAAUc,cACvDT,YAAanB,EAAMoB,QAAQS,QAAQP,KACnCC,gBAAiBvB,EAAMoB,QAAQS,QAAQL,MACvCC,MAAM,KAKNK,EAAU,CACdC,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,KAAM,iCAENC,KAAM,CACJC,KAAM,GACNC,OAAQ,QAEVC,MAAO,QACPC,QAAS,GACThB,gBAAiBvB,EAAMoB,QAAQC,QAAQC,KACvCkB,UAAW,UAEbC,OAAQ,CACNC,SAAU,QAGdC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,aAAa,EACbC,MAAO,CACLC,SAAU,SAASC,EAAOC,EAAOH,GAC/B,OAAOE,EAAQ,IAAM,GACvB,IAGJE,EAAG,CAAC,IAKR,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAW,EAAEC,SAAA,EAElBC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,EAAG,EAAGC,QAAS7D,EAAMoB,QAAQC,QAAQC,KAAMkB,UAAW,UAAWgB,UAE1EC,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CAACC,QAAQ,YAAYJ,GAAI,CAAErB,MAAO,eAAgBE,UAAW,UAAWgB,SAAC,qBAEtFC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEK,WAAYhE,EAAMiE,QAAQ,GAAIC,YAAalE,EAAMiE,QAAQ,GAAIE,aAAcnE,EAAMiE,QAAQ,IAAKT,UACvGC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAES,OAAQ,SAAUZ,SAC1BtD,GAECuD,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAAC1D,KAAMA,EAAMmB,QAASA,KAG3B2B,EAAAA,EAAAA,KAACa,EAAAA,EAAQ,CAACP,QAAQ,cAAcK,OAAQ,YAIxC,C","sources":["components/stockpage/CagrChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Box, Paper, Typography, useTheme } from '@mui/material';\r\nimport { Skeleton } from '@mui/material';\r\n\r\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\r\n\r\nconst CagrChart = ({ incomeStatements }) => {\r\n  const theme = useTheme();\r\n\r\n  // Filter only 'yearly' type and sort by date\r\n  const yearlyData = incomeStatements\r\n    .filter(item => item.type === 'yearly')\r\n    .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n  const data = {\r\n    labels: yearlyData.map(financial => financial.date),\r\n    datasets: [\r\n      {\r\n        label: 'Total Revenue',\r\n        data: yearlyData.map(financial => parseFloat(financial.total_revenue)),\r\n        borderColor: theme.palette.primary.main,\r\n        backgroundColor: theme.palette.primary.light,\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Gross Profit',\r\n        data: yearlyData.map(financial => parseFloat(financial.gross_profit)),\r\n        borderColor: theme.palette.secondary.main,\r\n        backgroundColor: theme.palette.secondary.light,\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Net Income',\r\n        data: yearlyData.map(financial => parseFloat(financial.net_income)),\r\n        borderColor: theme.palette.success.main,\r\n        backgroundColor: theme.palette.success.light,\r\n        fill: false,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: 'Yearly Financials Over 5 Years',\r\n        // Customize title styling\r\n        font: {\r\n          size: 16, // Adjust font size as needed\r\n          weight: 'bold', // Make it bold\r\n        },\r\n        color: 'white', // Text color\r\n        padding: 10, // Add padding\r\n        backgroundColor: theme.palette.primary.main, // Background color\r\n        textAlign: 'center', // Center the text\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n        ticks: {\r\n          callback: function(value, index, ticks) {\r\n            return value / 1e9 + 'B';\r\n          }\r\n        }\r\n      },\r\n      x: {}\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n      {/* Box component for the chart title */}\r\n      <Box sx={{ p: 1, bgcolor: theme.palette.primary.main, textAlign: 'center' }}>\r\n        {/* Typography component for the chart title */}\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'common.white', textAlign: 'center' }}>5 Year Income</Typography>\r\n      </Box>\r\n      <Box sx={{ paddingTop: theme.spacing(1), paddingLeft: theme.spacing(2), paddingRight: theme.spacing(2) }}>\r\n        <Box sx={{ height: '300px' }}>\r\n          {yearlyData ? (\r\n            // Render the chart if yearlyData is available\r\n            <Line data={data} options={options} />\r\n          ) : (\r\n            // Render a skeleton loader if yearlyData is not available\r\n            <Skeleton variant=\"rectangular\" height={300} />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CagrChart;\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","_ref","incomeStatements","theme","useTheme","yearlyData","filter","item","type","sort","a","b","Date","date","data","labels","map","financial","datasets","label","parseFloat","total_revenue","borderColor","palette","primary","main","backgroundColor","light","fill","gross_profit","secondary","net_income","success","options","plugins","title","display","text","font","size","weight","color","padding","textAlign","legend","position","responsive","maintainAspectRatio","scales","y","beginAtZero","ticks","callback","value","index","x","_jsxs","Paper","elevation","children","_jsx","Box","sx","p","bgcolor","Typography","variant","paddingTop","spacing","paddingLeft","paddingRight","height","Line","Skeleton"],"sourceRoot":""}